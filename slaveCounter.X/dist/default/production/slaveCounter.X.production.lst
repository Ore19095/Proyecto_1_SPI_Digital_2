

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Mon Feb 15 15:59:42 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	intentry,global,class=CODE,delta=2
    12                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    13                           	dabs	1,0x7E,2
    14  0000                     
    15                           ; Version 2.20
    16                           ; Generated 12/02/2020 GMT
    17                           ; 
    18                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    19                           ; All rights reserved.
    20                           ; 
    21                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    22                           ; 
    23                           ; Redistribution and use in source and binary forms, with or without modification, are
    24                           ; permitted provided that the following conditions are met:
    25                           ; 
    26                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    27                           ;        conditions and the following disclaimer.
    28                           ; 
    29                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    30                           ;        of conditions and the following disclaimer in the documentation and/or other
    31                           ;        materials provided with the distribution.
    32                           ; 
    33                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    34                           ;        software without specific prior written permission.
    35                           ; 
    36                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    37                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    38                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    39                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    40                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    41                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    42                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    43                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    44                           ; 
    45                           ; 
    46                           ; Code-generator required, PIC16F887 Definitions
    47                           ; 
    48                           ; SFR Addresses
    49  0000                     	;# 
    50  0001                     	;# 
    51  0002                     	;# 
    52  0003                     	;# 
    53  0004                     	;# 
    54  0005                     	;# 
    55  0006                     	;# 
    56  0007                     	;# 
    57  0008                     	;# 
    58  0009                     	;# 
    59  000A                     	;# 
    60  000B                     	;# 
    61  000C                     	;# 
    62  000D                     	;# 
    63  000E                     	;# 
    64  000E                     	;# 
    65  000F                     	;# 
    66  0010                     	;# 
    67  0011                     	;# 
    68  0012                     	;# 
    69  0013                     	;# 
    70  0014                     	;# 
    71  0015                     	;# 
    72  0015                     	;# 
    73  0016                     	;# 
    74  0017                     	;# 
    75  0018                     	;# 
    76  0019                     	;# 
    77  001A                     	;# 
    78  001B                     	;# 
    79  001B                     	;# 
    80  001C                     	;# 
    81  001D                     	;# 
    82  001E                     	;# 
    83  001F                     	;# 
    84  0081                     	;# 
    85  0085                     	;# 
    86  0086                     	;# 
    87  0087                     	;# 
    88  0088                     	;# 
    89  0089                     	;# 
    90  008C                     	;# 
    91  008D                     	;# 
    92  008E                     	;# 
    93  008F                     	;# 
    94  0090                     	;# 
    95  0091                     	;# 
    96  0092                     	;# 
    97  0093                     	;# 
    98  0093                     	;# 
    99  0093                     	;# 
   100  0094                     	;# 
   101  0095                     	;# 
   102  0096                     	;# 
   103  0097                     	;# 
   104  0098                     	;# 
   105  0099                     	;# 
   106  009A                     	;# 
   107  009B                     	;# 
   108  009C                     	;# 
   109  009D                     	;# 
   110  009E                     	;# 
   111  009F                     	;# 
   112  0105                     	;# 
   113  0107                     	;# 
   114  0108                     	;# 
   115  0109                     	;# 
   116  010C                     	;# 
   117  010C                     	;# 
   118  010D                     	;# 
   119  010E                     	;# 
   120  010F                     	;# 
   121  0185                     	;# 
   122  0187                     	;# 
   123  0188                     	;# 
   124  0189                     	;# 
   125  018C                     	;# 
   126  018D                     	;# 
   127  0000                     	;# 
   128  0001                     	;# 
   129  0002                     	;# 
   130  0003                     	;# 
   131  0004                     	;# 
   132  0005                     	;# 
   133  0006                     	;# 
   134  0007                     	;# 
   135  0008                     	;# 
   136  0009                     	;# 
   137  000A                     	;# 
   138  000B                     	;# 
   139  000C                     	;# 
   140  000D                     	;# 
   141  000E                     	;# 
   142  000E                     	;# 
   143  000F                     	;# 
   144  0010                     	;# 
   145  0011                     	;# 
   146  0012                     	;# 
   147  0013                     	;# 
   148  0014                     	;# 
   149  0015                     	;# 
   150  0015                     	;# 
   151  0016                     	;# 
   152  0017                     	;# 
   153  0018                     	;# 
   154  0019                     	;# 
   155  001A                     	;# 
   156  001B                     	;# 
   157  001B                     	;# 
   158  001C                     	;# 
   159  001D                     	;# 
   160  001E                     	;# 
   161  001F                     	;# 
   162  0081                     	;# 
   163  0085                     	;# 
   164  0086                     	;# 
   165  0087                     	;# 
   166  0088                     	;# 
   167  0089                     	;# 
   168  008C                     	;# 
   169  008D                     	;# 
   170  008E                     	;# 
   171  008F                     	;# 
   172  0090                     	;# 
   173  0091                     	;# 
   174  0092                     	;# 
   175  0093                     	;# 
   176  0093                     	;# 
   177  0093                     	;# 
   178  0094                     	;# 
   179  0095                     	;# 
   180  0096                     	;# 
   181  0097                     	;# 
   182  0098                     	;# 
   183  0099                     	;# 
   184  009A                     	;# 
   185  009B                     	;# 
   186  009C                     	;# 
   187  009D                     	;# 
   188  009E                     	;# 
   189  009F                     	;# 
   190  0105                     	;# 
   191  0107                     	;# 
   192  0108                     	;# 
   193  0109                     	;# 
   194  010C                     	;# 
   195  010C                     	;# 
   196  010D                     	;# 
   197  010E                     	;# 
   198  010F                     	;# 
   199  0185                     	;# 
   200  0187                     	;# 
   201  0188                     	;# 
   202  0189                     	;# 
   203  018C                     	;# 
   204  018D                     	;# 
   205                           
   206                           	psect	idataCOMMON
   207  00AB                     __pidataCOMMON:
   208                           
   209                           ;initializer for _portbActual
   210  00AB  34FF               	retlw	255
   211                           
   212                           ;initializer for _portbAnterior
   213  00AC  34FF               	retlw	255
   214  000C                     _PIR1bits	set	12
   215  0006                     _PORTB	set	6
   216  0012                     _T2CON	set	18
   217  000D                     _PIR2	set	13
   218  000B                     _INTCONbits	set	11
   219  0008                     _PORTD	set	8
   220  008C                     _PIE1bits	set	140
   221  0081                     _OPTION_REGbits	set	129
   222  0096                     _IOCB	set	150
   223  0088                     _TRISD	set	136
   224  0087                     _TRISC	set	135
   225  0086                     _TRISB	set	134
   226  0085                     _TRISA	set	133
   227  0189                     _ANSELH	set	393
   228  0188                     _ANSEL	set	392
   229                           
   230                           	psect	cinit
   231  000F                     start_initialization:	
   232                           ; #config settings
   233                           
   234  000F                     __initialization:
   235                           
   236                           ; Initialize objects allocated to COMMON
   237  000F  120A  118A  20AB  120A  118A  	fcall	__pidataCOMMON	;fetch initializer
   238  0014  00FA               	movwf	__pdataCOMMON& (0+127)
   239  0015  120A  118A  20AC  120A  118A  	fcall	__pidataCOMMON+1	;fetch initializer
   240  001A  00FB               	movwf	(__pdataCOMMON+1)& (0+127)
   241                           
   242                           ; Clear objects allocated to COMMON
   243  001B  01F0               	clrf	__pbssCOMMON& (0+127)
   244  001C  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
   245  001D  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
   246  001E  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
   247  001F  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
   248  0020  01F5               	clrf	(__pbssCOMMON+5)& (0+127)
   249  0021                     end_of_initialization:	
   250                           ;End of C runtime variable initialization code
   251                           
   252  0021                     __end_of__initialization:
   253  0021  0183               	clrf	3
   254  0022  120A  118A  2888   	ljmp	_main	;jump to C main() function
   255                           
   256                           	psect	bssCOMMON
   257  0070                     __pbssCOMMON:
   258  0070                     _timeB2:
   259  0070                     	ds	2
   260  0072                     _timeB1:
   261  0072                     	ds	2
   262  0074                     _micros:
   263  0074                     	ds	2
   264                           
   265                           	psect	dataCOMMON
   266  007A                     __pdataCOMMON:
   267  007A                     _portbActual:
   268  007A                     	ds	1
   269  007B                     _portbAnterior:
   270  007B                     	ds	1
   271                           
   272                           	psect	cstackCOMMON
   273  0076                     __pcstackCOMMON:
   274  0076                     ?_main:
   275  0076                     ?_isr:	
   276                           ; 1 bytes @ 0x0
   277                           
   278  0076                     ??_isr:	
   279                           ; 1 bytes @ 0x0
   280                           
   281                           
   282                           ; 1 bytes @ 0x0
   283  0076                     	ds	4
   284  007A                     ??_main:
   285                           
   286                           	psect	maintext
   287  0088                     __pmaintext:	
   288                           ; 1 bytes @ 0x4
   289 ;;
   290 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   291 ;;
   292 ;; *************** function _main *****************
   293 ;; Defined at:
   294 ;;		line 39 in file "main.c"
   295 ;; Parameters:    Size  Location     Type
   296 ;;		None
   297 ;; Auto vars:     Size  Location     Type
   298 ;;  adc0            2    0        PTR unsigned char 
   299 ;; Return value:  Size  Location     Type
   300 ;;                  1    wreg      void 
   301 ;; Registers used:
   302 ;;		wreg, status,2
   303 ;; Tracked objects:
   304 ;;		On entry : B00/0
   305 ;;		On exit  : 0/0
   306 ;;		Unchanged: 0/0
   307 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   308 ;;      Params:         0       0       0       0       0
   309 ;;      Locals:         0       0       0       0       0
   310 ;;      Temps:          0       0       0       0       0
   311 ;;      Totals:         0       0       0       0       0
   312 ;;Total ram usage:        0 bytes
   313 ;; Hardware stack levels required when called:    1
   314 ;; This function calls:
   315 ;;		Nothing
   316 ;; This function is called by:
   317 ;;		Startup code after reset
   318 ;; This function uses a non-reentrant model
   319 ;;
   320                           
   321                           
   322                           ;psect for function _main
   323  0088                     _main:
   324  0088                     l651:	
   325                           ;incstack = 0
   326                           ; Regs used in _main: [wreg+status,2]
   327                           
   328                           
   329                           ;main.c: 40:     ANSEL = 1;
   330  0088  3001               	movlw	1
   331  0089  1683               	bsf	3,5	;RP0=1, select bank3
   332  008A  1703               	bsf	3,6	;RP1=1, select bank3
   333  008B  0088               	movwf	8	;volatile
   334  008C                     l653:
   335                           
   336                           ;main.c: 41:     ANSELH = 0;
   337  008C  0189               	clrf	9	;volatile
   338  008D                     l655:
   339                           
   340                           ;main.c: 42:     TRISA = 1;
   341  008D  3001               	movlw	1
   342  008E  1683               	bsf	3,5	;RP0=1, select bank1
   343  008F  1303               	bcf	3,6	;RP1=0, select bank1
   344  0090  0085               	movwf	5	;volatile
   345  0091                     l657:
   346                           
   347                           ;main.c: 43:     TRISB = 255;
   348  0091  30FF               	movlw	255
   349  0092  0086               	movwf	6	;volatile
   350  0093                     l659:
   351                           
   352                           ;main.c: 44:     TRISC = 0;
   353  0093  0187               	clrf	7	;volatile
   354  0094                     l661:
   355                           
   356                           ;main.c: 45:     TRISD = 0;
   357  0094  0188               	clrf	8	;volatile
   358  0095                     l663:
   359                           
   360                           ;main.c: 46:     IOCB = 255;
   361  0095  30FF               	movlw	255
   362  0096  0096               	movwf	22	;volatile
   363                           
   364                           ;main.c: 47:     PORTD = 0;
   365  0097  1283               	bcf	3,5	;RP0=0, select bank0
   366  0098  1303               	bcf	3,6	;RP1=0, select bank0
   367  0099  0188               	clrf	8	;volatile
   368  009A                     l665:
   369                           
   370                           ;main.c: 48:     OPTION_REGbits.nRBPU = 0;
   371  009A  1683               	bsf	3,5	;RP0=1, select bank1
   372  009B  1303               	bcf	3,6	;RP1=0, select bank1
   373  009C  1381               	bcf	1,7	;volatile
   374  009D                     l667:
   375                           
   376                           ;main.c: 50:     INTCONbits.GIE = 1;
   377  009D  178B               	bsf	11,7	;volatile
   378  009E                     l669:
   379                           
   380                           ;main.c: 51:     INTCONbits.PEIE = 1;
   381  009E  170B               	bsf	11,6	;volatile
   382  009F                     l671:
   383                           
   384                           ;main.c: 52:     INTCONbits.RBIE = 1;
   385  009F  158B               	bsf	11,3	;volatile
   386  00A0                     l673:
   387                           
   388                           ;main.c: 53:     PIE1bits.TMR2IE = 1;
   389  00A0  148C               	bsf	12,1	;volatile
   390  00A1                     l675:
   391                           
   392                           ;main.c: 55:     PIR2 = 50;
   393  00A1  3032               	movlw	50
   394  00A2  1283               	bcf	3,5	;RP0=0, select bank0
   395  00A3  1303               	bcf	3,6	;RP1=0, select bank0
   396  00A4  008D               	movwf	13	;volatile
   397  00A5                     l677:
   398                           
   399                           ;main.c: 58:     T2CON = 0b00000100;
   400  00A5  3004               	movlw	4
   401  00A6  0092               	movwf	18	;volatile
   402  00A7                     l45:	
   403                           ;main.c: 61:     uint8_t* adc0;;main.c: 62:     while(1){
   404                           
   405  00A7                     l46:	
   406                           ;main.c: 64:     }
   407                           
   408  00A7  28A7               	goto	l45
   409  00A8  120A  118A  280C   	ljmp	start
   410  00AB                     __end_of_main:
   411                           
   412                           	psect	text1
   413  0025                     __ptext1:	
   414 ;; *************** function _isr *****************
   415 ;; Defined at:
   416 ;;		line 69 in file "main.c"
   417 ;; Parameters:    Size  Location     Type
   418 ;;		None
   419 ;; Auto vars:     Size  Location     Type
   420 ;;		None
   421 ;; Return value:  Size  Location     Type
   422 ;;                  1    wreg      void 
   423 ;; Registers used:
   424 ;;		wreg, status,2, status,0
   425 ;; Tracked objects:
   426 ;;		On entry : 0/0
   427 ;;		On exit  : 0/0
   428 ;;		Unchanged: 0/0
   429 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   430 ;;      Params:         0       0       0       0       0
   431 ;;      Locals:         0       0       0       0       0
   432 ;;      Temps:          4       0       0       0       0
   433 ;;      Totals:         4       0       0       0       0
   434 ;;Total ram usage:        4 bytes
   435 ;; Hardware stack levels used:    1
   436 ;; This function calls:
   437 ;;		Nothing
   438 ;; This function is called by:
   439 ;;		Interrupt level 1
   440 ;; This function uses a non-reentrant model
   441 ;;
   442                           
   443                           
   444                           ;psect for function _isr
   445  0025                     _isr:
   446  0025                     i1l679:
   447                           
   448                           ;main.c: 70:     if (INTCONbits.RBIF){
   449  0025  1C0B               	btfss	11,0	;volatile
   450  0026  2828               	goto	u1_21
   451  0027  2829               	goto	u1_20
   452  0028                     u1_21:
   453  0028  2874               	goto	i1l705
   454  0029                     u1_20:
   455  0029                     i1l681:
   456                           
   457                           ;main.c: 71:         portbAnterior = portbActual;
   458  0029  087A               	movf	_portbActual,w	;volatile
   459  002A  00F6               	movwf	??_isr
   460  002B  0876               	movf	??_isr,w
   461  002C  00FB               	movwf	_portbAnterior	;volatile
   462                           
   463                           ;main.c: 72:         portbActual = PORTB;
   464  002D  1283               	bcf	3,5	;RP0=0, select bank0
   465  002E  1303               	bcf	3,6	;RP1=0, select bank0
   466  002F  0806               	movf	6,w	;volatile
   467  0030  00F6               	movwf	??_isr
   468  0031  0876               	movf	??_isr,w
   469  0032  00FA               	movwf	_portbActual	;volatile
   470  0033                     i1l683:
   471                           
   472                           ;main.c: 74:         if ((portbAnterior & 1) == 0 && (portbActual & 1) == 1){
   473  0033  187B               	btfsc	_portbAnterior,0	;volatile
   474  0034  2836               	goto	u2_21
   475  0035  2837               	goto	u2_20
   476  0036                     u2_21:
   477  0036  2854               	goto	i1l693
   478  0037                     u2_20:
   479  0037                     i1l685:
   480  0037  1C7A               	btfss	_portbActual,0	;volatile
   481  0038  283A               	goto	u3_21
   482  0039  283B               	goto	u3_20
   483  003A                     u3_21:
   484  003A  2854               	goto	i1l693
   485  003B                     u3_20:
   486  003B                     i1l687:
   487                           
   488                           ;main.c: 76:             if (micros - timeB1 >= 50){
   489  003B  0872               	movf	_timeB1,w	;volatile
   490  003C  0274               	subwf	_micros,w	;volatile
   491  003D  00F6               	movwf	??_isr
   492  003E  0873               	movf	_timeB1+1,w	;volatile
   493  003F  1C03               	skipc
   494  0040  0A73               	incf	_timeB1+1,w	;volatile
   495  0041  0275               	subwf	_micros+1,w	;volatile
   496  0042  00F7               	movwf	??_isr+1
   497  0043  3000               	movlw	0
   498  0044  0277               	subwf	??_isr+1,w
   499  0045  3032               	movlw	50
   500  0046  1903               	skipnz
   501  0047  0276               	subwf	??_isr,w
   502  0048  1C03               	skipc
   503  0049  284B               	goto	u4_21
   504  004A  284C               	goto	u4_20
   505  004B                     u4_21:
   506  004B  2854               	goto	i1l693
   507  004C                     u4_20:
   508  004C                     i1l689:
   509                           
   510                           ;main.c: 79:                 timeB1 = micros;
   511  004C  0875               	movf	_micros+1,w	;volatile
   512  004D  00F3               	movwf	_timeB1+1	;volatile
   513  004E  0874               	movf	_micros,w	;volatile
   514  004F  00F2               	movwf	_timeB1	;volatile
   515  0050                     i1l691:
   516                           
   517                           ;main.c: 80:                 PORTD++;
   518  0050  3001               	movlw	1
   519  0051  00F6               	movwf	??_isr
   520  0052  0876               	movf	??_isr,w
   521  0053  0788               	addwf	8,f	;volatile
   522  0054                     i1l693:
   523                           
   524                           ;main.c: 84:         if((portbAnterior & 2) == 0 && (portbActual & 2) == 2){
   525  0054  18FB               	btfsc	_portbAnterior,1	;volatile
   526  0055  2857               	goto	u5_21
   527  0056  2858               	goto	u5_20
   528  0057                     u5_21:
   529  0057  2873               	goto	i1l703
   530  0058                     u5_20:
   531  0058                     i1l695:
   532  0058  1CFA               	btfss	_portbActual,1	;volatile
   533  0059  285B               	goto	u6_21
   534  005A  285C               	goto	u6_20
   535  005B                     u6_21:
   536  005B  2873               	goto	i1l703
   537  005C                     u6_20:
   538  005C                     i1l697:
   539                           
   540                           ;main.c: 85:             if(micros - timeB2 >= 50){
   541  005C  0870               	movf	_timeB2,w	;volatile
   542  005D  0274               	subwf	_micros,w	;volatile
   543  005E  00F6               	movwf	??_isr
   544  005F  0871               	movf	_timeB2+1,w	;volatile
   545  0060  1C03               	skipc
   546  0061  0A71               	incf	_timeB2+1,w	;volatile
   547  0062  0275               	subwf	_micros+1,w	;volatile
   548  0063  00F7               	movwf	??_isr+1
   549  0064  3000               	movlw	0
   550  0065  0277               	subwf	??_isr+1,w
   551  0066  3032               	movlw	50
   552  0067  1903               	skipnz
   553  0068  0276               	subwf	??_isr,w
   554  0069  1C03               	skipc
   555  006A  286C               	goto	u7_21
   556  006B  286D               	goto	u7_20
   557  006C                     u7_21:
   558  006C  2873               	goto	i1l703
   559  006D                     u7_20:
   560  006D                     i1l699:
   561                           
   562                           ;main.c: 86:                 timeB2 = micros;
   563  006D  0875               	movf	_micros+1,w	;volatile
   564  006E  00F1               	movwf	_timeB2+1	;volatile
   565  006F  0874               	movf	_micros,w	;volatile
   566  0070  00F0               	movwf	_timeB2	;volatile
   567  0071                     i1l701:
   568                           
   569                           ;main.c: 87:                 PORTD--;
   570  0071  3001               	movlw	1
   571  0072  0288               	subwf	8,f	;volatile
   572  0073                     i1l703:
   573                           
   574                           ;main.c: 91:         INTCONbits.RBIF = 0;
   575  0073  100B               	bcf	11,0	;volatile
   576  0074                     i1l705:
   577                           
   578                           ;main.c: 94:      if (PIR1bits.TMR2IF){
   579  0074  1283               	bcf	3,5	;RP0=0, select bank0
   580  0075  1303               	bcf	3,6	;RP1=0, select bank0
   581  0076  1C8C               	btfss	12,1	;volatile
   582  0077  2879               	goto	u8_21
   583  0078  287A               	goto	u8_20
   584  0079                     u8_21:
   585  0079  2881               	goto	i1l59
   586  007A                     u8_20:
   587  007A                     i1l707:
   588                           
   589                           ;main.c: 95:         PIR1bits.TMR2IF = 0;
   590  007A  108C               	bcf	12,1	;volatile
   591  007B                     i1l709:
   592                           
   593                           ;main.c: 96:         micros+= 50;
   594  007B  3032               	movlw	50
   595  007C  07F4               	addwf	_micros,f	;volatile
   596  007D  1803               	skipnc
   597  007E  0AF5               	incf	_micros+1,f	;volatile
   598  007F  3000               	movlw	0
   599  0080  07F5               	addwf	_micros+1,f	;volatile
   600  0081                     i1l59:
   601  0081  0879               	movf	??_isr+3,w
   602  0082  008A               	movwf	10
   603  0083  0E78               	swapf	??_isr+2,w
   604  0084  0083               	movwf	3
   605  0085  0EFE               	swapf	btemp,f
   606  0086  0E7E               	swapf	btemp,w
   607  0087  0009               	retfie
   608  0088                     __end_of_isr:
   609  007E                     btemp	set	126	;btemp
   610  007E                     wtemp0	set	126
   611                           
   612                           	psect	intentry
   613  0004                     __pintentry:	
   614                           ;incstack = 0
   615                           ; Regs used in _isr: [wreg+status,2+status,0]
   616                           
   617  0004                     interrupt_function:
   618  007E                     saved_w	set	btemp
   619  0004  00FE               	movwf	btemp
   620  0005  0E03               	swapf	3,w
   621  0006  00F8               	movwf	??_isr+2
   622  0007  080A               	movf	10,w
   623  0008  00F9               	movwf	??_isr+3
   624  0009  120A  118A  2825   	ljmp	_isr
   625                           
   626                           	psect	config
   627                           
   628                           ;Config register CONFIG1 @ 0x2007
   629                           ;	Oscillator Selection bits
   630                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
   631                           ;	Watchdog Timer Enable bit
   632                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
   633                           ;	Power-up Timer Enable bit
   634                           ;	PWRTE = OFF, PWRT disabled
   635                           ;	RE3/MCLR pin function select bit
   636                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
   637                           ;	Code Protection bit
   638                           ;	CP = OFF, Program memory code protection is disabled
   639                           ;	Data Code Protection bit
   640                           ;	CPD = OFF, Data memory code protection is disabled
   641                           ;	Brown Out Reset Selection bits
   642                           ;	BOREN = OFF, BOR disabled
   643                           ;	Internal External Switchover bit
   644                           ;	IESO = OFF, Internal/External Switchover mode is disabled
   645                           ;	Fail-Safe Clock Monitor Enabled bit
   646                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
   647                           ;	Low Voltage Programming Enable bit
   648                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
   649                           ;	In-Circuit Debugger Mode bit
   650                           ;	DEBUG = 0x1, unprogrammed default
   651  2007                     	org	8199
   652  2007  20D4               	dw	8404
   653                           
   654                           ;Config register CONFIG2 @ 0x2008
   655                           ;	Brown-out Reset Selection bit
   656                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
   657                           ;	Flash Program Memory Self Write Enable bits
   658                           ;	WRT = OFF, Write protection off
   659  2008                     	org	8200
   660  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        2
    BSS         6
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      4      12
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (1) _isr                                                  4     4      0       0
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      0       0       5        0.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      4       C       1       85.7%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0       C      12        0.0%
ABS                  0      0       C       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Mon Feb 15 15:59:42 2021

                     l45 00A7                       l46 00A7                      l651 0088  
                    l661 0094                      l653 008C                      l671 009F  
                    l663 0095                      l655 008D                      l673 00A0  
                    l665 009A                      l657 0091                      l675 00A1  
                    l667 009D                      l659 0093                      l677 00A5  
                    l669 009E                      _isr 0025                     ?_isr 0076  
                   _IOCB 0096                     _PIR2 000D                     i1l59 0081  
                   u1_20 0029                     u1_21 0028                     u2_20 0037  
                   u2_21 0036                     u3_20 003B                     u3_21 003A  
                   u4_20 004C                     u4_21 004B                     u5_20 0058  
                   u5_21 0057                     u6_20 005C                     u6_21 005B  
                   u7_20 006D                     u7_21 006C                     u8_20 007A  
                   u8_21 0079                     _main 0088                     btemp 007E  
                   start 000C                    ??_isr 0076                    ?_main 0076  
                  _ANSEL 0188                    _T2CON 0012                    i1l701 0071  
                  i1l703 0073                    i1l705 0074                    i1l707 007A  
                  i1l709 007B                    i1l681 0029                    i1l691 0050  
                  i1l683 0033                    i1l685 0037                    i1l693 0054  
                  i1l695 0058                    i1l687 003B                    i1l679 0025  
                  i1l697 005C                    i1l689 004C                    i1l699 006D  
                  _PORTB 0006                    _PORTD 0008                    _TRISA 0085  
                  _TRISB 0086                    _TRISC 0087                    _TRISD 0088  
                  pclath 000A                    status 0003                    wtemp0 007E  
        __initialization 000F             __end_of_main 00AB                   ??_main 007A  
                 _ANSELH 0189                   _micros 0074                   _timeB1 0072  
                 _timeB2 0070             __pdataCOMMON 007A                   saved_w 007E  
__end_of__initialization 0021           __pcstackCOMMON 0076           _OPTION_REGbits 0081  
             __pmaintext 0088               __pintentry 0004                  __ptext1 0025  
           __size_of_isr 0063     end_of_initialization 0021            __pidataCOMMON 00AB  
    start_initialization 000F              __end_of_isr 0088              __pbssCOMMON 0070  
              ___latbits 0002        interrupt_function 0004                 _PIE1bits 008C  
               _PIR1bits 000C            __size_of_main 0023               _INTCONbits 000B  
          _portbAnterior 007B                 intlevel1 0000              _portbActual 007A  
