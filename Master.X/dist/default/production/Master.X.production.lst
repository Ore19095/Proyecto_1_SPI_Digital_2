

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Mon Feb 15 18:24:38 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2
    15                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    16                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    17                           	psect	text8,local,class=CODE,merge=1,delta=2,group=1
    18                           	psect	text9,local,class=CODE,merge=1,delta=2
    19                           	psect	text10,local,class=CODE,merge=1,delta=2,group=1
    20                           	psect	text11,local,class=CODE,merge=1,delta=2,group=1
    21                           	psect	text12,local,class=CODE,merge=1,delta=2,group=1
    22                           	psect	text13,local,class=CODE,merge=1,delta=2,group=1
    23                           	psect	text14,local,class=CODE,merge=1,delta=2,group=1
    24                           	psect	text15,local,class=CODE,merge=1,delta=2,group=1
    25                           	psect	text16,local,class=CODE,merge=1,delta=2,group=1
    26                           	psect	text17,local,class=CODE,merge=1,delta=2
    27                           	psect	text18,local,class=CODE,merge=1,delta=2,group=1
    28                           	psect	text19,local,class=CODE,merge=1,delta=2
    29                           	psect	text20,local,class=CODE,merge=1,delta=2
    30                           	psect	text21,local,class=CODE,merge=1,delta=2
    31                           	psect	text22,local,class=CODE,merge=1,delta=2
    32                           	psect	text23,local,class=CODE,merge=1,delta=2
    33                           	psect	text24,local,class=CODE,merge=1,delta=2
    34                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    35                           	dabs	1,0x7E,2
    36  0000                     
    37                           ; Version 2.20
    38                           ; Generated 12/02/2020 GMT
    39                           ; 
    40                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    41                           ; All rights reserved.
    42                           ; 
    43                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    44                           ; 
    45                           ; Redistribution and use in source and binary forms, with or without modification, are
    46                           ; permitted provided that the following conditions are met:
    47                           ; 
    48                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    49                           ;        conditions and the following disclaimer.
    50                           ; 
    51                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    52                           ;        of conditions and the following disclaimer in the documentation and/or other
    53                           ;        materials provided with the distribution.
    54                           ; 
    55                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    56                           ;        software without specific prior written permission.
    57                           ; 
    58                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    59                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    60                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    61                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    62                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    63                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    64                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    65                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    66                           ; 
    67                           ; 
    68                           ; Code-generator required, PIC16F887 Definitions
    69                           ; 
    70                           ; SFR Addresses
    71  0000                     	;# 
    72  0001                     	;# 
    73  0002                     	;# 
    74  0003                     	;# 
    75  0004                     	;# 
    76  0005                     	;# 
    77  0006                     	;# 
    78  0007                     	;# 
    79  0008                     	;# 
    80  0009                     	;# 
    81  000A                     	;# 
    82  000B                     	;# 
    83  000C                     	;# 
    84  000D                     	;# 
    85  000E                     	;# 
    86  000E                     	;# 
    87  000F                     	;# 
    88  0010                     	;# 
    89  0011                     	;# 
    90  0012                     	;# 
    91  0013                     	;# 
    92  0014                     	;# 
    93  0015                     	;# 
    94  0015                     	;# 
    95  0016                     	;# 
    96  0017                     	;# 
    97  0018                     	;# 
    98  0019                     	;# 
    99  001A                     	;# 
   100  001B                     	;# 
   101  001B                     	;# 
   102  001C                     	;# 
   103  001D                     	;# 
   104  001E                     	;# 
   105  001F                     	;# 
   106  0081                     	;# 
   107  0085                     	;# 
   108  0086                     	;# 
   109  0087                     	;# 
   110  0088                     	;# 
   111  0089                     	;# 
   112  008C                     	;# 
   113  008D                     	;# 
   114  008E                     	;# 
   115  008F                     	;# 
   116  0090                     	;# 
   117  0091                     	;# 
   118  0092                     	;# 
   119  0093                     	;# 
   120  0093                     	;# 
   121  0093                     	;# 
   122  0094                     	;# 
   123  0095                     	;# 
   124  0096                     	;# 
   125  0097                     	;# 
   126  0098                     	;# 
   127  0099                     	;# 
   128  009A                     	;# 
   129  009B                     	;# 
   130  009C                     	;# 
   131  009D                     	;# 
   132  009E                     	;# 
   133  009F                     	;# 
   134  0105                     	;# 
   135  0107                     	;# 
   136  0108                     	;# 
   137  0109                     	;# 
   138  010C                     	;# 
   139  010C                     	;# 
   140  010D                     	;# 
   141  010E                     	;# 
   142  010F                     	;# 
   143  0185                     	;# 
   144  0187                     	;# 
   145  0188                     	;# 
   146  0189                     	;# 
   147  018C                     	;# 
   148  018D                     	;# 
   149  0000                     	;# 
   150  0001                     	;# 
   151  0002                     	;# 
   152  0003                     	;# 
   153  0004                     	;# 
   154  0005                     	;# 
   155  0006                     	;# 
   156  0007                     	;# 
   157  0008                     	;# 
   158  0009                     	;# 
   159  000A                     	;# 
   160  000B                     	;# 
   161  000C                     	;# 
   162  000D                     	;# 
   163  000E                     	;# 
   164  000E                     	;# 
   165  000F                     	;# 
   166  0010                     	;# 
   167  0011                     	;# 
   168  0012                     	;# 
   169  0013                     	;# 
   170  0014                     	;# 
   171  0015                     	;# 
   172  0015                     	;# 
   173  0016                     	;# 
   174  0017                     	;# 
   175  0018                     	;# 
   176  0019                     	;# 
   177  001A                     	;# 
   178  001B                     	;# 
   179  001B                     	;# 
   180  001C                     	;# 
   181  001D                     	;# 
   182  001E                     	;# 
   183  001F                     	;# 
   184  0081                     	;# 
   185  0085                     	;# 
   186  0086                     	;# 
   187  0087                     	;# 
   188  0088                     	;# 
   189  0089                     	;# 
   190  008C                     	;# 
   191  008D                     	;# 
   192  008E                     	;# 
   193  008F                     	;# 
   194  0090                     	;# 
   195  0091                     	;# 
   196  0092                     	;# 
   197  0093                     	;# 
   198  0093                     	;# 
   199  0093                     	;# 
   200  0094                     	;# 
   201  0095                     	;# 
   202  0096                     	;# 
   203  0097                     	;# 
   204  0098                     	;# 
   205  0099                     	;# 
   206  009A                     	;# 
   207  009B                     	;# 
   208  009C                     	;# 
   209  009D                     	;# 
   210  009E                     	;# 
   211  009F                     	;# 
   212  0105                     	;# 
   213  0107                     	;# 
   214  0108                     	;# 
   215  0109                     	;# 
   216  010C                     	;# 
   217  010C                     	;# 
   218  010D                     	;# 
   219  010E                     	;# 
   220  010F                     	;# 
   221  0185                     	;# 
   222  0187                     	;# 
   223  0188                     	;# 
   224  0189                     	;# 
   225  018C                     	;# 
   226  018D                     	;# 
   227  0000                     	;# 
   228  0001                     	;# 
   229  0002                     	;# 
   230  0003                     	;# 
   231  0004                     	;# 
   232  0005                     	;# 
   233  0006                     	;# 
   234  0007                     	;# 
   235  0008                     	;# 
   236  0009                     	;# 
   237  000A                     	;# 
   238  000B                     	;# 
   239  000C                     	;# 
   240  000D                     	;# 
   241  000E                     	;# 
   242  000E                     	;# 
   243  000F                     	;# 
   244  0010                     	;# 
   245  0011                     	;# 
   246  0012                     	;# 
   247  0013                     	;# 
   248  0014                     	;# 
   249  0015                     	;# 
   250  0015                     	;# 
   251  0016                     	;# 
   252  0017                     	;# 
   253  0018                     	;# 
   254  0019                     	;# 
   255  001A                     	;# 
   256  001B                     	;# 
   257  001B                     	;# 
   258  001C                     	;# 
   259  001D                     	;# 
   260  001E                     	;# 
   261  001F                     	;# 
   262  0081                     	;# 
   263  0085                     	;# 
   264  0086                     	;# 
   265  0087                     	;# 
   266  0088                     	;# 
   267  0089                     	;# 
   268  008C                     	;# 
   269  008D                     	;# 
   270  008E                     	;# 
   271  008F                     	;# 
   272  0090                     	;# 
   273  0091                     	;# 
   274  0092                     	;# 
   275  0093                     	;# 
   276  0093                     	;# 
   277  0093                     	;# 
   278  0094                     	;# 
   279  0095                     	;# 
   280  0096                     	;# 
   281  0097                     	;# 
   282  0098                     	;# 
   283  0099                     	;# 
   284  009A                     	;# 
   285  009B                     	;# 
   286  009C                     	;# 
   287  009D                     	;# 
   288  009E                     	;# 
   289  009F                     	;# 
   290  0105                     	;# 
   291  0107                     	;# 
   292  0108                     	;# 
   293  0109                     	;# 
   294  010C                     	;# 
   295  010C                     	;# 
   296  010D                     	;# 
   297  010E                     	;# 
   298  010F                     	;# 
   299  0185                     	;# 
   300  0187                     	;# 
   301  0188                     	;# 
   302  0189                     	;# 
   303  018C                     	;# 
   304  018D                     	;# 
   305  0000                     	;# 
   306  0001                     	;# 
   307  0002                     	;# 
   308  0003                     	;# 
   309  0004                     	;# 
   310  0005                     	;# 
   311  0006                     	;# 
   312  0007                     	;# 
   313  0008                     	;# 
   314  0009                     	;# 
   315  000A                     	;# 
   316  000B                     	;# 
   317  000C                     	;# 
   318  000D                     	;# 
   319  000E                     	;# 
   320  000E                     	;# 
   321  000F                     	;# 
   322  0010                     	;# 
   323  0011                     	;# 
   324  0012                     	;# 
   325  0013                     	;# 
   326  0014                     	;# 
   327  0015                     	;# 
   328  0015                     	;# 
   329  0016                     	;# 
   330  0017                     	;# 
   331  0018                     	;# 
   332  0019                     	;# 
   333  001A                     	;# 
   334  001B                     	;# 
   335  001B                     	;# 
   336  001C                     	;# 
   337  001D                     	;# 
   338  001E                     	;# 
   339  001F                     	;# 
   340  0081                     	;# 
   341  0085                     	;# 
   342  0086                     	;# 
   343  0087                     	;# 
   344  0088                     	;# 
   345  0089                     	;# 
   346  008C                     	;# 
   347  008D                     	;# 
   348  008E                     	;# 
   349  008F                     	;# 
   350  0090                     	;# 
   351  0091                     	;# 
   352  0092                     	;# 
   353  0093                     	;# 
   354  0093                     	;# 
   355  0093                     	;# 
   356  0094                     	;# 
   357  0095                     	;# 
   358  0096                     	;# 
   359  0097                     	;# 
   360  0098                     	;# 
   361  0099                     	;# 
   362  009A                     	;# 
   363  009B                     	;# 
   364  009C                     	;# 
   365  009D                     	;# 
   366  009E                     	;# 
   367  009F                     	;# 
   368  0105                     	;# 
   369  0107                     	;# 
   370  0108                     	;# 
   371  0109                     	;# 
   372  010C                     	;# 
   373  010C                     	;# 
   374  010D                     	;# 
   375  010E                     	;# 
   376  010F                     	;# 
   377  0185                     	;# 
   378  0187                     	;# 
   379  0188                     	;# 
   380  0189                     	;# 
   381  018C                     	;# 
   382  018D                     	;# 
   383  0000                     	;# 
   384  0001                     	;# 
   385  0002                     	;# 
   386  0003                     	;# 
   387  0004                     	;# 
   388  0005                     	;# 
   389  0006                     	;# 
   390  0007                     	;# 
   391  0008                     	;# 
   392  0009                     	;# 
   393  000A                     	;# 
   394  000B                     	;# 
   395  000C                     	;# 
   396  000D                     	;# 
   397  000E                     	;# 
   398  000E                     	;# 
   399  000F                     	;# 
   400  0010                     	;# 
   401  0011                     	;# 
   402  0012                     	;# 
   403  0013                     	;# 
   404  0014                     	;# 
   405  0015                     	;# 
   406  0015                     	;# 
   407  0016                     	;# 
   408  0017                     	;# 
   409  0018                     	;# 
   410  0019                     	;# 
   411  001A                     	;# 
   412  001B                     	;# 
   413  001B                     	;# 
   414  001C                     	;# 
   415  001D                     	;# 
   416  001E                     	;# 
   417  001F                     	;# 
   418  0081                     	;# 
   419  0085                     	;# 
   420  0086                     	;# 
   421  0087                     	;# 
   422  0088                     	;# 
   423  0089                     	;# 
   424  008C                     	;# 
   425  008D                     	;# 
   426  008E                     	;# 
   427  008F                     	;# 
   428  0090                     	;# 
   429  0091                     	;# 
   430  0092                     	;# 
   431  0093                     	;# 
   432  0093                     	;# 
   433  0093                     	;# 
   434  0094                     	;# 
   435  0095                     	;# 
   436  0096                     	;# 
   437  0097                     	;# 
   438  0098                     	;# 
   439  0099                     	;# 
   440  009A                     	;# 
   441  009B                     	;# 
   442  009C                     	;# 
   443  009D                     	;# 
   444  009E                     	;# 
   445  009F                     	;# 
   446  0105                     	;# 
   447  0107                     	;# 
   448  0108                     	;# 
   449  0109                     	;# 
   450  010C                     	;# 
   451  010C                     	;# 
   452  010D                     	;# 
   453  010E                     	;# 
   454  010F                     	;# 
   455  0185                     	;# 
   456  0187                     	;# 
   457  0188                     	;# 
   458  0189                     	;# 
   459  018C                     	;# 
   460  018D                     	;# 
   461  0013                     _SSPBUF	set	19
   462  0014                     _SSPCON	set	20
   463  001A                     _RCREG	set	26
   464  000C                     _PIR1bits	set	12
   465  0019                     _TXREG	set	25
   466  0018                     _RCSTAbits	set	24
   467  0005                     _PORTA	set	5
   468  0048                     _RE0	set	72
   469  0049                     _RE1	set	73
   470  0047                     _RD7	set	71
   471  0046                     _RD6	set	70
   472  0045                     _RD5	set	69
   473  0044                     _RD4	set	68
   474  0043                     _RD3	set	67
   475  0042                     _RD2	set	66
   476  0041                     _RD1	set	65
   477  0040                     _RD0	set	64
   478  0094                     _SSPSTATbits	set	148
   479  0094                     _SSPSTAT	set	148
   480  0087                     _TRISCbits	set	135
   481  0098                     _TXSTAbits	set	152
   482  0099                     _SPBRG	set	153
   483  0085                     _TRISA	set	133
   484  0089                     _TRISE	set	137
   485  0088                     _TRISD	set	136
   486  043B                     _TRISC3	set	1083
   487  043D                     _TRISC5	set	1085
   488  0189                     _ANSELH	set	393
   489  0188                     _ANSEL	set	392
   490                           
   491                           	psect	strings
   492  0800                     __pstrings:
   493  0800                     stringtab:
   494  0800                     __stringtab:
   495                           
   496                           ;	String table - string pointers are 1 byte each
   497  0800  1BFF               	btfsc	btemp+1,7
   498  0801  280A               	ljmp	stringcode
   499  0802  1383               	bcf	3,7
   500  0803  187F               	btfsc	btemp+1,0
   501  0804  1783               	bsf	3,7
   502  0805  0800               	movf	0,w
   503  0806  0A84               	incf	4,f
   504  0807  1903               	skipnz
   505  0808  0AFF               	incf	btemp+1,f
   506  0809  0008               	return
   507  080A                     stringcode:
   508  080A                     stringdir:
   509  080A  3008               	movlw	high stringdir
   510  080B  008A               	movwf	10
   511  080C  0804               	movf	4,w
   512  080D  0A84               	incf	4,f
   513  080E  0782               	addwf	2,f
   514  080F                     __stringbase:
   515  080F  3400               	retlw	0
   516  0810                     __end_of__stringtab:
   517  0810                     STR_1:
   518  0810  3441               	retlw	65	;'A'
   519  0811  3444               	retlw	68	;'D'
   520  0812  3443               	retlw	67	;'C'
   521  0813  343A               	retlw	58	;':'
   522  0814  3420               	retlw	32	;' '
   523  0815  3443               	retlw	67	;'C'
   524  0816  344F               	retlw	79	;'O'
   525  0817  344E               	retlw	78	;'N'
   526  0818  3454               	retlw	84	;'T'
   527  0819  343A               	retlw	58	;':'
   528  081A  3420               	retlw	32	;' '
   529  081B  3454               	retlw	84	;'T'
   530  081C  3445               	retlw	69	;'E'
   531  081D  344D               	retlw	77	;'M'
   532  081E  3450               	retlw	80	;'P'
   533  081F  343A               	retlw	58	;':'
   534  0820  3400               	retlw	0
   535  0821                     STR_2:
   536  0821  3456               	retlw	86	;'V'
   537  0822  3420               	retlw	32	;' '
   538  0823  3400               	retlw	0
   539                           
   540                           	psect	cinit
   541  07F4                     start_initialization:	
   542                           ; #config settings
   543                           
   544  07F4                     __initialization:
   545                           
   546                           ; Clear objects allocated to BANK0
   547  07F4  1283               	bcf	3,5	;RP0=0, select bank0
   548  07F5  1303               	bcf	3,6	;RP1=0, select bank0
   549  07F6  01D2               	clrf	__pbssBANK0& (0+127)
   550  07F7  01D3               	clrf	(__pbssBANK0+1)& (0+127)
   551  07F8  01D4               	clrf	(__pbssBANK0+2)& (0+127)
   552  07F9  01D5               	clrf	(__pbssBANK0+3)& (0+127)
   553  07FA  01D6               	clrf	(__pbssBANK0+4)& (0+127)
   554  07FB  01D7               	clrf	(__pbssBANK0+5)& (0+127)
   555  07FC                     end_of_initialization:	
   556                           ;End of C runtime variable initialization code
   557                           
   558  07FC                     __end_of__initialization:
   559  07FC  0183               	clrf	3
   560  07FD  120A  118A  2BB4   	ljmp	_main	;jump to C main() function
   561                           
   562                           	psect	bssBANK0
   563  0052                     __pbssBANK0:
   564  0052                     _valorTemp:
   565  0052                     	ds	1
   566  0053                     _cadenaTemp:
   567  0053                     	ds	1
   568  0054                     _cadenaCounter:
   569  0054                     	ds	1
   570  0055                     _valueCounter:
   571  0055                     	ds	1
   572  0056                     _cadenaADC:
   573  0056                     	ds	1
   574  0057                     _valueADC:
   575  0057                     	ds	1
   576                           
   577                           	psect	cstackCOMMON
   578  0070                     __pcstackCOMMON:
   579  0070                     ?_spiInit:
   580  0070                     ?_LcdInit:	
   581                           ; 1 bytes @ 0x0
   582                           
   583  0070                     ?_spiWrite:	
   584                           ; 1 bytes @ 0x0
   585                           
   586  0070                     ??_spiWrite:	
   587                           ; 1 bytes @ 0x0
   588                           
   589  0070                     ?_spiRead:	
   590                           ; 1 bytes @ 0x0
   591                           
   592  0070                     ??_spiRead:	
   593                           ; 1 bytes @ 0x0
   594                           
   595  0070                     ?_int2String:	
   596                           ; 1 bytes @ 0x0
   597                           
   598  0070                     ?_LcdWriteChar:	
   599                           ; 1 bytes @ 0x0
   600                           
   601  0070                     ?_LcdPort:	
   602                           ; 1 bytes @ 0x0
   603                           
   604  0070                     ??_LcdPort:	
   605                           ; 1 bytes @ 0x0
   606                           
   607  0070                     ?_LcdCmd:	
   608                           ; 1 bytes @ 0x0
   609                           
   610  0070                     ?_spiReceiveWait:	
   611                           ; 1 bytes @ 0x0
   612                           
   613  0070                     ??_spiReceiveWait:	
   614                           ; 1 bytes @ 0x0
   615                           
   616  0070                     ?___bmul:	
   617                           ; 1 bytes @ 0x0
   618                           
   619  0070                     ?__Umul8_16:	
   620                           ; 1 bytes @ 0x0
   621                           
   622  0070                     ?_main:	
   623                           ; 2 bytes @ 0x0
   624                           
   625  0070                     ?___wmul:	
   626                           ; 2 bytes @ 0x0
   627                           
   628  0070                     ?___awdiv:	
   629                           ; 2 bytes @ 0x0
   630                           
   631  0070                     ?___awmod:	
   632                           ; 2 bytes @ 0x0
   633                           
   634  0070                     ?___lwdiv:	
   635                           ; 2 bytes @ 0x0
   636                           
   637  0070                     ?___lwmod:	
   638                           ; 2 bytes @ 0x0
   639                           
   640  0070                     ?___lldiv:	
   641                           ; 2 bytes @ 0x0
   642                           
   643  0070                     ?___xxtofl:	
   644                           ; 4 bytes @ 0x0
   645                           
   646  0070                     spiInit@sDataSample:	
   647                           ; 4 bytes @ 0x0
   648                           
   649  0070                     spiWrite@dat:	
   650                           ; 1 bytes @ 0x0
   651                           
   652  0070                     ___bmul@multiplicand:	
   653                           ; 1 bytes @ 0x0
   654                           
   655  0070                     __Umul8_16@multiplicand:	
   656                           ; 1 bytes @ 0x0
   657                           
   658  0070                     ___wmul@multiplier:	
   659                           ; 1 bytes @ 0x0
   660                           
   661  0070                     ___awdiv@divisor:	
   662                           ; 2 bytes @ 0x0
   663                           
   664  0070                     ___awmod@divisor:	
   665                           ; 2 bytes @ 0x0
   666                           
   667  0070                     ___lwdiv@divisor:	
   668                           ; 2 bytes @ 0x0
   669                           
   670  0070                     ___lwmod@divisor:	
   671                           ; 2 bytes @ 0x0
   672                           
   673  0070                     ___lldiv@divisor:	
   674                           ; 2 bytes @ 0x0
   675                           
   676  0070                     ___xxtofl@val:	
   677                           ; 4 bytes @ 0x0
   678                           
   679                           
   680                           ; 4 bytes @ 0x0
   681  0070                     	ds	1
   682  0071                     ??___bmul:
   683  0071                     LcdPort@value:	
   684                           ; 1 bytes @ 0x1
   685                           
   686  0071                     spiInit@sClockIdle:	
   687                           ; 1 bytes @ 0x1
   688                           
   689                           
   690                           ; 1 bytes @ 0x1
   691  0071                     	ds	1
   692  0072                     ??_LcdWriteChar:
   693  0072                     ??__Umul8_16:	
   694                           ; 1 bytes @ 0x2
   695                           
   696  0072                     ??_LcdCmd:	
   697                           ; 1 bytes @ 0x2
   698                           
   699  0072                     spiInit@sTransmitEdge:	
   700                           ; 1 bytes @ 0x2
   701                           
   702  0072                     ___bmul@product:	
   703                           ; 1 bytes @ 0x2
   704                           
   705  0072                     ___wmul@multiplicand:	
   706                           ; 1 bytes @ 0x2
   707                           
   708  0072                     ___awdiv@dividend:	
   709                           ; 2 bytes @ 0x2
   710                           
   711  0072                     ___awmod@dividend:	
   712                           ; 2 bytes @ 0x2
   713                           
   714  0072                     ___lwdiv@dividend:	
   715                           ; 2 bytes @ 0x2
   716                           
   717  0072                     ___lwmod@dividend:	
   718                           ; 2 bytes @ 0x2
   719                           
   720                           
   721                           ; 2 bytes @ 0x2
   722  0072                     	ds	1
   723  0073                     ??_spiInit:
   724  0073                     LcdWriteChar@value:	
   725                           ; 1 bytes @ 0x3
   726                           
   727  0073                     spiInit@sType:	
   728                           ; 1 bytes @ 0x3
   729                           
   730  0073                     ___bmul@multiplier:	
   731                           ; 1 bytes @ 0x3
   732                           
   733                           
   734                           ; 1 bytes @ 0x3
   735  0073                     	ds	1
   736  0074                     ?_LcdWriteString:
   737  0074                     ??___wmul:	
   738                           ; 1 bytes @ 0x4
   739                           
   740  0074                     ??___awdiv:	
   741                           ; 1 bytes @ 0x4
   742                           
   743  0074                     ??___awmod:	
   744                           ; 1 bytes @ 0x4
   745                           
   746  0074                     ??___lwdiv:	
   747                           ; 1 bytes @ 0x4
   748                           
   749  0074                     ??___lwmod:	
   750                           ; 1 bytes @ 0x4
   751                           
   752  0074                     ??___xxtofl:	
   753                           ; 1 bytes @ 0x4
   754                           
   755  0074                     LcdCmd@value:	
   756                           ; 1 bytes @ 0x4
   757                           
   758  0074                     LcdWriteString@value:	
   759                           ; 1 bytes @ 0x4
   760                           
   761  0074                     ___wmul@product:	
   762                           ; 2 bytes @ 0x4
   763                           
   764  0074                     __Umul8_16@product:	
   765                           ; 2 bytes @ 0x4
   766                           
   767  0074                     ___lldiv@dividend:	
   768                           ; 2 bytes @ 0x4
   769                           
   770                           
   771                           ; 4 bytes @ 0x4
   772  0074                     	ds	1
   773  0075                     ??_LcdInit:
   774  0075                     ?_LcdSetCursor:	
   775                           ; 1 bytes @ 0x5
   776                           
   777  0075                     LcdSetCursor@column:	
   778                           ; 1 bytes @ 0x5
   779                           
   780  0075                     ___awdiv@counter:	
   781                           ; 1 bytes @ 0x5
   782                           
   783  0075                     ___awmod@counter:	
   784                           ; 1 bytes @ 0x5
   785                           
   786  0075                     ___lwmod@counter:	
   787                           ; 1 bytes @ 0x5
   788                           
   789  0075                     ___lwdiv@quotient:	
   790                           ; 1 bytes @ 0x5
   791                           
   792                           
   793                           ; 2 bytes @ 0x5
   794  0075                     	ds	1
   795  0076                     ??_LcdSetCursor:
   796  0076                     ??_LcdWriteString:	
   797                           ; 1 bytes @ 0x6
   798                           
   799  0076                     ___awdiv@sign:	
   800                           ; 1 bytes @ 0x6
   801                           
   802  0076                     ___awmod@sign:	
   803                           ; 1 bytes @ 0x6
   804                           
   805  0076                     __Umul8_16@word_mpld:	
   806                           ; 1 bytes @ 0x6
   807                           
   808                           
   809                           ; 2 bytes @ 0x6
   810  0076                     	ds	1
   811  0077                     ___lwdiv@counter:
   812  0077                     ___awdiv@quotient:	
   813                           ; 1 bytes @ 0x7
   814                           
   815                           
   816                           ; 2 bytes @ 0x7
   817  0077                     	ds	1
   818  0078                     ??___lldiv:
   819  0078                     LcdSetCursor@row:	
   820                           ; 1 bytes @ 0x8
   821                           
   822  0078                     __Umul8_16@multiplier:	
   823                           ; 1 bytes @ 0x8
   824                           
   825  0078                     ___xxtofl@sign:	
   826                           ; 1 bytes @ 0x8
   827                           
   828                           
   829                           ; 1 bytes @ 0x8
   830  0078                     	ds	1
   831  0079                     ??_int2String:
   832  0079                     ___xxtofl@exp:	
   833                           ; 1 bytes @ 0x9
   834                           
   835  0079                     LcdWriteString@i:	
   836                           ; 1 bytes @ 0x9
   837                           
   838  0079                     ___lldiv@quotient:	
   839                           ; 2 bytes @ 0x9
   840                           
   841                           
   842                           ; 4 bytes @ 0x9
   843  0079                     	ds	1
   844  007A                     ___xxtofl@arg:
   845                           
   846                           ; 4 bytes @ 0xA
   847  007A                     	ds	3
   848  007D                     ___lldiv@counter:
   849                           
   850                           ; 1 bytes @ 0xD
   851  007D                     	ds	1
   852                           
   853                           	psect	cstackBANK0
   854  0020                     __pcstackBANK0:
   855  0020                     ?_UARTInit:
   856  0020                     ?___flmul:	
   857                           ; 1 bytes @ 0x0
   858                           
   859  0020                     int2String@cadena:	
   860                           ; 4 bytes @ 0x0
   861                           
   862  0020                     UARTInit@baud_rate:	
   863                           ; 4 bytes @ 0x0
   864                           
   865  0020                     ___flmul@b:	
   866                           ; 4 bytes @ 0x0
   867                           
   868                           
   869                           ; 4 bytes @ 0x0
   870  0020                     	ds	4
   871  0024                     int2String@digito:
   872  0024                     UARTInit@BRGH:	
   873                           ; 1 bytes @ 0x4
   874                           
   875  0024                     ___flmul@a:	
   876                           ; 1 bytes @ 0x4
   877                           
   878                           
   879                           ; 4 bytes @ 0x4
   880  0024                     	ds	1
   881  0025                     ??_UARTInit:
   882  0025                     int2String@value:	
   883                           ; 1 bytes @ 0x5
   884                           
   885                           
   886                           ; 1 bytes @ 0x5
   887  0025                     	ds	3
   888  0028                     ??___flmul:
   889                           
   890                           ; 1 bytes @ 0x8
   891  0028                     	ds	5
   892  002D                     ___flmul@sign:
   893                           
   894                           ; 1 bytes @ 0xD
   895  002D                     	ds	1
   896  002E                     ___flmul@grs:
   897                           
   898                           ; 4 bytes @ 0xE
   899  002E                     	ds	4
   900  0032                     ___flmul@aexp:
   901                           
   902                           ; 1 bytes @ 0x12
   903  0032                     	ds	1
   904  0033                     ___flmul@bexp:
   905                           
   906                           ; 1 bytes @ 0x13
   907  0033                     	ds	1
   908  0034                     ___flmul@prod:
   909                           
   910                           ; 4 bytes @ 0x14
   911  0034                     	ds	4
   912  0038                     ___flmul@temp:
   913                           
   914                           ; 2 bytes @ 0x18
   915  0038                     	ds	2
   916  003A                     ?___fltol:
   917  003A                     ___fltol@f1:	
   918                           ; 4 bytes @ 0x1A
   919                           
   920                           
   921                           ; 4 bytes @ 0x1A
   922  003A                     	ds	4
   923  003E                     ??___fltol:
   924                           
   925                           ; 1 bytes @ 0x1E
   926  003E                     	ds	5
   927  0043                     ___fltol@sign1:
   928                           
   929                           ; 1 bytes @ 0x23
   930  0043                     	ds	1
   931  0044                     ___fltol@exp1:
   932                           
   933                           ; 1 bytes @ 0x24
   934  0044                     	ds	1
   935  0045                     ?_adcToString:
   936  0045                     adcToString@value:	
   937                           ; 1 bytes @ 0x25
   938                           
   939                           
   940                           ; 2 bytes @ 0x25
   941  0045                     	ds	2
   942  0047                     ??_adcToString:
   943                           
   944                           ; 1 bytes @ 0x27
   945  0047                     	ds	1
   946  0048                     adcToString@salida:
   947                           
   948                           ; 5 bytes @ 0x28
   949  0048                     	ds	5
   950  004D                     adcToString@digito:
   951                           
   952                           ; 2 bytes @ 0x2D
   953  004D                     	ds	2
   954  004F                     ??_main:
   955                           
   956                           ; 1 bytes @ 0x2F
   957  004F                     	ds	3
   958                           
   959                           	psect	maintext
   960  03B4                     __pmaintext:	
   961 ;;
   962 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   963 ;;
   964 ;; *************** function _main *****************
   965 ;; Defined at:
   966 ;;		line 56 in file "main.c"
   967 ;; Parameters:    Size  Location     Type
   968 ;;		None
   969 ;; Auto vars:     Size  Location     Type
   970 ;;		None
   971 ;; Return value:  Size  Location     Type
   972 ;;                  2   48[None  ] int 
   973 ;; Registers used:
   974 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   975 ;; Tracked objects:
   976 ;;		On entry : B00/0
   977 ;;		On exit  : 0/0
   978 ;;		Unchanged: 0/0
   979 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   980 ;;      Params:         0       0       0       0       0
   981 ;;      Locals:         0       0       0       0       0
   982 ;;      Temps:          0       3       0       0       0
   983 ;;      Totals:         0       3       0       0       0
   984 ;;Total ram usage:        3 bytes
   985 ;; Hardware stack levels required when called:    3
   986 ;; This function calls:
   987 ;;		_LcdInit
   988 ;;		_LcdSetCursor
   989 ;;		_LcdWriteChar
   990 ;;		_LcdWriteString
   991 ;;		_UARTInit
   992 ;;		_adcToString
   993 ;;		_int2String
   994 ;;		_spiInit
   995 ;;		_spiRead
   996 ;;		_spiWrite
   997 ;; This function is called by:
   998 ;;		Startup code after reset
   999 ;; This function uses a non-reentrant model
  1000 ;;
  1001                           
  1002                           
  1003                           ;psect for function _main
  1004  03B4                     _main:
  1005  03B4                     l2043:	
  1006                           ;incstack = 0
  1007                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1008                           
  1009                           
  1010                           ;main.c: 58:   ANSEL = 0;
  1011  03B4  1683               	bsf	3,5	;RP0=1, select bank3
  1012  03B5  1703               	bsf	3,6	;RP1=1, select bank3
  1013  03B6  0188               	clrf	8	;volatile
  1014                           
  1015                           ;main.c: 59:   ANSELH = 0;
  1016  03B7  0189               	clrf	9	;volatile
  1017                           
  1018                           ;main.c: 61:   TRISD = 0;
  1019  03B8  1683               	bsf	3,5	;RP0=1, select bank1
  1020  03B9  1303               	bcf	3,6	;RP1=0, select bank1
  1021  03BA  0188               	clrf	8	;volatile
  1022                           
  1023                           ;main.c: 62:   TRISE = 0;
  1024  03BB  0189               	clrf	9	;volatile
  1025  03BC                     l2045:
  1026                           
  1027                           ;main.c: 64:   TRISA = 248;
  1028  03BC  30F8               	movlw	248
  1029  03BD  0085               	movwf	5	;volatile
  1030  03BE                     l2047:
  1031                           
  1032                           ;main.c: 66:     spiInit(SPI_MASTER_OSC_DIV4, SPI_DATA_SAMPLE_MIDDLE,
  1033  03BE  01F0               	clrf	spiInit@sDataSample
  1034  03BF  01F1               	clrf	spiInit@sClockIdle
  1035  03C0  01F2               	clrf	spiInit@sTransmitEdge
  1036  03C1  3020               	movlw	32
  1037  03C2  120A  118A  2004  120A  118A  	fcall	_spiInit
  1038  03C7                     l2049:
  1039                           
  1040                           ;main.c: 68:   LcdInit();
  1041  03C7  120A  158A  2704  120A  118A  	fcall	_LcdInit
  1042  03CC                     l2051:
  1043                           
  1044                           ;main.c: 69:   UARTInit(9600,1);
  1045  03CC  3000               	movlw	0
  1046  03CD  1283               	bcf	3,5	;RP0=0, select bank0
  1047  03CE  1303               	bcf	3,6	;RP1=0, select bank0
  1048  03CF  00A3               	movwf	UARTInit@baud_rate+3
  1049  03D0  3000               	movlw	0
  1050  03D1  00A2               	movwf	UARTInit@baud_rate+2
  1051  03D2  3025               	movlw	37
  1052  03D3  00A1               	movwf	UARTInit@baud_rate+1
  1053  03D4  3080               	movlw	128
  1054  03D5  00A0               	movwf	UARTInit@baud_rate
  1055  03D6  01A4               	clrf	UARTInit@BRGH
  1056  03D7  0AA4               	incf	UARTInit@BRGH,f
  1057  03D8  120A  118A  20E7  120A  118A  	fcall	_UARTInit
  1058  03DD                     l2053:
  1059                           
  1060                           ;main.c: 71:   LcdSetCursor(1,1);
  1061  03DD  01F5               	clrf	LcdSetCursor@column
  1062  03DE  0AF5               	incf	LcdSetCursor@column,f
  1063  03DF  3001               	movlw	1
  1064  03E0  120A  158A  25D5  120A  118A  	fcall	_LcdSetCursor
  1065  03E5                     l2055:
  1066                           
  1067                           ;main.c: 72:   LcdWriteString("ADC: CONT: TEMP:");
  1068  03E5  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1069  03E6  00F4               	movwf	LcdWriteString@value
  1070  03E7  3080               	movlw	128
  1071  03E8  00F5               	movwf	LcdWriteString@value+1
  1072  03E9  120A  158A  267E  120A  118A  	fcall	_LcdWriteString
  1073  03EE                     l2057:
  1074                           
  1075                           ;main.c: 74:       LcdSetCursor(2,1);
  1076  03EE  01F5               	clrf	LcdSetCursor@column
  1077  03EF  0AF5               	incf	LcdSetCursor@column,f
  1078  03F0  3002               	movlw	2
  1079  03F1  120A  158A  25D5  120A  118A  	fcall	_LcdSetCursor
  1080  03F6                     l2059:
  1081                           
  1082                           ;main.c: 76:       PORTA = 6;
  1083  03F6  3006               	movlw	6
  1084  03F7  1283               	bcf	3,5	;RP0=0, select bank0
  1085  03F8  1303               	bcf	3,6	;RP1=0, select bank0
  1086  03F9  0085               	movwf	5	;volatile
  1087  03FA                     l2061:
  1088                           
  1089                           ;main.c: 78:       spiWrite('A');
  1090  03FA  3041               	movlw	65
  1091  03FB  120A  158A  257B  120A  118A  	fcall	_spiWrite
  1092  0400                     l2063:
  1093                           
  1094                           ;main.c: 79:       valueADC = spiRead();
  1095  0400  120A  158A  2588  120A  118A  	fcall	_spiRead
  1096  0405  1283               	bcf	3,5	;RP0=0, select bank0
  1097  0406  1303               	bcf	3,6	;RP1=0, select bank0
  1098  0407  00CF               	movwf	??_main
  1099  0408  084F               	movf	??_main,w
  1100  0409  00D7               	movwf	_valueADC
  1101  040A                     l2065:
  1102                           
  1103                           ;main.c: 81:       cadenaADC = adcToString(valueADC);
  1104  040A  0857               	movf	_valueADC,w
  1105  040B  00CF               	movwf	??_main
  1106  040C  01D0               	clrf	??_main+1
  1107  040D  084F               	movf	??_main,w
  1108  040E  00C5               	movwf	adcToString@value
  1109  040F  0850               	movf	??_main+1,w
  1110  0410  00C6               	movwf	adcToString@value+1
  1111  0411  120A  118A  225C  120A  118A  	fcall	_adcToString
  1112  0416  1283               	bcf	3,5	;RP0=0, select bank0
  1113  0417  1303               	bcf	3,6	;RP1=0, select bank0
  1114  0418  00D1               	movwf	??_main+2
  1115  0419  0851               	movf	??_main+2,w
  1116  041A  00D6               	movwf	_cadenaADC
  1117  041B                     l2067:
  1118                           
  1119                           ;main.c: 82:       LcdWriteString(cadenaADC);
  1120  041B  0856               	movf	_cadenaADC,w
  1121  041C  00F4               	movwf	LcdWriteString@value
  1122  041D  3000               	movlw	0
  1123  041E  00F5               	movwf	LcdWriteString@value+1
  1124  041F  120A  158A  267E  120A  118A  	fcall	_LcdWriteString
  1125  0424                     l2069:
  1126                           
  1127                           ;main.c: 83:       LcdWriteString("V ");
  1128  0424  3012               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1129  0425  00F4               	movwf	LcdWriteString@value
  1130  0426  3080               	movlw	128
  1131  0427  00F5               	movwf	LcdWriteString@value+1
  1132  0428  120A  158A  267E  120A  118A  	fcall	_LcdWriteString
  1133  042D                     l2071:
  1134                           
  1135                           ;main.c: 85:       PORTA = 5;
  1136  042D  3005               	movlw	5
  1137  042E  1283               	bcf	3,5	;RP0=0, select bank0
  1138  042F  1303               	bcf	3,6	;RP1=0, select bank0
  1139  0430  0085               	movwf	5	;volatile
  1140  0431                     l2073:
  1141                           
  1142                           ;main.c: 86:       spiWrite('C');
  1143  0431  3043               	movlw	67
  1144  0432  120A  158A  257B  120A  118A  	fcall	_spiWrite
  1145  0437                     l2075:
  1146                           
  1147                           ;main.c: 87:       valueCounter = spiRead();
  1148  0437  120A  158A  2588  120A  118A  	fcall	_spiRead
  1149  043C  1283               	bcf	3,5	;RP0=0, select bank0
  1150  043D  1303               	bcf	3,6	;RP1=0, select bank0
  1151  043E  00CF               	movwf	??_main
  1152  043F  084F               	movf	??_main,w
  1153  0440  00D5               	movwf	_valueCounter
  1154  0441                     l2077:
  1155                           
  1156                           ;main.c: 88:       cadenaCounter = int2String(valueCounter);
  1157  0441  0855               	movf	_valueCounter,w
  1158  0442  120A  158A  27A2  120A  118A  	fcall	_int2String
  1159  0447  1283               	bcf	3,5	;RP0=0, select bank0
  1160  0448  1303               	bcf	3,6	;RP1=0, select bank0
  1161  0449  00CF               	movwf	??_main
  1162  044A  084F               	movf	??_main,w
  1163  044B  00D4               	movwf	_cadenaCounter
  1164  044C                     l2079:
  1165                           
  1166                           ;main.c: 89:       LcdWriteString(cadenaCounter) ;
  1167  044C  0854               	movf	_cadenaCounter,w
  1168  044D  00F4               	movwf	LcdWriteString@value
  1169  044E  3000               	movlw	0
  1170  044F  00F5               	movwf	LcdWriteString@value+1
  1171  0450  120A  158A  267E  120A  118A  	fcall	_LcdWriteString
  1172  0455                     l2081:
  1173                           
  1174                           ;main.c: 90:       LcdWriteChar(' ');
  1175  0455  3020               	movlw	32
  1176  0456  120A  158A  2591  120A  118A  	fcall	_LcdWriteChar
  1177  045B                     l2083:
  1178                           
  1179                           ;main.c: 92:       PORTA = 3;
  1180  045B  3003               	movlw	3
  1181  045C  1283               	bcf	3,5	;RP0=0, select bank0
  1182  045D  1303               	bcf	3,6	;RP1=0, select bank0
  1183  045E  0085               	movwf	5	;volatile
  1184  045F                     l2085:
  1185                           
  1186                           ;main.c: 93:       spiWrite('T');
  1187  045F  3054               	movlw	84
  1188  0460  120A  158A  257B  120A  118A  	fcall	_spiWrite
  1189  0465                     l2087:
  1190                           
  1191                           ;main.c: 94:       valorTemp = spiRead();
  1192  0465  120A  158A  2588  120A  118A  	fcall	_spiRead
  1193  046A  1283               	bcf	3,5	;RP0=0, select bank0
  1194  046B  1303               	bcf	3,6	;RP1=0, select bank0
  1195  046C  00CF               	movwf	??_main
  1196  046D  084F               	movf	??_main,w
  1197  046E  00D2               	movwf	_valorTemp
  1198  046F                     l2089:
  1199                           
  1200                           ;main.c: 95:       cadenaTemp = int2String(valorTemp);
  1201  046F  0852               	movf	_valorTemp,w
  1202  0470  120A  158A  27A2  120A  118A  	fcall	_int2String
  1203  0475  1283               	bcf	3,5	;RP0=0, select bank0
  1204  0476  1303               	bcf	3,6	;RP1=0, select bank0
  1205  0477  00CF               	movwf	??_main
  1206  0478  084F               	movf	??_main,w
  1207  0479  00D3               	movwf	_cadenaTemp
  1208  047A                     l2091:
  1209                           
  1210                           ;main.c: 96:       LcdWriteString(cadenaTemp);
  1211  047A  0853               	movf	_cadenaTemp,w
  1212  047B  00F4               	movwf	LcdWriteString@value
  1213  047C  3000               	movlw	0
  1214  047D  00F5               	movwf	LcdWriteString@value+1
  1215  047E  120A  158A  267E  120A  118A  	fcall	_LcdWriteString
  1216  0483                     l2093:
  1217                           
  1218                           ;main.c: 97:       LcdWriteChar(0xDF);
  1219  0483  30DF               	movlw	223
  1220  0484  120A  158A  2591  120A  118A  	fcall	_LcdWriteChar
  1221  0489                     l2095:
  1222                           
  1223                           ;main.c: 98:       LcdWriteChar('C');
  1224  0489  3043               	movlw	67
  1225  048A  120A  158A  2591  120A  118A  	fcall	_LcdWriteChar
  1226  048F  2BEE               	goto	l2057
  1227  0490  120A  118A  2800   	ljmp	start
  1228  0493                     __end_of_main:
  1229                           
  1230                           	psect	text1
  1231  0D7B                     __ptext1:	
  1232 ;; *************** function _spiWrite *****************
  1233 ;; Defined at:
  1234 ;;		line 34 in file "spi.c"
  1235 ;; Parameters:    Size  Location     Type
  1236 ;;  dat             1    wreg     unsigned char 
  1237 ;; Auto vars:     Size  Location     Type
  1238 ;;  dat             1    0[COMMON] unsigned char 
  1239 ;; Return value:  Size  Location     Type
  1240 ;;                  1    wreg      void 
  1241 ;; Registers used:
  1242 ;;		wreg
  1243 ;; Tracked objects:
  1244 ;;		On entry : 0/0
  1245 ;;		On exit  : 0/0
  1246 ;;		Unchanged: 0/0
  1247 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1248 ;;      Params:         0       0       0       0       0
  1249 ;;      Locals:         1       0       0       0       0
  1250 ;;      Temps:          0       0       0       0       0
  1251 ;;      Totals:         1       0       0       0       0
  1252 ;;Total ram usage:        1 bytes
  1253 ;; Hardware stack levels used:    1
  1254 ;; This function calls:
  1255 ;;		Nothing
  1256 ;; This function is called by:
  1257 ;;		_main
  1258 ;; This function uses a non-reentrant model
  1259 ;;
  1260                           
  1261                           
  1262                           ;psect for function _spiWrite
  1263  0D7B                     _spiWrite:
  1264                           
  1265                           ;incstack = 0
  1266                           ; Regs used in _spiWrite: [wreg]
  1267                           ;spiWrite@dat stored from wreg
  1268  0D7B  00F0               	movwf	spiWrite@dat
  1269  0D7C                     l1995:
  1270                           
  1271                           ;spi.c: 34: void spiWrite(char dat);spi.c: 35: {;spi.c: 36:     SSPBUF = dat;
  1272  0D7C  0870               	movf	spiWrite@dat,w
  1273  0D7D  1283               	bcf	3,5	;RP0=0, select bank0
  1274  0D7E  1303               	bcf	3,6	;RP1=0, select bank0
  1275  0D7F  0093               	movwf	19	;volatile
  1276  0D80                     l191:
  1277  0D80  0008               	return
  1278  0D81                     __end_of_spiWrite:
  1279                           
  1280                           	psect	text2
  1281  0D88                     __ptext2:	
  1282 ;; *************** function _spiRead *****************
  1283 ;; Defined at:
  1284 ;;		line 47 in file "spi.c"
  1285 ;; Parameters:    Size  Location     Type
  1286 ;;		None
  1287 ;; Auto vars:     Size  Location     Type
  1288 ;;		None
  1289 ;; Return value:  Size  Location     Type
  1290 ;;                  1    wreg      unsigned char 
  1291 ;; Registers used:
  1292 ;;		wreg, status,2, status,0, pclath, cstack
  1293 ;; Tracked objects:
  1294 ;;		On entry : 0/0
  1295 ;;		On exit  : 0/0
  1296 ;;		Unchanged: 0/0
  1297 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1298 ;;      Params:         0       0       0       0       0
  1299 ;;      Locals:         0       0       0       0       0
  1300 ;;      Temps:          0       0       0       0       0
  1301 ;;      Totals:         0       0       0       0       0
  1302 ;;Total ram usage:        0 bytes
  1303 ;; Hardware stack levels used:    1
  1304 ;; Hardware stack levels required when called:    1
  1305 ;; This function calls:
  1306 ;;		_spiReceiveWait
  1307 ;; This function is called by:
  1308 ;;		_main
  1309 ;; This function uses a non-reentrant model
  1310 ;;
  1311                           
  1312                           
  1313                           ;psect for function _spiRead
  1314  0D88                     _spiRead:
  1315  0D88                     l1997:	
  1316                           ;incstack = 0
  1317                           ; Regs used in _spiRead: [wreg+status,2+status,0+pclath+cstack]
  1318                           
  1319                           
  1320                           ;spi.c: 49:     spiReceiveWait();
  1321  0D88  120A  158A  2581  120A  158A  	fcall	_spiReceiveWait
  1322  0D8D                     l1999:
  1323                           
  1324                           ;spi.c: 50:     return(SSPBUF);
  1325  0D8D  1283               	bcf	3,5	;RP0=0, select bank0
  1326  0D8E  1303               	bcf	3,6	;RP1=0, select bank0
  1327  0D8F  0813               	movf	19,w	;volatile
  1328  0D90                     l199:
  1329  0D90  0008               	return
  1330  0D91                     __end_of_spiRead:
  1331                           
  1332                           	psect	text3
  1333  0D81                     __ptext3:	
  1334 ;; *************** function _spiReceiveWait *****************
  1335 ;; Defined at:
  1336 ;;		line 29 in file "spi.c"
  1337 ;; Parameters:    Size  Location     Type
  1338 ;;		None
  1339 ;; Auto vars:     Size  Location     Type
  1340 ;;		None
  1341 ;; Return value:  Size  Location     Type
  1342 ;;                  1    wreg      void 
  1343 ;; Registers used:
  1344 ;;		None
  1345 ;; Tracked objects:
  1346 ;;		On entry : 0/0
  1347 ;;		On exit  : 0/0
  1348 ;;		Unchanged: 0/0
  1349 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1350 ;;      Params:         0       0       0       0       0
  1351 ;;      Locals:         0       0       0       0       0
  1352 ;;      Temps:          0       0       0       0       0
  1353 ;;      Totals:         0       0       0       0       0
  1354 ;;Total ram usage:        0 bytes
  1355 ;; Hardware stack levels used:    1
  1356 ;; This function calls:
  1357 ;;		Nothing
  1358 ;; This function is called by:
  1359 ;;		_spiRead
  1360 ;; This function uses a non-reentrant model
  1361 ;;
  1362                           
  1363                           
  1364                           ;psect for function _spiReceiveWait
  1365  0D81                     _spiReceiveWait:
  1366  0D81                     l1519:	
  1367                           ;incstack = 0
  1368                           ; Regs used in _spiReceiveWait: []
  1369                           
  1370  0D81                     l185:	
  1371                           ;spi.c: 31:     while ( !SSPSTATbits.BF );
  1372                           
  1373  0D81  1683               	bsf	3,5	;RP0=1, select bank1
  1374  0D82  1303               	bcf	3,6	;RP1=0, select bank1
  1375  0D83  1C14               	btfss	20,0	;volatile
  1376  0D84  2D86               	goto	u1751
  1377  0D85  2D87               	goto	u1750
  1378  0D86                     u1751:
  1379  0D86  2D81               	goto	l185
  1380  0D87                     u1750:
  1381  0D87                     l188:
  1382  0D87  0008               	return
  1383  0D88                     __end_of_spiReceiveWait:
  1384                           
  1385                           	psect	text4
  1386  0004                     __ptext4:	
  1387 ;; *************** function _spiInit *****************
  1388 ;; Defined at:
  1389 ;;		line 12 in file "spi.c"
  1390 ;; Parameters:    Size  Location     Type
  1391 ;;  sType           1    wreg     enum E1264
  1392 ;;  sDataSample     1    0[COMMON] enum E1272
  1393 ;;  sClockIdle      1    1[COMMON] enum E1276
  1394 ;;  sTransmitEdg    1    2[COMMON] enum E1280
  1395 ;; Auto vars:     Size  Location     Type
  1396 ;;  sType           1    3[COMMON] enum E1264
  1397 ;; Return value:  Size  Location     Type
  1398 ;;                  1    wreg      void 
  1399 ;; Registers used:
  1400 ;;		wreg, status,2, status,0
  1401 ;; Tracked objects:
  1402 ;;		On entry : 0/0
  1403 ;;		On exit  : 0/0
  1404 ;;		Unchanged: 0/0
  1405 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1406 ;;      Params:         3       0       0       0       0
  1407 ;;      Locals:         1       0       0       0       0
  1408 ;;      Temps:          0       0       0       0       0
  1409 ;;      Totals:         4       0       0       0       0
  1410 ;;Total ram usage:        4 bytes
  1411 ;; Hardware stack levels used:    1
  1412 ;; This function calls:
  1413 ;;		Nothing
  1414 ;; This function is called by:
  1415 ;;		_main
  1416 ;; This function uses a non-reentrant model
  1417 ;;
  1418                           
  1419                           
  1420                           ;psect for function _spiInit
  1421  0004                     _spiInit:
  1422                           
  1423                           ;incstack = 0
  1424                           ; Regs used in _spiInit: [wreg+status,2+status,0]
  1425                           ;spiInit@sType stored from wreg
  1426  0004  00F3               	movwf	spiInit@sType
  1427  0005                     l1923:
  1428                           
  1429                           ;spi.c: 12: void spiInit(Spi_Type sType, Spi_Data_Sample sDataSample, Spi_Clock_Idle sCl
      +                          ockIdle, Spi_Transmit_Edge sTransmitEdge);spi.c: 13: {;spi.c: 14:     TRISC5 = 0;
  1430  0005  1683               	bsf	3,5	;RP0=1, select bank1
  1431  0006  1303               	bcf	3,6	;RP1=0, select bank1
  1432  0007  1287               	bcf	7,5	;volatile
  1433                           
  1434                           ;spi.c: 15:     if(sType & 0b00000100)
  1435  0008  1D73               	btfss	spiInit@sType,2
  1436  0009  280B               	goto	u2821
  1437  000A  280C               	goto	u2820
  1438  000B                     u2821:
  1439  000B  2810               	goto	l1929
  1440  000C                     u2820:
  1441  000C                     l1925:
  1442                           
  1443                           ;spi.c: 16:     {;spi.c: 17:         SSPSTAT = sTransmitEdge;
  1444  000C  0872               	movf	spiInit@sTransmitEdge,w
  1445  000D  0094               	movwf	20	;volatile
  1446  000E                     l1927:
  1447                           
  1448                           ;spi.c: 18:         TRISC3 = 1;
  1449  000E  1587               	bsf	7,3	;volatile
  1450                           
  1451                           ;spi.c: 19:     }
  1452  000F  2814               	goto	l181
  1453  0010                     l1929:
  1454                           
  1455                           ;spi.c: 21:     {;spi.c: 22:         SSPSTAT = sDataSample | sTransmitEdge;
  1456  0010  0870               	movf	spiInit@sDataSample,w
  1457  0011  0472               	iorwf	spiInit@sTransmitEdge,w
  1458  0012  0094               	movwf	20	;volatile
  1459  0013                     l1931:
  1460                           
  1461                           ;spi.c: 23:         TRISC3 = 0;
  1462  0013  1187               	bcf	7,3	;volatile
  1463  0014                     l181:	
  1464                           ;spi.c: 24:     }
  1465                           
  1466                           
  1467                           ;spi.c: 26:     SSPCON = sType | sClockIdle;
  1468  0014  0873               	movf	spiInit@sType,w
  1469  0015  0471               	iorwf	spiInit@sClockIdle,w
  1470  0016  1283               	bcf	3,5	;RP0=0, select bank0
  1471  0017  1303               	bcf	3,6	;RP1=0, select bank0
  1472  0018  0094               	movwf	20	;volatile
  1473  0019                     l182:
  1474  0019  0008               	return
  1475  001A                     __end_of_spiInit:
  1476                           
  1477                           	psect	text5
  1478  0FA2                     __ptext5:	
  1479 ;; *************** function _int2String *****************
  1480 ;; Defined at:
  1481 ;;		line 124 in file "main.c"
  1482 ;; Parameters:    Size  Location     Type
  1483 ;;  value           1    wreg     unsigned char 
  1484 ;; Auto vars:     Size  Location     Type
  1485 ;;  value           1    5[BANK0 ] unsigned char 
  1486 ;;  cadena          4    0[BANK0 ] unsigned char [4]
  1487 ;;  digito          1    4[BANK0 ] unsigned char 
  1488 ;; Return value:  Size  Location     Type
  1489 ;;                  1    wreg      PTR unsigned char 
  1490 ;; Registers used:
  1491 ;;		wreg, status,2, status,0, pclath, cstack
  1492 ;; Tracked objects:
  1493 ;;		On entry : 0/0
  1494 ;;		On exit  : 0/0
  1495 ;;		Unchanged: 0/0
  1496 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1497 ;;      Params:         0       0       0       0       0
  1498 ;;      Locals:         0       6       0       0       0
  1499 ;;      Temps:          3       0       0       0       0
  1500 ;;      Totals:         3       6       0       0       0
  1501 ;;Total ram usage:        9 bytes
  1502 ;; Hardware stack levels used:    1
  1503 ;; Hardware stack levels required when called:    1
  1504 ;; This function calls:
  1505 ;;		___awdiv
  1506 ;;		___awmod
  1507 ;;		___bmul
  1508 ;; This function is called by:
  1509 ;;		_main
  1510 ;; This function uses a non-reentrant model
  1511 ;;
  1512                           
  1513                           
  1514                           ;psect for function _int2String
  1515  0FA2                     _int2String:
  1516                           
  1517                           ;incstack = 0
  1518                           ; Regs used in _int2String: [wreg+status,2+status,0+pclath+cstack]
  1519                           ;int2String@value stored from wreg
  1520  0FA2  1283               	bcf	3,5	;RP0=0, select bank0
  1521  0FA3  1303               	bcf	3,6	;RP1=0, select bank0
  1522  0FA4  00A5               	movwf	int2String@value
  1523  0FA5                     l2027:
  1524                           
  1525                           ;main.c: 125:     char cadena[4];;main.c: 126:     uint8_t digito;;main.c: 128:     digi
      +                          to = value/100;
  1526  0FA5  3064               	movlw	100
  1527  0FA6  00F0               	movwf	___awdiv@divisor
  1528  0FA7  3000               	movlw	0
  1529  0FA8  00F1               	movwf	___awdiv@divisor+1
  1530  0FA9  0825               	movf	int2String@value,w
  1531  0FAA  00F9               	movwf	??_int2String
  1532  0FAB  01FA               	clrf	??_int2String+1
  1533  0FAC  0879               	movf	??_int2String,w
  1534  0FAD  00F2               	movwf	___awdiv@dividend
  1535  0FAE  087A               	movf	??_int2String+1,w
  1536  0FAF  00F3               	movwf	___awdiv@dividend+1
  1537  0FB0  120A  118A  2080  120A  158A  	fcall	___awdiv
  1538  0FB5  0870               	movf	?___awdiv,w
  1539  0FB6  00FB               	movwf	??_int2String+2
  1540  0FB7  087B               	movf	??_int2String+2,w
  1541  0FB8  1283               	bcf	3,5	;RP0=0, select bank0
  1542  0FB9  1303               	bcf	3,6	;RP1=0, select bank0
  1543  0FBA  00A4               	movwf	int2String@digito
  1544  0FBB                     l2029:
  1545                           
  1546                           ;main.c: 129:     cadena[0] = digito +48;
  1547  0FBB  0824               	movf	int2String@digito,w
  1548  0FBC  3E30               	addlw	48
  1549  0FBD  00F9               	movwf	??_int2String
  1550  0FBE  0879               	movf	??_int2String,w
  1551  0FBF  00A0               	movwf	int2String@cadena
  1552  0FC0                     l2031:
  1553                           
  1554                           ;main.c: 130:     value-= digito*100;
  1555  0FC0  3064               	movlw	100
  1556  0FC1  00F9               	movwf	??_int2String
  1557  0FC2  0879               	movf	??_int2String,w
  1558  0FC3  00F0               	movwf	___bmul@multiplicand
  1559  0FC4  0824               	movf	int2String@digito,w
  1560  0FC5  120A  158A  25A6  120A  158A  	fcall	___bmul
  1561  0FCA  00FA               	movwf	??_int2String+1
  1562  0FCB  087A               	movf	??_int2String+1,w
  1563  0FCC  1283               	bcf	3,5	;RP0=0, select bank0
  1564  0FCD  1303               	bcf	3,6	;RP1=0, select bank0
  1565  0FCE  02A5               	subwf	int2String@value,f
  1566  0FCF                     l2033:
  1567                           
  1568                           ;main.c: 132:     cadena[1] = value/10 + 48;
  1569  0FCF  300A               	movlw	10
  1570  0FD0  00F0               	movwf	___awdiv@divisor
  1571  0FD1  3000               	movlw	0
  1572  0FD2  00F1               	movwf	___awdiv@divisor+1
  1573  0FD3  0825               	movf	int2String@value,w
  1574  0FD4  00F9               	movwf	??_int2String
  1575  0FD5  01FA               	clrf	??_int2String+1
  1576  0FD6  0879               	movf	??_int2String,w
  1577  0FD7  00F2               	movwf	___awdiv@dividend
  1578  0FD8  087A               	movf	??_int2String+1,w
  1579  0FD9  00F3               	movwf	___awdiv@dividend+1
  1580  0FDA  120A  118A  2080  120A  158A  	fcall	___awdiv
  1581  0FDF  0870               	movf	?___awdiv,w
  1582  0FE0  3E30               	addlw	48
  1583  0FE1  00FB               	movwf	??_int2String+2
  1584  0FE2  087B               	movf	??_int2String+2,w
  1585  0FE3  1283               	bcf	3,5	;RP0=0, select bank0
  1586  0FE4  1303               	bcf	3,6	;RP1=0, select bank0
  1587  0FE5  00A1               	movwf	int2String@cadena+1
  1588  0FE6                     l2035:
  1589                           
  1590                           ;main.c: 133:     cadena[2] = value%10 + 48;
  1591  0FE6  300A               	movlw	10
  1592  0FE7  00F0               	movwf	___awmod@divisor
  1593  0FE8  3000               	movlw	0
  1594  0FE9  00F1               	movwf	___awmod@divisor+1
  1595  0FEA  0825               	movf	int2String@value,w
  1596  0FEB  00F9               	movwf	??_int2String
  1597  0FEC  01FA               	clrf	??_int2String+1
  1598  0FED  0879               	movf	??_int2String,w
  1599  0FEE  00F2               	movwf	___awmod@dividend
  1600  0FEF  087A               	movf	??_int2String+1,w
  1601  0FF0  00F3               	movwf	___awmod@dividend+1
  1602  0FF1  120A  158A  2749  120A  158A  	fcall	___awmod
  1603  0FF6  0870               	movf	?___awmod,w
  1604  0FF7  3E30               	addlw	48
  1605  0FF8  00FB               	movwf	??_int2String+2
  1606  0FF9  087B               	movf	??_int2String+2,w
  1607  0FFA  1283               	bcf	3,5	;RP0=0, select bank0
  1608  0FFB  1303               	bcf	3,6	;RP1=0, select bank0
  1609  0FFC  00A2               	movwf	int2String@cadena+2
  1610  0FFD                     l2037:
  1611                           
  1612                           ;main.c: 134:     cadena[3] = '\0';
  1613  0FFD  01A3               	clrf	int2String@cadena+3
  1614  0FFE                     l2039:
  1615                           
  1616                           ;main.c: 135:     return cadena;
  1617  0FFE  3020               	movlw	(low (int2String@cadena| 0))& (0+255)
  1618  0FFF                     l58:
  1619  0FFF  0008               	return
  1620  1000                     __end_of_int2String:
  1621                           
  1622                           	psect	text6
  1623  0DA6                     __ptext6:	
  1624 ;; *************** function ___bmul *****************
  1625 ;; Defined at:
  1626 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul8.c"
  1627 ;; Parameters:    Size  Location     Type
  1628 ;;  multiplier      1    wreg     unsigned char 
  1629 ;;  multiplicand    1    0[COMMON] unsigned char 
  1630 ;; Auto vars:     Size  Location     Type
  1631 ;;  multiplier      1    3[COMMON] unsigned char 
  1632 ;;  product         1    2[COMMON] unsigned char 
  1633 ;; Return value:  Size  Location     Type
  1634 ;;                  1    wreg      unsigned char 
  1635 ;; Registers used:
  1636 ;;		wreg, status,2, status,0
  1637 ;; Tracked objects:
  1638 ;;		On entry : 0/0
  1639 ;;		On exit  : 0/0
  1640 ;;		Unchanged: 0/0
  1641 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1642 ;;      Params:         1       0       0       0       0
  1643 ;;      Locals:         2       0       0       0       0
  1644 ;;      Temps:          1       0       0       0       0
  1645 ;;      Totals:         4       0       0       0       0
  1646 ;;Total ram usage:        4 bytes
  1647 ;; Hardware stack levels used:    1
  1648 ;; This function calls:
  1649 ;;		Nothing
  1650 ;; This function is called by:
  1651 ;;		_int2String
  1652 ;; This function uses a non-reentrant model
  1653 ;;
  1654                           
  1655                           
  1656                           ;psect for function ___bmul
  1657  0DA6                     ___bmul:
  1658                           
  1659                           ;incstack = 0
  1660                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  1661                           ;___bmul@multiplier stored from wreg
  1662  0DA6  00F3               	movwf	___bmul@multiplier
  1663  0DA7                     l1535:
  1664  0DA7  01F2               	clrf	___bmul@product
  1665  0DA8                     l1537:
  1666  0DA8  1C73               	btfss	___bmul@multiplier,0
  1667  0DA9  2DAB               	goto	u1801
  1668  0DAA  2DAC               	goto	u1800
  1669  0DAB                     u1801:
  1670  0DAB  2DB0               	goto	l1541
  1671  0DAC                     u1800:
  1672  0DAC                     l1539:
  1673  0DAC  0870               	movf	___bmul@multiplicand,w
  1674  0DAD  00F1               	movwf	??___bmul
  1675  0DAE  0871               	movf	??___bmul,w
  1676  0DAF  07F2               	addwf	___bmul@product,f
  1677  0DB0                     l1541:
  1678  0DB0  1003               	clrc
  1679  0DB1  0DF0               	rlf	___bmul@multiplicand,f
  1680  0DB2                     l1543:
  1681  0DB2  1003               	clrc
  1682  0DB3  0CF3               	rrf	___bmul@multiplier,f
  1683  0DB4  0873               	movf	___bmul@multiplier,w
  1684  0DB5  1D03               	btfss	3,2
  1685  0DB6  2DB8               	goto	u1811
  1686  0DB7  2DB9               	goto	u1810
  1687  0DB8                     u1811:
  1688  0DB8  2DA8               	goto	l1537
  1689  0DB9                     u1810:
  1690  0DB9                     l1545:
  1691  0DB9  0872               	movf	___bmul@product,w
  1692  0DBA                     l311:
  1693  0DBA  0008               	return
  1694  0DBB                     __end_of___bmul:
  1695                           
  1696                           	psect	text7
  1697  0F49                     __ptext7:	
  1698 ;; *************** function ___awmod *****************
  1699 ;; Defined at:
  1700 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awmod.c"
  1701 ;; Parameters:    Size  Location     Type
  1702 ;;  divisor         2    0[COMMON] int 
  1703 ;;  dividend        2    2[COMMON] int 
  1704 ;; Auto vars:     Size  Location     Type
  1705 ;;  sign            1    6[COMMON] unsigned char 
  1706 ;;  counter         1    5[COMMON] unsigned char 
  1707 ;; Return value:  Size  Location     Type
  1708 ;;                  2    0[COMMON] int 
  1709 ;; Registers used:
  1710 ;;		wreg, status,2, status,0
  1711 ;; Tracked objects:
  1712 ;;		On entry : 0/0
  1713 ;;		On exit  : 0/0
  1714 ;;		Unchanged: 0/0
  1715 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1716 ;;      Params:         4       0       0       0       0
  1717 ;;      Locals:         2       0       0       0       0
  1718 ;;      Temps:          1       0       0       0       0
  1719 ;;      Totals:         7       0       0       0       0
  1720 ;;Total ram usage:        7 bytes
  1721 ;; Hardware stack levels used:    1
  1722 ;; This function calls:
  1723 ;;		Nothing
  1724 ;; This function is called by:
  1725 ;;		_int2String
  1726 ;; This function uses a non-reentrant model
  1727 ;;
  1728                           
  1729                           
  1730                           ;psect for function ___awmod
  1731  0F49                     ___awmod:
  1732  0F49                     l1617:	
  1733                           ;incstack = 0
  1734                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  1735                           
  1736  0F49  01F6               	clrf	___awmod@sign
  1737  0F4A                     l1619:
  1738  0F4A  1FF3               	btfss	___awmod@dividend+1,7
  1739  0F4B  2F4D               	goto	u1991
  1740  0F4C  2F4E               	goto	u1990
  1741  0F4D                     u1991:
  1742  0F4D  2F55               	goto	l1625
  1743  0F4E                     u1990:
  1744  0F4E                     l1621:
  1745  0F4E  09F2               	comf	___awmod@dividend,f
  1746  0F4F  09F3               	comf	___awmod@dividend+1,f
  1747  0F50  0AF2               	incf	___awmod@dividend,f
  1748  0F51  1903               	skipnz
  1749  0F52  0AF3               	incf	___awmod@dividend+1,f
  1750  0F53                     l1623:
  1751  0F53  01F6               	clrf	___awmod@sign
  1752  0F54  0AF6               	incf	___awmod@sign,f
  1753  0F55                     l1625:
  1754  0F55  1FF1               	btfss	___awmod@divisor+1,7
  1755  0F56  2F58               	goto	u2001
  1756  0F57  2F59               	goto	u2000
  1757  0F58                     u2001:
  1758  0F58  2F5E               	goto	l1629
  1759  0F59                     u2000:
  1760  0F59                     l1627:
  1761  0F59  09F0               	comf	___awmod@divisor,f
  1762  0F5A  09F1               	comf	___awmod@divisor+1,f
  1763  0F5B  0AF0               	incf	___awmod@divisor,f
  1764  0F5C  1903               	skipnz
  1765  0F5D  0AF1               	incf	___awmod@divisor+1,f
  1766  0F5E                     l1629:
  1767  0F5E  0870               	movf	___awmod@divisor,w
  1768  0F5F  0471               	iorwf	___awmod@divisor+1,w
  1769  0F60  1903               	btfsc	3,2
  1770  0F61  2F63               	goto	u2011
  1771  0F62  2F64               	goto	u2010
  1772  0F63                     u2011:
  1773  0F63  2F93               	goto	l1647
  1774  0F64                     u2010:
  1775  0F64                     l1631:
  1776  0F64  01F5               	clrf	___awmod@counter
  1777  0F65  0AF5               	incf	___awmod@counter,f
  1778  0F66  2F72               	goto	l1637
  1779  0F67                     l1633:
  1780  0F67  3001               	movlw	1
  1781  0F68                     u2025:
  1782  0F68  1003               	clrc
  1783  0F69  0DF0               	rlf	___awmod@divisor,f
  1784  0F6A  0DF1               	rlf	___awmod@divisor+1,f
  1785  0F6B  3EFF               	addlw	-1
  1786  0F6C  1D03               	skipz
  1787  0F6D  2F68               	goto	u2025
  1788  0F6E                     l1635:
  1789  0F6E  3001               	movlw	1
  1790  0F6F  00F4               	movwf	??___awmod
  1791  0F70  0874               	movf	??___awmod,w
  1792  0F71  07F5               	addwf	___awmod@counter,f
  1793  0F72                     l1637:
  1794  0F72  1FF1               	btfss	___awmod@divisor+1,7
  1795  0F73  2F75               	goto	u2031
  1796  0F74  2F76               	goto	u2030
  1797  0F75                     u2031:
  1798  0F75  2F67               	goto	l1633
  1799  0F76                     u2030:
  1800  0F76                     l1639:
  1801  0F76  0871               	movf	___awmod@divisor+1,w
  1802  0F77  0273               	subwf	___awmod@dividend+1,w
  1803  0F78  1D03               	skipz
  1804  0F79  2F7C               	goto	u2045
  1805  0F7A  0870               	movf	___awmod@divisor,w
  1806  0F7B  0272               	subwf	___awmod@dividend,w
  1807  0F7C                     u2045:
  1808  0F7C  1C03               	skipc
  1809  0F7D  2F7F               	goto	u2041
  1810  0F7E  2F80               	goto	u2040
  1811  0F7F                     u2041:
  1812  0F7F  2F86               	goto	l1643
  1813  0F80                     u2040:
  1814  0F80                     l1641:
  1815  0F80  0870               	movf	___awmod@divisor,w
  1816  0F81  02F2               	subwf	___awmod@dividend,f
  1817  0F82  0871               	movf	___awmod@divisor+1,w
  1818  0F83  1C03               	skipc
  1819  0F84  03F3               	decf	___awmod@dividend+1,f
  1820  0F85  02F3               	subwf	___awmod@dividend+1,f
  1821  0F86                     l1643:
  1822  0F86  3001               	movlw	1
  1823  0F87                     u2055:
  1824  0F87  1003               	clrc
  1825  0F88  0CF1               	rrf	___awmod@divisor+1,f
  1826  0F89  0CF0               	rrf	___awmod@divisor,f
  1827  0F8A  3EFF               	addlw	-1
  1828  0F8B  1D03               	skipz
  1829  0F8C  2F87               	goto	u2055
  1830  0F8D                     l1645:
  1831  0F8D  3001               	movlw	1
  1832  0F8E  02F5               	subwf	___awmod@counter,f
  1833  0F8F  1D03               	btfss	3,2
  1834  0F90  2F92               	goto	u2061
  1835  0F91  2F93               	goto	u2060
  1836  0F92                     u2061:
  1837  0F92  2F76               	goto	l1639
  1838  0F93                     u2060:
  1839  0F93                     l1647:
  1840  0F93  0876               	movf	___awmod@sign,w
  1841  0F94  1903               	btfsc	3,2
  1842  0F95  2F97               	goto	u2071
  1843  0F96  2F98               	goto	u2070
  1844  0F97                     u2071:
  1845  0F97  2F9D               	goto	l1651
  1846  0F98                     u2070:
  1847  0F98                     l1649:
  1848  0F98  09F2               	comf	___awmod@dividend,f
  1849  0F99  09F3               	comf	___awmod@dividend+1,f
  1850  0F9A  0AF2               	incf	___awmod@dividend,f
  1851  0F9B  1903               	skipnz
  1852  0F9C  0AF3               	incf	___awmod@dividend+1,f
  1853  0F9D                     l1651:
  1854  0F9D  0873               	movf	___awmod@dividend+1,w
  1855  0F9E  00F1               	movwf	?___awmod+1
  1856  0F9F  0872               	movf	___awmod@dividend,w
  1857  0FA0  00F0               	movwf	?___awmod
  1858  0FA1                     l451:
  1859  0FA1  0008               	return
  1860  0FA2                     __end_of___awmod:
  1861                           
  1862                           	psect	text8
  1863  0080                     __ptext8:	
  1864 ;; *************** function ___awdiv *****************
  1865 ;; Defined at:
  1866 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awdiv.c"
  1867 ;; Parameters:    Size  Location     Type
  1868 ;;  divisor         2    0[COMMON] int 
  1869 ;;  dividend        2    2[COMMON] int 
  1870 ;; Auto vars:     Size  Location     Type
  1871 ;;  quotient        2    7[COMMON] int 
  1872 ;;  sign            1    6[COMMON] unsigned char 
  1873 ;;  counter         1    5[COMMON] unsigned char 
  1874 ;; Return value:  Size  Location     Type
  1875 ;;                  2    0[COMMON] int 
  1876 ;; Registers used:
  1877 ;;		wreg, status,2, status,0
  1878 ;; Tracked objects:
  1879 ;;		On entry : 0/0
  1880 ;;		On exit  : 0/0
  1881 ;;		Unchanged: 0/0
  1882 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1883 ;;      Params:         4       0       0       0       0
  1884 ;;      Locals:         4       0       0       0       0
  1885 ;;      Temps:          1       0       0       0       0
  1886 ;;      Totals:         9       0       0       0       0
  1887 ;;Total ram usage:        9 bytes
  1888 ;; Hardware stack levels used:    1
  1889 ;; This function calls:
  1890 ;;		Nothing
  1891 ;; This function is called by:
  1892 ;;		_int2String
  1893 ;; This function uses a non-reentrant model
  1894 ;;
  1895                           
  1896                           
  1897                           ;psect for function ___awdiv
  1898  0080                     ___awdiv:
  1899  0080                     l1573:	
  1900                           ;incstack = 0
  1901                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  1902                           
  1903  0080  01F6               	clrf	___awdiv@sign
  1904  0081                     l1575:
  1905  0081  1FF1               	btfss	___awdiv@divisor+1,7
  1906  0082  2884               	goto	u1891
  1907  0083  2885               	goto	u1890
  1908  0084                     u1891:
  1909  0084  288C               	goto	l1581
  1910  0085                     u1890:
  1911  0085                     l1577:
  1912  0085  09F0               	comf	___awdiv@divisor,f
  1913  0086  09F1               	comf	___awdiv@divisor+1,f
  1914  0087  0AF0               	incf	___awdiv@divisor,f
  1915  0088  1903               	skipnz
  1916  0089  0AF1               	incf	___awdiv@divisor+1,f
  1917  008A                     l1579:
  1918  008A  01F6               	clrf	___awdiv@sign
  1919  008B  0AF6               	incf	___awdiv@sign,f
  1920  008C                     l1581:
  1921  008C  1FF3               	btfss	___awdiv@dividend+1,7
  1922  008D  288F               	goto	u1901
  1923  008E  2890               	goto	u1900
  1924  008F                     u1901:
  1925  008F  2899               	goto	l1587
  1926  0090                     u1900:
  1927  0090                     l1583:
  1928  0090  09F2               	comf	___awdiv@dividend,f
  1929  0091  09F3               	comf	___awdiv@dividend+1,f
  1930  0092  0AF2               	incf	___awdiv@dividend,f
  1931  0093  1903               	skipnz
  1932  0094  0AF3               	incf	___awdiv@dividend+1,f
  1933  0095                     l1585:
  1934  0095  3001               	movlw	1
  1935  0096  00F4               	movwf	??___awdiv
  1936  0097  0874               	movf	??___awdiv,w
  1937  0098  06F6               	xorwf	___awdiv@sign,f
  1938  0099                     l1587:
  1939  0099  01F7               	clrf	___awdiv@quotient
  1940  009A  01F8               	clrf	___awdiv@quotient+1
  1941  009B                     l1589:
  1942  009B  0870               	movf	___awdiv@divisor,w
  1943  009C  0471               	iorwf	___awdiv@divisor+1,w
  1944  009D  1903               	btfsc	3,2
  1945  009E  28A0               	goto	u1911
  1946  009F  28A1               	goto	u1910
  1947  00A0                     u1911:
  1948  00A0  28D8               	goto	l1609
  1949  00A1                     u1910:
  1950  00A1                     l1591:
  1951  00A1  01F5               	clrf	___awdiv@counter
  1952  00A2  0AF5               	incf	___awdiv@counter,f
  1953  00A3  28AF               	goto	l1597
  1954  00A4                     l1593:
  1955  00A4  3001               	movlw	1
  1956  00A5                     u1925:
  1957  00A5  1003               	clrc
  1958  00A6  0DF0               	rlf	___awdiv@divisor,f
  1959  00A7  0DF1               	rlf	___awdiv@divisor+1,f
  1960  00A8  3EFF               	addlw	-1
  1961  00A9  1D03               	skipz
  1962  00AA  28A5               	goto	u1925
  1963  00AB                     l1595:
  1964  00AB  3001               	movlw	1
  1965  00AC  00F4               	movwf	??___awdiv
  1966  00AD  0874               	movf	??___awdiv,w
  1967  00AE  07F5               	addwf	___awdiv@counter,f
  1968  00AF                     l1597:
  1969  00AF  1FF1               	btfss	___awdiv@divisor+1,7
  1970  00B0  28B2               	goto	u1931
  1971  00B1  28B3               	goto	u1930
  1972  00B2                     u1931:
  1973  00B2  28A4               	goto	l1593
  1974  00B3                     u1930:
  1975  00B3                     l1599:
  1976  00B3  3001               	movlw	1
  1977  00B4                     u1945:
  1978  00B4  1003               	clrc
  1979  00B5  0DF7               	rlf	___awdiv@quotient,f
  1980  00B6  0DF8               	rlf	___awdiv@quotient+1,f
  1981  00B7  3EFF               	addlw	-1
  1982  00B8  1D03               	skipz
  1983  00B9  28B4               	goto	u1945
  1984  00BA  0871               	movf	___awdiv@divisor+1,w
  1985  00BB  0273               	subwf	___awdiv@dividend+1,w
  1986  00BC  1D03               	skipz
  1987  00BD  28C0               	goto	u1955
  1988  00BE  0870               	movf	___awdiv@divisor,w
  1989  00BF  0272               	subwf	___awdiv@dividend,w
  1990  00C0                     u1955:
  1991  00C0  1C03               	skipc
  1992  00C1  28C3               	goto	u1951
  1993  00C2  28C4               	goto	u1950
  1994  00C3                     u1951:
  1995  00C3  28CB               	goto	l1605
  1996  00C4                     u1950:
  1997  00C4                     l1601:
  1998  00C4  0870               	movf	___awdiv@divisor,w
  1999  00C5  02F2               	subwf	___awdiv@dividend,f
  2000  00C6  0871               	movf	___awdiv@divisor+1,w
  2001  00C7  1C03               	skipc
  2002  00C8  03F3               	decf	___awdiv@dividend+1,f
  2003  00C9  02F3               	subwf	___awdiv@dividend+1,f
  2004  00CA                     l1603:
  2005  00CA  1477               	bsf	___awdiv@quotient,0
  2006  00CB                     l1605:
  2007  00CB  3001               	movlw	1
  2008  00CC                     u1965:
  2009  00CC  1003               	clrc
  2010  00CD  0CF1               	rrf	___awdiv@divisor+1,f
  2011  00CE  0CF0               	rrf	___awdiv@divisor,f
  2012  00CF  3EFF               	addlw	-1
  2013  00D0  1D03               	skipz
  2014  00D1  28CC               	goto	u1965
  2015  00D2                     l1607:
  2016  00D2  3001               	movlw	1
  2017  00D3  02F5               	subwf	___awdiv@counter,f
  2018  00D4  1D03               	btfss	3,2
  2019  00D5  28D7               	goto	u1971
  2020  00D6  28D8               	goto	u1970
  2021  00D7                     u1971:
  2022  00D7  28B3               	goto	l1599
  2023  00D8                     u1970:
  2024  00D8                     l1609:
  2025  00D8  0876               	movf	___awdiv@sign,w
  2026  00D9  1903               	btfsc	3,2
  2027  00DA  28DC               	goto	u1981
  2028  00DB  28DD               	goto	u1980
  2029  00DC                     u1981:
  2030  00DC  28E2               	goto	l1613
  2031  00DD                     u1980:
  2032  00DD                     l1611:
  2033  00DD  09F7               	comf	___awdiv@quotient,f
  2034  00DE  09F8               	comf	___awdiv@quotient+1,f
  2035  00DF  0AF7               	incf	___awdiv@quotient,f
  2036  00E0  1903               	skipnz
  2037  00E1  0AF8               	incf	___awdiv@quotient+1,f
  2038  00E2                     l1613:
  2039  00E2  0878               	movf	___awdiv@quotient+1,w
  2040  00E3  00F1               	movwf	?___awdiv+1
  2041  00E4  0877               	movf	___awdiv@quotient,w
  2042  00E5  00F0               	movwf	?___awdiv
  2043  00E6                     l438:
  2044  00E6  0008               	return
  2045  00E7                     __end_of___awdiv:
  2046                           
  2047                           	psect	text9
  2048  025C                     __ptext9:	
  2049 ;; *************** function _adcToString *****************
  2050 ;; Defined at:
  2051 ;;		line 105 in file "main.c"
  2052 ;; Parameters:    Size  Location     Type
  2053 ;;  value           2   37[BANK0 ] unsigned int 
  2054 ;; Auto vars:     Size  Location     Type
  2055 ;;  salida          5   40[BANK0 ] unsigned char [5]
  2056 ;;  digito          2   45[BANK0 ] unsigned int 
  2057 ;; Return value:  Size  Location     Type
  2058 ;;                  1    wreg      PTR unsigned char 
  2059 ;; Registers used:
  2060 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  2061 ;; Tracked objects:
  2062 ;;		On entry : 0/0
  2063 ;;		On exit  : 0/0
  2064 ;;		Unchanged: 0/0
  2065 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2066 ;;      Params:         0       2       0       0       0
  2067 ;;      Locals:         0       7       0       0       0
  2068 ;;      Temps:          0       1       0       0       0
  2069 ;;      Totals:         0      10       0       0       0
  2070 ;;Total ram usage:       10 bytes
  2071 ;; Hardware stack levels used:    1
  2072 ;; Hardware stack levels required when called:    2
  2073 ;; This function calls:
  2074 ;;		___flmul
  2075 ;;		___fltol
  2076 ;;		___lwdiv
  2077 ;;		___lwmod
  2078 ;;		___wmul
  2079 ;;		___xxtofl
  2080 ;; This function is called by:
  2081 ;;		_main
  2082 ;; This function uses a non-reentrant model
  2083 ;;
  2084                           
  2085                           
  2086                           ;psect for function _adcToString
  2087  025C                     _adcToString:
  2088  025C                     l2003:	
  2089                           ;incstack = 0
  2090                           ; Regs used in _adcToString: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  2091                           
  2092                           
  2093                           ;main.c: 106:     char salida[5];;main.c: 107:     uint16_t digito;;main.c: 109:     val
      +                          ue = value*1.96;
  2094  025C  1283               	bcf	3,5	;RP0=0, select bank0
  2095  025D  1303               	bcf	3,6	;RP1=0, select bank0
  2096  025E  0845               	movf	adcToString@value,w
  2097  025F  00F0               	movwf	___xxtofl@val
  2098  0260  0846               	movf	adcToString@value+1,w
  2099  0261  00F1               	movwf	___xxtofl@val+1
  2100  0262  01F2               	clrf	___xxtofl@val+2
  2101  0263  01F3               	clrf	___xxtofl@val+3
  2102  0264  3000               	movlw	0
  2103  0265  120A  118A  22FA  120A  118A  	fcall	___xxtofl
  2104  026A  0873               	movf	?___xxtofl+3,w
  2105  026B  1283               	bcf	3,5	;RP0=0, select bank0
  2106  026C  1303               	bcf	3,6	;RP1=0, select bank0
  2107  026D  00A7               	movwf	___flmul@a+3
  2108  026E  0872               	movf	?___xxtofl+2,w
  2109  026F  00A6               	movwf	___flmul@a+2
  2110  0270  0871               	movf	?___xxtofl+1,w
  2111  0271  00A5               	movwf	___flmul@a+1
  2112  0272  0870               	movf	?___xxtofl,w
  2113  0273  00A4               	movwf	___flmul@a
  2114  0274  303F               	movlw	63
  2115  0275  00A3               	movwf	___flmul@b+3
  2116  0276  30FA               	movlw	250
  2117  0277  00A2               	movwf	___flmul@b+2
  2118  0278  30E1               	movlw	225
  2119  0279  00A1               	movwf	___flmul@b+1
  2120  027A  3048               	movlw	72
  2121  027B  00A0               	movwf	___flmul@b
  2122  027C  120A  118A  2493  120A  118A  	fcall	___flmul
  2123  0281  1283               	bcf	3,5	;RP0=0, select bank0
  2124  0282  1303               	bcf	3,6	;RP1=0, select bank0
  2125  0283  0823               	movf	?___flmul+3,w
  2126  0284  00BD               	movwf	___fltol@f1+3
  2127  0285  0822               	movf	?___flmul+2,w
  2128  0286  00BC               	movwf	___fltol@f1+2
  2129  0287  0821               	movf	?___flmul+1,w
  2130  0288  00BB               	movwf	___fltol@f1+1
  2131  0289  0820               	movf	?___flmul,w
  2132  028A  00BA               	movwf	___fltol@f1
  2133  028B  120A  118A  2156  120A  118A  	fcall	___fltol
  2134  0290  1283               	bcf	3,5	;RP0=0, select bank0
  2135  0291  1303               	bcf	3,6	;RP1=0, select bank0
  2136  0292  083B               	movf	?___fltol+1,w
  2137  0293  00C6               	movwf	adcToString@value+1
  2138  0294  083A               	movf	?___fltol,w
  2139  0295  00C5               	movwf	adcToString@value
  2140  0296                     l2005:
  2141                           
  2142                           ;main.c: 110:     digito = value/100 ;
  2143  0296  3064               	movlw	100
  2144  0297  00F0               	movwf	___lwdiv@divisor
  2145  0298  3000               	movlw	0
  2146  0299  00F1               	movwf	___lwdiv@divisor+1
  2147  029A  0846               	movf	adcToString@value+1,w
  2148  029B  00F3               	movwf	___lwdiv@dividend+1
  2149  029C  0845               	movf	adcToString@value,w
  2150  029D  00F2               	movwf	___lwdiv@dividend
  2151  029E  120A  158A  26C0  120A  118A  	fcall	___lwdiv
  2152  02A3  0871               	movf	?___lwdiv+1,w
  2153  02A4  1283               	bcf	3,5	;RP0=0, select bank0
  2154  02A5  1303               	bcf	3,6	;RP1=0, select bank0
  2155  02A6  00CE               	movwf	adcToString@digito+1
  2156  02A7  0870               	movf	?___lwdiv,w
  2157  02A8  00CD               	movwf	adcToString@digito
  2158  02A9                     l2007:
  2159                           
  2160                           ;main.c: 112:     salida[0] = digito + 48;
  2161  02A9  084D               	movf	adcToString@digito,w
  2162  02AA  3E30               	addlw	48
  2163  02AB  00C7               	movwf	??_adcToString
  2164  02AC  0847               	movf	??_adcToString,w
  2165  02AD  00C8               	movwf	adcToString@salida
  2166  02AE                     l2009:
  2167                           
  2168                           ;main.c: 113:     salida[1] = '.';
  2169  02AE  302E               	movlw	46
  2170  02AF  00C7               	movwf	??_adcToString
  2171  02B0  0847               	movf	??_adcToString,w
  2172  02B1  00C9               	movwf	adcToString@salida+1
  2173  02B2                     l2011:
  2174                           
  2175                           ;main.c: 114:     value -= digito*100;
  2176  02B2  084E               	movf	adcToString@digito+1,w
  2177  02B3  00F1               	movwf	___wmul@multiplier+1
  2178  02B4  084D               	movf	adcToString@digito,w
  2179  02B5  00F0               	movwf	___wmul@multiplier
  2180  02B6  3064               	movlw	100
  2181  02B7  00F2               	movwf	___wmul@multiplicand
  2182  02B8  3000               	movlw	0
  2183  02B9  00F3               	movwf	___wmul@multiplicand+1
  2184  02BA  120A  158A  25F8  120A  118A  	fcall	___wmul
  2185  02BF  0870               	movf	?___wmul,w
  2186  02C0  1283               	bcf	3,5	;RP0=0, select bank0
  2187  02C1  1303               	bcf	3,6	;RP1=0, select bank0
  2188  02C2  02C5               	subwf	adcToString@value,f
  2189  02C3  0871               	movf	?___wmul+1,w
  2190  02C4  1C03               	skipc
  2191  02C5  03C6               	decf	adcToString@value+1,f
  2192  02C6  02C6               	subwf	adcToString@value+1,f
  2193  02C7                     l2013:
  2194                           
  2195                           ;main.c: 116:     digito = value/10;
  2196  02C7  300A               	movlw	10
  2197  02C8  00F0               	movwf	___lwdiv@divisor
  2198  02C9  3000               	movlw	0
  2199  02CA  00F1               	movwf	___lwdiv@divisor+1
  2200  02CB  0846               	movf	adcToString@value+1,w
  2201  02CC  00F3               	movwf	___lwdiv@dividend+1
  2202  02CD  0845               	movf	adcToString@value,w
  2203  02CE  00F2               	movwf	___lwdiv@dividend
  2204  02CF  120A  158A  26C0  120A  118A  	fcall	___lwdiv
  2205  02D4  0871               	movf	?___lwdiv+1,w
  2206  02D5  1283               	bcf	3,5	;RP0=0, select bank0
  2207  02D6  1303               	bcf	3,6	;RP1=0, select bank0
  2208  02D7  00CE               	movwf	adcToString@digito+1
  2209  02D8  0870               	movf	?___lwdiv,w
  2210  02D9  00CD               	movwf	adcToString@digito
  2211  02DA                     l2015:
  2212                           
  2213                           ;main.c: 117:     salida[2] = digito +48;
  2214  02DA  084D               	movf	adcToString@digito,w
  2215  02DB  3E30               	addlw	48
  2216  02DC  00C7               	movwf	??_adcToString
  2217  02DD  0847               	movf	??_adcToString,w
  2218  02DE  00CA               	movwf	adcToString@salida+2
  2219  02DF                     l2017:
  2220                           
  2221                           ;main.c: 118:     digito = value % 10;
  2222  02DF  300A               	movlw	10
  2223  02E0  00F0               	movwf	___lwmod@divisor
  2224  02E1  3000               	movlw	0
  2225  02E2  00F1               	movwf	___lwmod@divisor+1
  2226  02E3  0846               	movf	adcToString@value+1,w
  2227  02E4  00F3               	movwf	___lwmod@dividend+1
  2228  02E5  0845               	movf	adcToString@value,w
  2229  02E6  00F2               	movwf	___lwmod@dividend
  2230  02E7  120A  158A  2644  120A  118A  	fcall	___lwmod
  2231  02EC  0871               	movf	?___lwmod+1,w
  2232  02ED  1283               	bcf	3,5	;RP0=0, select bank0
  2233  02EE  1303               	bcf	3,6	;RP1=0, select bank0
  2234  02EF  00CE               	movwf	adcToString@digito+1
  2235  02F0  0870               	movf	?___lwmod,w
  2236  02F1  00CD               	movwf	adcToString@digito
  2237  02F2                     l2019:
  2238                           
  2239                           ;main.c: 119:     salida[3] = digito +48;
  2240  02F2  084D               	movf	adcToString@digito,w
  2241  02F3  3E30               	addlw	48
  2242  02F4  00C7               	movwf	??_adcToString
  2243  02F5  0847               	movf	??_adcToString,w
  2244  02F6  00CB               	movwf	adcToString@salida+3
  2245  02F7                     l2021:
  2246                           
  2247                           ;main.c: 120:     salida[4] = '\0';
  2248  02F7  01CC               	clrf	adcToString@salida+4
  2249  02F8                     l2023:
  2250                           
  2251                           ;main.c: 121:     return salida;
  2252  02F8  3048               	movlw	(low (adcToString@salida| 0))& (0+255)
  2253  02F9                     l55:
  2254  02F9  0008               	return
  2255  02FA                     __end_of_adcToString:
  2256                           
  2257                           	psect	text10
  2258  02FA                     __ptext10:	
  2259 ;; *************** function ___xxtofl *****************
  2260 ;; Defined at:
  2261 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\xxtofl.c"
  2262 ;; Parameters:    Size  Location     Type
  2263 ;;  sign            1    wreg     unsigned char 
  2264 ;;  val             4    0[COMMON] long 
  2265 ;; Auto vars:     Size  Location     Type
  2266 ;;  sign            1    8[COMMON] unsigned char 
  2267 ;;  arg             4   10[COMMON] unsigned long 
  2268 ;;  exp             1    9[COMMON] unsigned char 
  2269 ;; Return value:  Size  Location     Type
  2270 ;;                  4    0[COMMON] unsigned char 
  2271 ;; Registers used:
  2272 ;;		wreg, status,2, status,0
  2273 ;; Tracked objects:
  2274 ;;		On entry : 0/0
  2275 ;;		On exit  : 0/0
  2276 ;;		Unchanged: 0/0
  2277 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2278 ;;      Params:         4       0       0       0       0
  2279 ;;      Locals:         6       0       0       0       0
  2280 ;;      Temps:          4       0       0       0       0
  2281 ;;      Totals:        14       0       0       0       0
  2282 ;;Total ram usage:       14 bytes
  2283 ;; Hardware stack levels used:    1
  2284 ;; This function calls:
  2285 ;;		Nothing
  2286 ;; This function is called by:
  2287 ;;		_adcToString
  2288 ;; This function uses a non-reentrant model
  2289 ;;
  2290                           
  2291                           
  2292                           ;psect for function ___xxtofl
  2293  02FA                     ___xxtofl:
  2294                           
  2295                           ;incstack = 0
  2296                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  2297                           ;___xxtofl@sign stored from wreg
  2298  02FA  00F8               	movwf	___xxtofl@sign
  2299  02FB                     l1879:
  2300  02FB  0878               	movf	___xxtofl@sign,w
  2301  02FC  1903               	btfsc	3,2
  2302  02FD  2AFF               	goto	u2681
  2303  02FE  2B00               	goto	u2680
  2304  02FF                     u2681:
  2305  02FF  2B14               	goto	l1885
  2306  0300                     u2680:
  2307  0300                     l1881:
  2308  0300  1FF3               	btfss	___xxtofl@val+3,7
  2309  0301  2B03               	goto	u2691
  2310  0302  2B04               	goto	u2690
  2311  0303                     u2691:
  2312  0303  2B14               	goto	l1885
  2313  0304                     u2690:
  2314  0304                     l1883:
  2315  0304  0970               	comf	___xxtofl@val,w
  2316  0305  00FA               	movwf	___xxtofl@arg
  2317  0306  0971               	comf	___xxtofl@val+1,w
  2318  0307  00FB               	movwf	___xxtofl@arg+1
  2319  0308  0972               	comf	___xxtofl@val+2,w
  2320  0309  00FC               	movwf	___xxtofl@arg+2
  2321  030A  0973               	comf	___xxtofl@val+3,w
  2322  030B  00FD               	movwf	___xxtofl@arg+3
  2323  030C  0AFA               	incf	___xxtofl@arg,f
  2324  030D  1903               	skipnz
  2325  030E  0AFB               	incf	___xxtofl@arg+1,f
  2326  030F  1903               	skipnz
  2327  0310  0AFC               	incf	___xxtofl@arg+2,f
  2328  0311  1903               	skipnz
  2329  0312  0AFD               	incf	___xxtofl@arg+3,f
  2330  0313  2B1C               	goto	l718
  2331  0314                     l1885:
  2332  0314  0873               	movf	___xxtofl@val+3,w
  2333  0315  00FD               	movwf	___xxtofl@arg+3
  2334  0316  0872               	movf	___xxtofl@val+2,w
  2335  0317  00FC               	movwf	___xxtofl@arg+2
  2336  0318  0871               	movf	___xxtofl@val+1,w
  2337  0319  00FB               	movwf	___xxtofl@arg+1
  2338  031A  0870               	movf	___xxtofl@val,w
  2339  031B  00FA               	movwf	___xxtofl@arg
  2340  031C                     l718:
  2341  031C  0873               	movf	___xxtofl@val+3,w
  2342  031D  0472               	iorwf	___xxtofl@val+2,w
  2343  031E  0471               	iorwf	___xxtofl@val+1,w
  2344  031F  0470               	iorwf	___xxtofl@val,w
  2345  0320  1D03               	skipz
  2346  0321  2B23               	goto	u2701
  2347  0322  2B24               	goto	u2700
  2348  0323                     u2701:
  2349  0323  2B2D               	goto	l1891
  2350  0324                     u2700:
  2351  0324                     l1887:
  2352  0324  3000               	movlw	0
  2353  0325  00F3               	movwf	?___xxtofl+3
  2354  0326  3000               	movlw	0
  2355  0327  00F2               	movwf	?___xxtofl+2
  2356  0328  3000               	movlw	0
  2357  0329  00F1               	movwf	?___xxtofl+1
  2358  032A  3000               	movlw	0
  2359  032B  00F0               	movwf	?___xxtofl
  2360  032C  2BB3               	goto	l720
  2361  032D                     l1891:
  2362  032D  3096               	movlw	150
  2363  032E  00F4               	movwf	??___xxtofl
  2364  032F  0874               	movf	??___xxtofl,w
  2365  0330  00F9               	movwf	___xxtofl@exp
  2366  0331  2B3F               	goto	l1895
  2367  0332                     l1893:
  2368  0332  3001               	movlw	1
  2369  0333  00F4               	movwf	??___xxtofl
  2370  0334  0874               	movf	??___xxtofl,w
  2371  0335  07F9               	addwf	___xxtofl@exp,f
  2372  0336  3001               	movlw	1
  2373  0337                     u2715:
  2374  0337  1003               	clrc
  2375  0338  0CFD               	rrf	___xxtofl@arg+3,f
  2376  0339  0CFC               	rrf	___xxtofl@arg+2,f
  2377  033A  0CFB               	rrf	___xxtofl@arg+1,f
  2378  033B  0CFA               	rrf	___xxtofl@arg,f
  2379  033C  3EFF               	addlw	-1
  2380  033D  1D03               	skipz
  2381  033E  2B37               	goto	u2715
  2382  033F                     l1895:
  2383  033F  30FE               	movlw	254
  2384  0340  057D               	andwf	___xxtofl@arg+3,w
  2385  0341  1D03               	btfss	3,2
  2386  0342  2B44               	goto	u2721
  2387  0343  2B45               	goto	u2720
  2388  0344                     u2721:
  2389  0344  2B32               	goto	l1893
  2390  0345                     u2720:
  2391  0345  2B61               	goto	l724
  2392  0346                     l1897:
  2393  0346  3001               	movlw	1
  2394  0347  00F4               	movwf	??___xxtofl
  2395  0348  0874               	movf	??___xxtofl,w
  2396  0349  07F9               	addwf	___xxtofl@exp,f
  2397  034A                     l1899:
  2398  034A  3001               	movlw	1
  2399  034B  07FA               	addwf	___xxtofl@arg,f
  2400  034C  3000               	movlw	0
  2401  034D  1803               	skipnc
  2402  034E  3001               	movlw	1
  2403  034F  07FB               	addwf	___xxtofl@arg+1,f
  2404  0350  3000               	movlw	0
  2405  0351  1803               	skipnc
  2406  0352  3001               	movlw	1
  2407  0353  07FC               	addwf	___xxtofl@arg+2,f
  2408  0354  3000               	movlw	0
  2409  0355  1803               	skipnc
  2410  0356  3001               	movlw	1
  2411  0357  07FD               	addwf	___xxtofl@arg+3,f
  2412  0358                     l1901:
  2413  0358  3001               	movlw	1
  2414  0359                     u2735:
  2415  0359  1003               	clrc
  2416  035A  0CFD               	rrf	___xxtofl@arg+3,f
  2417  035B  0CFC               	rrf	___xxtofl@arg+2,f
  2418  035C  0CFB               	rrf	___xxtofl@arg+1,f
  2419  035D  0CFA               	rrf	___xxtofl@arg,f
  2420  035E  3EFF               	addlw	-1
  2421  035F  1D03               	skipz
  2422  0360  2B59               	goto	u2735
  2423  0361                     l724:
  2424  0361  30FF               	movlw	255
  2425  0362  057D               	andwf	___xxtofl@arg+3,w
  2426  0363  1D03               	btfss	3,2
  2427  0364  2B66               	goto	u2741
  2428  0365  2B67               	goto	u2740
  2429  0366                     u2741:
  2430  0366  2B46               	goto	l1897
  2431  0367                     u2740:
  2432  0367  2B73               	goto	l1905
  2433  0368                     l1903:
  2434  0368  3001               	movlw	1
  2435  0369  02F9               	subwf	___xxtofl@exp,f
  2436  036A  3001               	movlw	1
  2437  036B  00F4               	movwf	??___xxtofl
  2438  036C                     u2755:
  2439  036C  1003               	clrc
  2440  036D  0DFA               	rlf	___xxtofl@arg,f
  2441  036E  0DFB               	rlf	___xxtofl@arg+1,f
  2442  036F  0DFC               	rlf	___xxtofl@arg+2,f
  2443  0370  0DFD               	rlf	___xxtofl@arg+3,f
  2444  0371  0BF4               	decfsz	??___xxtofl,f
  2445  0372  2B6C               	goto	u2755
  2446  0373                     l1905:
  2447  0373  1BFC               	btfsc	___xxtofl@arg+2,7
  2448  0374  2B76               	goto	u2761
  2449  0375  2B77               	goto	u2760
  2450  0376                     u2761:
  2451  0376  2B7D               	goto	l731
  2452  0377                     u2760:
  2453  0377                     l1907:
  2454  0377  3002               	movlw	2
  2455  0378  0279               	subwf	___xxtofl@exp,w
  2456  0379  1803               	skipnc
  2457  037A  2B7C               	goto	u2771
  2458  037B  2B7D               	goto	u2770
  2459  037C                     u2771:
  2460  037C  2B68               	goto	l1903
  2461  037D                     u2770:
  2462  037D                     l731:
  2463  037D  1879               	btfsc	___xxtofl@exp,0
  2464  037E  2B80               	goto	u2781
  2465  037F  2B81               	goto	u2780
  2466  0380                     u2781:
  2467  0380  2B89               	goto	l732
  2468  0381                     u2780:
  2469  0381                     l1909:
  2470  0381  30FF               	movlw	255
  2471  0382  05FA               	andwf	___xxtofl@arg,f
  2472  0383  30FF               	movlw	255
  2473  0384  05FB               	andwf	___xxtofl@arg+1,f
  2474  0385  307F               	movlw	127
  2475  0386  05FC               	andwf	___xxtofl@arg+2,f
  2476  0387  30FF               	movlw	255
  2477  0388  05FD               	andwf	___xxtofl@arg+3,f
  2478  0389                     l732:
  2479  0389  1003               	clrc
  2480  038A  0CF9               	rrf	___xxtofl@exp,f
  2481  038B                     l1911:
  2482  038B  0879               	movf	___xxtofl@exp,w
  2483  038C  00F4               	movwf	??___xxtofl
  2484  038D  01F5               	clrf	??___xxtofl+1
  2485  038E  01F6               	clrf	??___xxtofl+2
  2486  038F  01F7               	clrf	??___xxtofl+3
  2487  0390  3018               	movlw	24
  2488  0391                     u2795:
  2489  0391  1003               	clrc
  2490  0392  0DF4               	rlf	??___xxtofl,f
  2491  0393  0DF5               	rlf	??___xxtofl+1,f
  2492  0394  0DF6               	rlf	??___xxtofl+2,f
  2493  0395  0DF7               	rlf	??___xxtofl+3,f
  2494  0396                     u2790:
  2495  0396  3EFF               	addlw	-1
  2496  0397  1D03               	skipz
  2497  0398  2B91               	goto	u2795
  2498  0399  0874               	movf	??___xxtofl,w
  2499  039A  04FA               	iorwf	___xxtofl@arg,f
  2500  039B  0875               	movf	??___xxtofl+1,w
  2501  039C  04FB               	iorwf	___xxtofl@arg+1,f
  2502  039D  0876               	movf	??___xxtofl+2,w
  2503  039E  04FC               	iorwf	___xxtofl@arg+2,f
  2504  039F  0877               	movf	??___xxtofl+3,w
  2505  03A0  04FD               	iorwf	___xxtofl@arg+3,f
  2506  03A1                     l1913:
  2507  03A1  0878               	movf	___xxtofl@sign,w
  2508  03A2  1903               	btfsc	3,2
  2509  03A3  2BA5               	goto	u2801
  2510  03A4  2BA6               	goto	u2800
  2511  03A5                     u2801:
  2512  03A5  2BAB               	goto	l1919
  2513  03A6                     u2800:
  2514  03A6                     l1915:
  2515  03A6  1FF3               	btfss	___xxtofl@val+3,7
  2516  03A7  2BA9               	goto	u2811
  2517  03A8  2BAA               	goto	u2810
  2518  03A9                     u2811:
  2519  03A9  2BAB               	goto	l1919
  2520  03AA                     u2810:
  2521  03AA                     l1917:
  2522  03AA  17FD               	bsf	___xxtofl@arg+3,7
  2523  03AB                     l1919:
  2524  03AB  087D               	movf	___xxtofl@arg+3,w
  2525  03AC  00F3               	movwf	?___xxtofl+3
  2526  03AD  087C               	movf	___xxtofl@arg+2,w
  2527  03AE  00F2               	movwf	?___xxtofl+2
  2528  03AF  087B               	movf	___xxtofl@arg+1,w
  2529  03B0  00F1               	movwf	?___xxtofl+1
  2530  03B1  087A               	movf	___xxtofl@arg,w
  2531  03B2  00F0               	movwf	?___xxtofl
  2532  03B3                     l720:
  2533  03B3  0008               	return
  2534  03B4                     __end_of___xxtofl:
  2535                           
  2536                           	psect	text11
  2537  0DF8                     __ptext11:	
  2538 ;; *************** function ___wmul *****************
  2539 ;; Defined at:
  2540 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul16.c"
  2541 ;; Parameters:    Size  Location     Type
  2542 ;;  multiplier      2    0[COMMON] unsigned int 
  2543 ;;  multiplicand    2    2[COMMON] unsigned int 
  2544 ;; Auto vars:     Size  Location     Type
  2545 ;;  product         2    4[COMMON] unsigned int 
  2546 ;; Return value:  Size  Location     Type
  2547 ;;                  2    0[COMMON] unsigned int 
  2548 ;; Registers used:
  2549 ;;		wreg, status,2, status,0
  2550 ;; Tracked objects:
  2551 ;;		On entry : 0/0
  2552 ;;		On exit  : 0/0
  2553 ;;		Unchanged: 0/0
  2554 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2555 ;;      Params:         4       0       0       0       0
  2556 ;;      Locals:         2       0       0       0       0
  2557 ;;      Temps:          0       0       0       0       0
  2558 ;;      Totals:         6       0       0       0       0
  2559 ;;Total ram usage:        6 bytes
  2560 ;; Hardware stack levels used:    1
  2561 ;; This function calls:
  2562 ;;		Nothing
  2563 ;; This function is called by:
  2564 ;;		_adcToString
  2565 ;; This function uses a non-reentrant model
  2566 ;;
  2567                           
  2568                           
  2569                           ;psect for function ___wmul
  2570  0DF8                     ___wmul:
  2571  0DF8                     l1521:	
  2572                           ;incstack = 0
  2573                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  2574                           
  2575  0DF8  01F4               	clrf	___wmul@product
  2576  0DF9  01F5               	clrf	___wmul@product+1
  2577  0DFA                     l1523:
  2578  0DFA  1C70               	btfss	___wmul@multiplier,0
  2579  0DFB  2DFD               	goto	u1761
  2580  0DFC  2DFE               	goto	u1760
  2581  0DFD                     u1761:
  2582  0DFD  2E04               	goto	l285
  2583  0DFE                     u1760:
  2584  0DFE                     l1525:
  2585  0DFE  0872               	movf	___wmul@multiplicand,w
  2586  0DFF  07F4               	addwf	___wmul@product,f
  2587  0E00  1803               	skipnc
  2588  0E01  0AF5               	incf	___wmul@product+1,f
  2589  0E02  0873               	movf	___wmul@multiplicand+1,w
  2590  0E03  07F5               	addwf	___wmul@product+1,f
  2591  0E04                     l285:
  2592  0E04  3001               	movlw	1
  2593  0E05                     u1775:
  2594  0E05  1003               	clrc
  2595  0E06  0DF2               	rlf	___wmul@multiplicand,f
  2596  0E07  0DF3               	rlf	___wmul@multiplicand+1,f
  2597  0E08  3EFF               	addlw	-1
  2598  0E09  1D03               	skipz
  2599  0E0A  2E05               	goto	u1775
  2600  0E0B                     l1527:
  2601  0E0B  3001               	movlw	1
  2602  0E0C                     u1785:
  2603  0E0C  1003               	clrc
  2604  0E0D  0CF1               	rrf	___wmul@multiplier+1,f
  2605  0E0E  0CF0               	rrf	___wmul@multiplier,f
  2606  0E0F  3EFF               	addlw	-1
  2607  0E10  1D03               	skipz
  2608  0E11  2E0C               	goto	u1785
  2609  0E12                     l1529:
  2610  0E12  0870               	movf	___wmul@multiplier,w
  2611  0E13  0471               	iorwf	___wmul@multiplier+1,w
  2612  0E14  1D03               	btfss	3,2
  2613  0E15  2E17               	goto	u1791
  2614  0E16  2E18               	goto	u1790
  2615  0E17                     u1791:
  2616  0E17  2DFA               	goto	l1523
  2617  0E18                     u1790:
  2618  0E18                     l1531:
  2619  0E18  0875               	movf	___wmul@product+1,w
  2620  0E19  00F1               	movwf	?___wmul+1
  2621  0E1A  0874               	movf	___wmul@product,w
  2622  0E1B  00F0               	movwf	?___wmul
  2623  0E1C                     l287:
  2624  0E1C  0008               	return
  2625  0E1D                     __end_of___wmul:
  2626                           
  2627                           	psect	text12
  2628  0E44                     __ptext12:	
  2629 ;; *************** function ___lwmod *****************
  2630 ;; Defined at:
  2631 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwmod.c"
  2632 ;; Parameters:    Size  Location     Type
  2633 ;;  divisor         2    0[COMMON] unsigned int 
  2634 ;;  dividend        2    2[COMMON] unsigned int 
  2635 ;; Auto vars:     Size  Location     Type
  2636 ;;  counter         1    5[COMMON] unsigned char 
  2637 ;; Return value:  Size  Location     Type
  2638 ;;                  2    0[COMMON] unsigned int 
  2639 ;; Registers used:
  2640 ;;		wreg, status,2, status,0
  2641 ;; Tracked objects:
  2642 ;;		On entry : 0/0
  2643 ;;		On exit  : 0/0
  2644 ;;		Unchanged: 0/0
  2645 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2646 ;;      Params:         4       0       0       0       0
  2647 ;;      Locals:         1       0       0       0       0
  2648 ;;      Temps:          1       0       0       0       0
  2649 ;;      Totals:         6       0       0       0       0
  2650 ;;Total ram usage:        6 bytes
  2651 ;; Hardware stack levels used:    1
  2652 ;; This function calls:
  2653 ;;		Nothing
  2654 ;; This function is called by:
  2655 ;;		_adcToString
  2656 ;; This function uses a non-reentrant model
  2657 ;;
  2658                           
  2659                           
  2660                           ;psect for function ___lwmod
  2661  0E44                     ___lwmod:
  2662  0E44                     l1717:	
  2663                           ;incstack = 0
  2664                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  2665                           
  2666  0E44  0870               	movf	___lwmod@divisor,w
  2667  0E45  0471               	iorwf	___lwmod@divisor+1,w
  2668  0E46  1903               	btfsc	3,2
  2669  0E47  2E49               	goto	u2251
  2670  0E48  2E4A               	goto	u2250
  2671  0E49                     u2251:
  2672  0E49  2E79               	goto	l1735
  2673  0E4A                     u2250:
  2674  0E4A                     l1719:
  2675  0E4A  01F5               	clrf	___lwmod@counter
  2676  0E4B  0AF5               	incf	___lwmod@counter,f
  2677  0E4C  2E58               	goto	l1725
  2678  0E4D                     l1721:
  2679  0E4D  3001               	movlw	1
  2680  0E4E                     u2265:
  2681  0E4E  1003               	clrc
  2682  0E4F  0DF0               	rlf	___lwmod@divisor,f
  2683  0E50  0DF1               	rlf	___lwmod@divisor+1,f
  2684  0E51  3EFF               	addlw	-1
  2685  0E52  1D03               	skipz
  2686  0E53  2E4E               	goto	u2265
  2687  0E54                     l1723:
  2688  0E54  3001               	movlw	1
  2689  0E55  00F4               	movwf	??___lwmod
  2690  0E56  0874               	movf	??___lwmod,w
  2691  0E57  07F5               	addwf	___lwmod@counter,f
  2692  0E58                     l1725:
  2693  0E58  1FF1               	btfss	___lwmod@divisor+1,7
  2694  0E59  2E5B               	goto	u2271
  2695  0E5A  2E5C               	goto	u2270
  2696  0E5B                     u2271:
  2697  0E5B  2E4D               	goto	l1721
  2698  0E5C                     u2270:
  2699  0E5C                     l1727:
  2700  0E5C  0871               	movf	___lwmod@divisor+1,w
  2701  0E5D  0273               	subwf	___lwmod@dividend+1,w
  2702  0E5E  1D03               	skipz
  2703  0E5F  2E62               	goto	u2285
  2704  0E60  0870               	movf	___lwmod@divisor,w
  2705  0E61  0272               	subwf	___lwmod@dividend,w
  2706  0E62                     u2285:
  2707  0E62  1C03               	skipc
  2708  0E63  2E65               	goto	u2281
  2709  0E64  2E66               	goto	u2280
  2710  0E65                     u2281:
  2711  0E65  2E6C               	goto	l1731
  2712  0E66                     u2280:
  2713  0E66                     l1729:
  2714  0E66  0870               	movf	___lwmod@divisor,w
  2715  0E67  02F2               	subwf	___lwmod@dividend,f
  2716  0E68  0871               	movf	___lwmod@divisor+1,w
  2717  0E69  1C03               	skipc
  2718  0E6A  03F3               	decf	___lwmod@dividend+1,f
  2719  0E6B  02F3               	subwf	___lwmod@dividend+1,f
  2720  0E6C                     l1731:
  2721  0E6C  3001               	movlw	1
  2722  0E6D                     u2295:
  2723  0E6D  1003               	clrc
  2724  0E6E  0CF1               	rrf	___lwmod@divisor+1,f
  2725  0E6F  0CF0               	rrf	___lwmod@divisor,f
  2726  0E70  3EFF               	addlw	-1
  2727  0E71  1D03               	skipz
  2728  0E72  2E6D               	goto	u2295
  2729  0E73                     l1733:
  2730  0E73  3001               	movlw	1
  2731  0E74  02F5               	subwf	___lwmod@counter,f
  2732  0E75  1D03               	btfss	3,2
  2733  0E76  2E78               	goto	u2301
  2734  0E77  2E79               	goto	u2300
  2735  0E78                     u2301:
  2736  0E78  2E5C               	goto	l1727
  2737  0E79                     u2300:
  2738  0E79                     l1735:
  2739  0E79  0873               	movf	___lwmod@dividend+1,w
  2740  0E7A  00F1               	movwf	?___lwmod+1
  2741  0E7B  0872               	movf	___lwmod@dividend,w
  2742  0E7C  00F0               	movwf	?___lwmod
  2743  0E7D                     l567:
  2744  0E7D  0008               	return
  2745  0E7E                     __end_of___lwmod:
  2746                           
  2747                           	psect	text13
  2748  0EC0                     __ptext13:	
  2749 ;; *************** function ___lwdiv *****************
  2750 ;; Defined at:
  2751 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwdiv.c"
  2752 ;; Parameters:    Size  Location     Type
  2753 ;;  divisor         2    0[COMMON] unsigned int 
  2754 ;;  dividend        2    2[COMMON] unsigned int 
  2755 ;; Auto vars:     Size  Location     Type
  2756 ;;  quotient        2    5[COMMON] unsigned int 
  2757 ;;  counter         1    7[COMMON] unsigned char 
  2758 ;; Return value:  Size  Location     Type
  2759 ;;                  2    0[COMMON] unsigned int 
  2760 ;; Registers used:
  2761 ;;		wreg, status,2, status,0
  2762 ;; Tracked objects:
  2763 ;;		On entry : 0/0
  2764 ;;		On exit  : 0/0
  2765 ;;		Unchanged: 0/0
  2766 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2767 ;;      Params:         4       0       0       0       0
  2768 ;;      Locals:         3       0       0       0       0
  2769 ;;      Temps:          1       0       0       0       0
  2770 ;;      Totals:         8       0       0       0       0
  2771 ;;Total ram usage:        8 bytes
  2772 ;; Hardware stack levels used:    1
  2773 ;; This function calls:
  2774 ;;		Nothing
  2775 ;; This function is called by:
  2776 ;;		_adcToString
  2777 ;; This function uses a non-reentrant model
  2778 ;;
  2779                           
  2780                           
  2781                           ;psect for function ___lwdiv
  2782  0EC0                     ___lwdiv:
  2783  0EC0                     l1691:	
  2784                           ;incstack = 0
  2785                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  2786                           
  2787  0EC0  01F5               	clrf	___lwdiv@quotient
  2788  0EC1  01F6               	clrf	___lwdiv@quotient+1
  2789  0EC2                     l1693:
  2790  0EC2  0870               	movf	___lwdiv@divisor,w
  2791  0EC3  0471               	iorwf	___lwdiv@divisor+1,w
  2792  0EC4  1903               	btfsc	3,2
  2793  0EC5  2EC7               	goto	u2181
  2794  0EC6  2EC8               	goto	u2180
  2795  0EC7                     u2181:
  2796  0EC7  2EFF               	goto	l1713
  2797  0EC8                     u2180:
  2798  0EC8                     l1695:
  2799  0EC8  01F7               	clrf	___lwdiv@counter
  2800  0EC9  0AF7               	incf	___lwdiv@counter,f
  2801  0ECA  2ED6               	goto	l1701
  2802  0ECB                     l1697:
  2803  0ECB  3001               	movlw	1
  2804  0ECC                     u2195:
  2805  0ECC  1003               	clrc
  2806  0ECD  0DF0               	rlf	___lwdiv@divisor,f
  2807  0ECE  0DF1               	rlf	___lwdiv@divisor+1,f
  2808  0ECF  3EFF               	addlw	-1
  2809  0ED0  1D03               	skipz
  2810  0ED1  2ECC               	goto	u2195
  2811  0ED2                     l1699:
  2812  0ED2  3001               	movlw	1
  2813  0ED3  00F4               	movwf	??___lwdiv
  2814  0ED4  0874               	movf	??___lwdiv,w
  2815  0ED5  07F7               	addwf	___lwdiv@counter,f
  2816  0ED6                     l1701:
  2817  0ED6  1FF1               	btfss	___lwdiv@divisor+1,7
  2818  0ED7  2ED9               	goto	u2201
  2819  0ED8  2EDA               	goto	u2200
  2820  0ED9                     u2201:
  2821  0ED9  2ECB               	goto	l1697
  2822  0EDA                     u2200:
  2823  0EDA                     l1703:
  2824  0EDA  3001               	movlw	1
  2825  0EDB                     u2215:
  2826  0EDB  1003               	clrc
  2827  0EDC  0DF5               	rlf	___lwdiv@quotient,f
  2828  0EDD  0DF6               	rlf	___lwdiv@quotient+1,f
  2829  0EDE  3EFF               	addlw	-1
  2830  0EDF  1D03               	skipz
  2831  0EE0  2EDB               	goto	u2215
  2832  0EE1  0871               	movf	___lwdiv@divisor+1,w
  2833  0EE2  0273               	subwf	___lwdiv@dividend+1,w
  2834  0EE3  1D03               	skipz
  2835  0EE4  2EE7               	goto	u2225
  2836  0EE5  0870               	movf	___lwdiv@divisor,w
  2837  0EE6  0272               	subwf	___lwdiv@dividend,w
  2838  0EE7                     u2225:
  2839  0EE7  1C03               	skipc
  2840  0EE8  2EEA               	goto	u2221
  2841  0EE9  2EEB               	goto	u2220
  2842  0EEA                     u2221:
  2843  0EEA  2EF2               	goto	l1709
  2844  0EEB                     u2220:
  2845  0EEB                     l1705:
  2846  0EEB  0870               	movf	___lwdiv@divisor,w
  2847  0EEC  02F2               	subwf	___lwdiv@dividend,f
  2848  0EED  0871               	movf	___lwdiv@divisor+1,w
  2849  0EEE  1C03               	skipc
  2850  0EEF  03F3               	decf	___lwdiv@dividend+1,f
  2851  0EF0  02F3               	subwf	___lwdiv@dividend+1,f
  2852  0EF1                     l1707:
  2853  0EF1  1475               	bsf	___lwdiv@quotient,0
  2854  0EF2                     l1709:
  2855  0EF2  3001               	movlw	1
  2856  0EF3                     u2235:
  2857  0EF3  1003               	clrc
  2858  0EF4  0CF1               	rrf	___lwdiv@divisor+1,f
  2859  0EF5  0CF0               	rrf	___lwdiv@divisor,f
  2860  0EF6  3EFF               	addlw	-1
  2861  0EF7  1D03               	skipz
  2862  0EF8  2EF3               	goto	u2235
  2863  0EF9                     l1711:
  2864  0EF9  3001               	movlw	1
  2865  0EFA  02F7               	subwf	___lwdiv@counter,f
  2866  0EFB  1D03               	btfss	3,2
  2867  0EFC  2EFE               	goto	u2241
  2868  0EFD  2EFF               	goto	u2240
  2869  0EFE                     u2241:
  2870  0EFE  2EDA               	goto	l1703
  2871  0EFF                     u2240:
  2872  0EFF                     l1713:
  2873  0EFF  0876               	movf	___lwdiv@quotient+1,w
  2874  0F00  00F1               	movwf	?___lwdiv+1
  2875  0F01  0875               	movf	___lwdiv@quotient,w
  2876  0F02  00F0               	movwf	?___lwdiv
  2877  0F03                     l557:
  2878  0F03  0008               	return
  2879  0F04                     __end_of___lwdiv:
  2880                           
  2881                           	psect	text14
  2882  0156                     __ptext14:	
  2883 ;; *************** function ___fltol *****************
  2884 ;; Defined at:
  2885 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\fltol.c"
  2886 ;; Parameters:    Size  Location     Type
  2887 ;;  f1              4   26[BANK0 ] unsigned int 
  2888 ;; Auto vars:     Size  Location     Type
  2889 ;;  exp1            1   36[BANK0 ] unsigned char 
  2890 ;;  sign1           1   35[BANK0 ] unsigned char 
  2891 ;; Return value:  Size  Location     Type
  2892 ;;                  4   26[BANK0 ] long 
  2893 ;; Registers used:
  2894 ;;		wreg, status,2, status,0
  2895 ;; Tracked objects:
  2896 ;;		On entry : 0/0
  2897 ;;		On exit  : 0/0
  2898 ;;		Unchanged: 0/0
  2899 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2900 ;;      Params:         0       4       0       0       0
  2901 ;;      Locals:         0       2       0       0       0
  2902 ;;      Temps:          0       5       0       0       0
  2903 ;;      Totals:         0      11       0       0       0
  2904 ;;Total ram usage:       11 bytes
  2905 ;; Hardware stack levels used:    1
  2906 ;; This function calls:
  2907 ;;		Nothing
  2908 ;; This function is called by:
  2909 ;;		_adcToString
  2910 ;; This function uses a non-reentrant model
  2911 ;;
  2912                           
  2913                           
  2914                           ;psect for function ___fltol
  2915  0156                     ___fltol:
  2916  0156                     l1655:	
  2917                           ;incstack = 0
  2918                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  2919                           
  2920  0156  1003               	clrc
  2921  0157  1283               	bcf	3,5	;RP0=0, select bank0
  2922  0158  1303               	bcf	3,6	;RP1=0, select bank0
  2923  0159  0D3C               	rlf	___fltol@f1+2,w
  2924  015A  0D3D               	rlf	___fltol@f1+3,w
  2925  015B  00BE               	movwf	??___fltol
  2926  015C  083E               	movf	??___fltol,w
  2927  015D  00C4               	movwf	___fltol@exp1
  2928  015E  0844               	movf	___fltol@exp1,w
  2929  015F  1D03               	btfss	3,2
  2930  0160  2962               	goto	u2081
  2931  0161  2963               	goto	u2080
  2932  0162                     u2081:
  2933  0162  296C               	goto	l1661
  2934  0163                     u2080:
  2935  0163                     l1657:
  2936  0163  3000               	movlw	0
  2937  0164  00BD               	movwf	?___fltol+3
  2938  0165  3000               	movlw	0
  2939  0166  00BC               	movwf	?___fltol+2
  2940  0167  3000               	movlw	0
  2941  0168  00BB               	movwf	?___fltol+1
  2942  0169  3000               	movlw	0
  2943  016A  00BA               	movwf	?___fltol
  2944  016B  29D1               	goto	l471
  2945  016C                     l1661:
  2946  016C  083A               	movf	___fltol@f1,w
  2947  016D  00BE               	movwf	??___fltol
  2948  016E  083B               	movf	___fltol@f1+1,w
  2949  016F  00BF               	movwf	??___fltol+1
  2950  0170  083C               	movf	___fltol@f1+2,w
  2951  0171  00C0               	movwf	??___fltol+2
  2952  0172  083D               	movf	___fltol@f1+3,w
  2953  0173  00C1               	movwf	??___fltol+3
  2954  0174  301F               	movlw	31
  2955  0175                     u2095:
  2956  0175  1003               	clrc
  2957  0176  0CC1               	rrf	??___fltol+3,f
  2958  0177  0CC0               	rrf	??___fltol+2,f
  2959  0178  0CBF               	rrf	??___fltol+1,f
  2960  0179  0CBE               	rrf	??___fltol,f
  2961  017A                     u2090:
  2962  017A  3EFF               	addlw	-1
  2963  017B  1D03               	skipz
  2964  017C  2975               	goto	u2095
  2965  017D  083E               	movf	??___fltol,w
  2966  017E  00C2               	movwf	??___fltol+4
  2967  017F  0842               	movf	??___fltol+4,w
  2968  0180  00C3               	movwf	___fltol@sign1
  2969  0181                     l1663:
  2970  0181  17BC               	bsf	___fltol@f1+2,7
  2971  0182                     l1665:
  2972  0182  30FF               	movlw	255
  2973  0183  05BA               	andwf	___fltol@f1,f
  2974  0184  30FF               	movlw	255
  2975  0185  05BB               	andwf	___fltol@f1+1,f
  2976  0186  30FF               	movlw	255
  2977  0187  05BC               	andwf	___fltol@f1+2,f
  2978  0188  3000               	movlw	0
  2979  0189  05BD               	andwf	___fltol@f1+3,f
  2980  018A                     l1667:
  2981  018A  3096               	movlw	150
  2982  018B  02C4               	subwf	___fltol@exp1,f
  2983  018C                     l1669:
  2984  018C  1FC4               	btfss	___fltol@exp1,7
  2985  018D  298F               	goto	u2101
  2986  018E  2990               	goto	u2100
  2987  018F                     u2101:
  2988  018F  29AA               	goto	l1679
  2989  0190                     u2100:
  2990  0190                     l1671:
  2991  0190  0844               	movf	___fltol@exp1,w
  2992  0191  3A80               	xorlw	128
  2993  0192  3E97               	addlw	151
  2994  0193  1803               	skipnc
  2995  0194  2996               	goto	u2111
  2996  0195  2997               	goto	u2110
  2997  0196                     u2111:
  2998  0196  2998               	goto	l1677
  2999  0197                     u2110:
  3000  0197  2963               	goto	l1657
  3001  0198                     l1677:
  3002  0198  3001               	movlw	1
  3003  0199                     u2125:
  3004  0199  1003               	clrc
  3005  019A  0CBD               	rrf	___fltol@f1+3,f
  3006  019B  0CBC               	rrf	___fltol@f1+2,f
  3007  019C  0CBB               	rrf	___fltol@f1+1,f
  3008  019D  0CBA               	rrf	___fltol@f1,f
  3009  019E  3EFF               	addlw	-1
  3010  019F  1D03               	skipz
  3011  01A0  2999               	goto	u2125
  3012  01A1  3001               	movlw	1
  3013  01A2  00BE               	movwf	??___fltol
  3014  01A3  083E               	movf	??___fltol,w
  3015  01A4  07C4               	addwf	___fltol@exp1,f
  3016  01A5  1D03               	btfss	3,2
  3017  01A6  29A8               	goto	u2131
  3018  01A7  29A9               	goto	u2130
  3019  01A8                     u2131:
  3020  01A8  2998               	goto	l1677
  3021  01A9                     u2130:
  3022  01A9  29C1               	goto	l1687
  3023  01AA                     l1679:
  3024  01AA  3020               	movlw	32
  3025  01AB  0244               	subwf	___fltol@exp1,w
  3026  01AC  1C03               	skipc
  3027  01AD  29AF               	goto	u2141
  3028  01AE  29B0               	goto	u2140
  3029  01AF                     u2141:
  3030  01AF  29BC               	goto	l478
  3031  01B0                     u2140:
  3032  01B0  2963               	goto	l1657
  3033  01B1                     l1685:
  3034  01B1  3001               	movlw	1
  3035  01B2  00BE               	movwf	??___fltol
  3036  01B3                     u2155:
  3037  01B3  1003               	clrc
  3038  01B4  0DBA               	rlf	___fltol@f1,f
  3039  01B5  0DBB               	rlf	___fltol@f1+1,f
  3040  01B6  0DBC               	rlf	___fltol@f1+2,f
  3041  01B7  0DBD               	rlf	___fltol@f1+3,f
  3042  01B8  0BBE               	decfsz	??___fltol,f
  3043  01B9  29B3               	goto	u2155
  3044  01BA  3001               	movlw	1
  3045  01BB  02C4               	subwf	___fltol@exp1,f
  3046  01BC                     l478:
  3047  01BC  0844               	movf	___fltol@exp1,w
  3048  01BD  1D03               	btfss	3,2
  3049  01BE  29C0               	goto	u2161
  3050  01BF  29C1               	goto	u2160
  3051  01C0                     u2161:
  3052  01C0  29B1               	goto	l1685
  3053  01C1                     u2160:
  3054  01C1                     l1687:
  3055  01C1  0843               	movf	___fltol@sign1,w
  3056  01C2  1903               	btfsc	3,2
  3057  01C3  29C5               	goto	u2171
  3058  01C4  29C6               	goto	u2170
  3059  01C5                     u2171:
  3060  01C5  29D1               	goto	l481
  3061  01C6                     u2170:
  3062  01C6                     l1689:
  3063  01C6  09BA               	comf	___fltol@f1,f
  3064  01C7  09BB               	comf	___fltol@f1+1,f
  3065  01C8  09BC               	comf	___fltol@f1+2,f
  3066  01C9  09BD               	comf	___fltol@f1+3,f
  3067  01CA  0ABA               	incf	___fltol@f1,f
  3068  01CB  1903               	skipnz
  3069  01CC  0ABB               	incf	___fltol@f1+1,f
  3070  01CD  1903               	skipnz
  3071  01CE  0ABC               	incf	___fltol@f1+2,f
  3072  01CF  1903               	skipnz
  3073  01D0  0ABD               	incf	___fltol@f1+3,f
  3074  01D1                     l481:
  3075  01D1                     l471:
  3076  01D1  0008               	return
  3077  01D2                     __end_of___fltol:
  3078                           
  3079                           	psect	text15
  3080  0493                     __ptext15:	
  3081 ;; *************** function ___flmul *****************
  3082 ;; Defined at:
  3083 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcmul.c"
  3084 ;; Parameters:    Size  Location     Type
  3085 ;;  b               4    0[BANK0 ] long 
  3086 ;;  a               4    4[BANK0 ] long 
  3087 ;; Auto vars:     Size  Location     Type
  3088 ;;  prod            4   20[BANK0 ] struct .
  3089 ;;  grs             4   14[BANK0 ] unsigned long 
  3090 ;;  temp            2   24[BANK0 ] struct .
  3091 ;;  bexp            1   19[BANK0 ] unsigned char 
  3092 ;;  aexp            1   18[BANK0 ] unsigned char 
  3093 ;;  sign            1   13[BANK0 ] unsigned char 
  3094 ;; Return value:  Size  Location     Type
  3095 ;;                  4    0[BANK0 ] unsigned char 
  3096 ;; Registers used:
  3097 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  3098 ;; Tracked objects:
  3099 ;;		On entry : 0/0
  3100 ;;		On exit  : 0/0
  3101 ;;		Unchanged: 0/0
  3102 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3103 ;;      Params:         0       8       0       0       0
  3104 ;;      Locals:         0      13       0       0       0
  3105 ;;      Temps:          0       5       0       0       0
  3106 ;;      Totals:         0      26       0       0       0
  3107 ;;Total ram usage:       26 bytes
  3108 ;; Hardware stack levels used:    1
  3109 ;; Hardware stack levels required when called:    1
  3110 ;; This function calls:
  3111 ;;		__Umul8_16
  3112 ;; This function is called by:
  3113 ;;		_adcToString
  3114 ;; This function uses a non-reentrant model
  3115 ;;
  3116                           
  3117                           
  3118                           ;psect for function ___flmul
  3119  0493                     ___flmul:
  3120  0493                     l1739:	
  3121                           ;incstack = 0
  3122                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  3123                           
  3124  0493  1283               	bcf	3,5	;RP0=0, select bank0
  3125  0494  1303               	bcf	3,6	;RP1=0, select bank0
  3126  0495  0823               	movf	___flmul@b+3,w
  3127  0496  3980               	andlw	128
  3128  0497  00A8               	movwf	??___flmul
  3129  0498  0828               	movf	??___flmul,w
  3130  0499  00AD               	movwf	___flmul@sign
  3131  049A                     l1741:
  3132  049A  0823               	movf	___flmul@b+3,w
  3133  049B  00A8               	movwf	??___flmul
  3134  049C  0728               	addwf	??___flmul,w
  3135  049D  00A9               	movwf	??___flmul+1
  3136  049E  0829               	movf	??___flmul+1,w
  3137  049F  00B3               	movwf	___flmul@bexp
  3138  04A0                     l1743:
  3139  04A0  1FA2               	btfss	___flmul@b+2,7
  3140  04A1  2CA3               	goto	u2311
  3141  04A2  2CA4               	goto	u2310
  3142  04A3                     u2311:
  3143  04A3  2CA5               	goto	l1747
  3144  04A4                     u2310:
  3145  04A4                     l1745:
  3146  04A4  1433               	bsf	___flmul@bexp,0
  3147  04A5                     l1747:
  3148  04A5  0833               	movf	___flmul@bexp,w
  3149  04A6  1903               	btfsc	3,2
  3150  04A7  2CA9               	goto	u2321
  3151  04A8  2CAA               	goto	u2320
  3152  04A9                     u2321:
  3153  04A9  2CB9               	goto	l1755
  3154  04AA                     u2320:
  3155  04AA                     l1749:
  3156  04AA  0A33               	incf	___flmul@bexp,w
  3157  04AB  1D03               	btfss	3,2
  3158  04AC  2CAE               	goto	u2331
  3159  04AD  2CAF               	goto	u2330
  3160  04AE                     u2331:
  3161  04AE  2CB7               	goto	l1753
  3162  04AF                     u2330:
  3163  04AF                     l1751:
  3164  04AF  3000               	movlw	0
  3165  04B0  00A3               	movwf	___flmul@b+3
  3166  04B1  3000               	movlw	0
  3167  04B2  00A2               	movwf	___flmul@b+2
  3168  04B3  3000               	movlw	0
  3169  04B4  00A1               	movwf	___flmul@b+1
  3170  04B5  3000               	movlw	0
  3171  04B6  00A0               	movwf	___flmul@b
  3172  04B7                     l1753:
  3173  04B7  17A2               	bsf	___flmul@b+2,7
  3174  04B8  2CC1               	goto	l1757
  3175  04B9                     l1755:
  3176  04B9  3000               	movlw	0
  3177  04BA  00A3               	movwf	___flmul@b+3
  3178  04BB  3000               	movlw	0
  3179  04BC  00A2               	movwf	___flmul@b+2
  3180  04BD  3000               	movlw	0
  3181  04BE  00A1               	movwf	___flmul@b+1
  3182  04BF  3000               	movlw	0
  3183  04C0  00A0               	movwf	___flmul@b
  3184  04C1                     l1757:
  3185  04C1  0827               	movf	___flmul@a+3,w
  3186  04C2  3980               	andlw	128
  3187  04C3  00A8               	movwf	??___flmul
  3188  04C4  0828               	movf	??___flmul,w
  3189  04C5  06AD               	xorwf	___flmul@sign,f
  3190  04C6                     l1759:
  3191  04C6  0827               	movf	___flmul@a+3,w
  3192  04C7  00A8               	movwf	??___flmul
  3193  04C8  0728               	addwf	??___flmul,w
  3194  04C9  00A9               	movwf	??___flmul+1
  3195  04CA  0829               	movf	??___flmul+1,w
  3196  04CB  00B2               	movwf	___flmul@aexp
  3197  04CC                     l1761:
  3198  04CC  1FA6               	btfss	___flmul@a+2,7
  3199  04CD  2CCF               	goto	u2341
  3200  04CE  2CD0               	goto	u2340
  3201  04CF                     u2341:
  3202  04CF  2CD1               	goto	l1765
  3203  04D0                     u2340:
  3204  04D0                     l1763:
  3205  04D0  1432               	bsf	___flmul@aexp,0
  3206  04D1                     l1765:
  3207  04D1  0832               	movf	___flmul@aexp,w
  3208  04D2  1903               	btfsc	3,2
  3209  04D3  2CD5               	goto	u2351
  3210  04D4  2CD6               	goto	u2350
  3211  04D5                     u2351:
  3212  04D5  2CE5               	goto	l1773
  3213  04D6                     u2350:
  3214  04D6                     l1767:
  3215  04D6  0A32               	incf	___flmul@aexp,w
  3216  04D7  1D03               	btfss	3,2
  3217  04D8  2CDA               	goto	u2361
  3218  04D9  2CDB               	goto	u2360
  3219  04DA                     u2361:
  3220  04DA  2CE3               	goto	l1771
  3221  04DB                     u2360:
  3222  04DB                     l1769:
  3223  04DB  3000               	movlw	0
  3224  04DC  00A7               	movwf	___flmul@a+3
  3225  04DD  3000               	movlw	0
  3226  04DE  00A6               	movwf	___flmul@a+2
  3227  04DF  3000               	movlw	0
  3228  04E0  00A5               	movwf	___flmul@a+1
  3229  04E1  3000               	movlw	0
  3230  04E2  00A4               	movwf	___flmul@a
  3231  04E3                     l1771:
  3232  04E3  17A6               	bsf	___flmul@a+2,7
  3233  04E4  2CED               	goto	l1775
  3234  04E5                     l1773:
  3235  04E5  3000               	movlw	0
  3236  04E6  00A7               	movwf	___flmul@a+3
  3237  04E7  3000               	movlw	0
  3238  04E8  00A6               	movwf	___flmul@a+2
  3239  04E9  3000               	movlw	0
  3240  04EA  00A5               	movwf	___flmul@a+1
  3241  04EB  3000               	movlw	0
  3242  04EC  00A4               	movwf	___flmul@a
  3243  04ED                     l1775:
  3244  04ED  0832               	movf	___flmul@aexp,w
  3245  04EE  1903               	btfsc	3,2
  3246  04EF  2CF1               	goto	u2371
  3247  04F0  2CF2               	goto	u2370
  3248  04F1                     u2371:
  3249  04F1  2CF7               	goto	l1779
  3250  04F2                     u2370:
  3251  04F2                     l1777:
  3252  04F2  0833               	movf	___flmul@bexp,w
  3253  04F3  1D03               	btfss	3,2
  3254  04F4  2CF6               	goto	u2381
  3255  04F5  2CF7               	goto	u2380
  3256  04F6                     u2381:
  3257  04F6  2D00               	goto	l1783
  3258  04F7                     u2380:
  3259  04F7                     l1779:
  3260  04F7  3000               	movlw	0
  3261  04F8  00A3               	movwf	?___flmul+3
  3262  04F9  3000               	movlw	0
  3263  04FA  00A2               	movwf	?___flmul+2
  3264  04FB  3000               	movlw	0
  3265  04FC  00A1               	movwf	?___flmul+1
  3266  04FD  3000               	movlw	0
  3267  04FE  00A0               	movwf	?___flmul
  3268  04FF  2FF3               	goto	l674
  3269  0500                     l1783:
  3270  0500  0820               	movf	___flmul@b,w
  3271  0501  00A8               	movwf	??___flmul
  3272  0502  0828               	movf	??___flmul,w
  3273  0503  00F0               	movwf	__Umul8_16@multiplicand
  3274  0504  0826               	movf	___flmul@a+2,w
  3275  0505  120A  158A  261D  120A  118A  	fcall	__Umul8_16
  3276  050A  0871               	movf	?__Umul8_16+1,w
  3277  050B  1283               	bcf	3,5	;RP0=0, select bank0
  3278  050C  1303               	bcf	3,6	;RP1=0, select bank0
  3279  050D  00B9               	movwf	___flmul@temp+1
  3280  050E  0870               	movf	?__Umul8_16,w
  3281  050F  00B8               	movwf	___flmul@temp
  3282  0510                     l1785:
  3283  0510  0838               	movf	___flmul@temp,w
  3284  0511  00A8               	movwf	??___flmul
  3285  0512  01A9               	clrf	??___flmul+1
  3286  0513  01AA               	clrf	??___flmul+2
  3287  0514  01AB               	clrf	??___flmul+3
  3288  0515  082B               	movf	??___flmul+3,w
  3289  0516  00B1               	movwf	___flmul@grs+3
  3290  0517  082A               	movf	??___flmul+2,w
  3291  0518  00B0               	movwf	___flmul@grs+2
  3292  0519  0829               	movf	??___flmul+1,w
  3293  051A  00AF               	movwf	___flmul@grs+1
  3294  051B  0828               	movf	??___flmul,w
  3295  051C  00AE               	movwf	___flmul@grs
  3296  051D                     l1787:
  3297  051D  0839               	movf	___flmul@temp+1,w
  3298  051E  00A8               	movwf	??___flmul
  3299  051F  01A9               	clrf	??___flmul+1
  3300  0520  01AA               	clrf	??___flmul+2
  3301  0521  01AB               	clrf	??___flmul+3
  3302  0522  082B               	movf	??___flmul+3,w
  3303  0523  00B7               	movwf	___flmul@prod+3
  3304  0524  082A               	movf	??___flmul+2,w
  3305  0525  00B6               	movwf	___flmul@prod+2
  3306  0526  0829               	movf	??___flmul+1,w
  3307  0527  00B5               	movwf	___flmul@prod+1
  3308  0528  0828               	movf	??___flmul,w
  3309  0529  00B4               	movwf	___flmul@prod
  3310  052A  0821               	movf	___flmul@b+1,w
  3311  052B  00A8               	movwf	??___flmul
  3312  052C  0828               	movf	??___flmul,w
  3313  052D  00F0               	movwf	__Umul8_16@multiplicand
  3314  052E  0825               	movf	___flmul@a+1,w
  3315  052F  120A  158A  261D  120A  118A  	fcall	__Umul8_16
  3316  0534  0871               	movf	?__Umul8_16+1,w
  3317  0535  1283               	bcf	3,5	;RP0=0, select bank0
  3318  0536  1303               	bcf	3,6	;RP1=0, select bank0
  3319  0537  00B9               	movwf	___flmul@temp+1
  3320  0538  0870               	movf	?__Umul8_16,w
  3321  0539  00B8               	movwf	___flmul@temp
  3322  053A                     l1789:
  3323  053A  0838               	movf	___flmul@temp,w
  3324  053B  00A8               	movwf	??___flmul
  3325  053C  01A9               	clrf	??___flmul+1
  3326  053D  01AA               	clrf	??___flmul+2
  3327  053E  01AB               	clrf	??___flmul+3
  3328  053F  0828               	movf	??___flmul,w
  3329  0540  07AE               	addwf	___flmul@grs,f
  3330  0541  0829               	movf	??___flmul+1,w
  3331  0542  1103               	clrz
  3332  0543  1803               	skipnc
  3333  0544  3E01               	addlw	1
  3334  0545  1903               	skipnz
  3335  0546  2D48               	goto	u2391
  3336  0547  07AF               	addwf	___flmul@grs+1,f
  3337  0548                     u2391:
  3338  0548  082A               	movf	??___flmul+2,w
  3339  0549  1103               	clrz
  3340  054A  1803               	skipnc
  3341  054B  3E01               	addlw	1
  3342  054C  1903               	skipnz
  3343  054D  2D4F               	goto	u2392
  3344  054E  07B0               	addwf	___flmul@grs+2,f
  3345  054F                     u2392:
  3346  054F  082B               	movf	??___flmul+3,w
  3347  0550  1103               	clrz
  3348  0551  1803               	skipnc
  3349  0552  3E01               	addlw	1
  3350  0553  1903               	skipnz
  3351  0554  2D56               	goto	u2393
  3352  0555  07B1               	addwf	___flmul@grs+3,f
  3353  0556                     u2393:
  3354  0556                     l1791:
  3355  0556  0839               	movf	___flmul@temp+1,w
  3356  0557  00A8               	movwf	??___flmul
  3357  0558  01A9               	clrf	??___flmul+1
  3358  0559  01AA               	clrf	??___flmul+2
  3359  055A  01AB               	clrf	??___flmul+3
  3360  055B  0828               	movf	??___flmul,w
  3361  055C  07B4               	addwf	___flmul@prod,f
  3362  055D  0829               	movf	??___flmul+1,w
  3363  055E  1103               	clrz
  3364  055F  1803               	skipnc
  3365  0560  3E01               	addlw	1
  3366  0561  1903               	skipnz
  3367  0562  2D64               	goto	u2401
  3368  0563  07B5               	addwf	___flmul@prod+1,f
  3369  0564                     u2401:
  3370  0564  082A               	movf	??___flmul+2,w
  3371  0565  1103               	clrz
  3372  0566  1803               	skipnc
  3373  0567  3E01               	addlw	1
  3374  0568  1903               	skipnz
  3375  0569  2D6B               	goto	u2402
  3376  056A  07B6               	addwf	___flmul@prod+2,f
  3377  056B                     u2402:
  3378  056B  082B               	movf	??___flmul+3,w
  3379  056C  1103               	clrz
  3380  056D  1803               	skipnc
  3381  056E  3E01               	addlw	1
  3382  056F  1903               	skipnz
  3383  0570  2D72               	goto	u2403
  3384  0571  07B7               	addwf	___flmul@prod+3,f
  3385  0572                     u2403:
  3386  0572  0822               	movf	___flmul@b+2,w
  3387  0573  00A8               	movwf	??___flmul
  3388  0574  0828               	movf	??___flmul,w
  3389  0575  00F0               	movwf	__Umul8_16@multiplicand
  3390  0576  0824               	movf	___flmul@a,w
  3391  0577  120A  158A  261D  120A  118A  	fcall	__Umul8_16
  3392  057C  0871               	movf	?__Umul8_16+1,w
  3393  057D  1283               	bcf	3,5	;RP0=0, select bank0
  3394  057E  1303               	bcf	3,6	;RP1=0, select bank0
  3395  057F  00B9               	movwf	___flmul@temp+1
  3396  0580  0870               	movf	?__Umul8_16,w
  3397  0581  00B8               	movwf	___flmul@temp
  3398  0582                     l1793:
  3399  0582  0838               	movf	___flmul@temp,w
  3400  0583  00A8               	movwf	??___flmul
  3401  0584  01A9               	clrf	??___flmul+1
  3402  0585  01AA               	clrf	??___flmul+2
  3403  0586  01AB               	clrf	??___flmul+3
  3404  0587  0828               	movf	??___flmul,w
  3405  0588  07AE               	addwf	___flmul@grs,f
  3406  0589  0829               	movf	??___flmul+1,w
  3407  058A  1103               	clrz
  3408  058B  1803               	skipnc
  3409  058C  3E01               	addlw	1
  3410  058D  1903               	skipnz
  3411  058E  2D90               	goto	u2411
  3412  058F  07AF               	addwf	___flmul@grs+1,f
  3413  0590                     u2411:
  3414  0590  082A               	movf	??___flmul+2,w
  3415  0591  1103               	clrz
  3416  0592  1803               	skipnc
  3417  0593  3E01               	addlw	1
  3418  0594  1903               	skipnz
  3419  0595  2D97               	goto	u2412
  3420  0596  07B0               	addwf	___flmul@grs+2,f
  3421  0597                     u2412:
  3422  0597  082B               	movf	??___flmul+3,w
  3423  0598  1103               	clrz
  3424  0599  1803               	skipnc
  3425  059A  3E01               	addlw	1
  3426  059B  1903               	skipnz
  3427  059C  2D9E               	goto	u2413
  3428  059D  07B1               	addwf	___flmul@grs+3,f
  3429  059E                     u2413:
  3430  059E                     l1795:
  3431  059E  0839               	movf	___flmul@temp+1,w
  3432  059F  00A8               	movwf	??___flmul
  3433  05A0  01A9               	clrf	??___flmul+1
  3434  05A1  01AA               	clrf	??___flmul+2
  3435  05A2  01AB               	clrf	??___flmul+3
  3436  05A3  0828               	movf	??___flmul,w
  3437  05A4  07B4               	addwf	___flmul@prod,f
  3438  05A5  0829               	movf	??___flmul+1,w
  3439  05A6  1103               	clrz
  3440  05A7  1803               	skipnc
  3441  05A8  3E01               	addlw	1
  3442  05A9  1903               	skipnz
  3443  05AA  2DAC               	goto	u2421
  3444  05AB  07B5               	addwf	___flmul@prod+1,f
  3445  05AC                     u2421:
  3446  05AC  082A               	movf	??___flmul+2,w
  3447  05AD  1103               	clrz
  3448  05AE  1803               	skipnc
  3449  05AF  3E01               	addlw	1
  3450  05B0  1903               	skipnz
  3451  05B1  2DB3               	goto	u2422
  3452  05B2  07B6               	addwf	___flmul@prod+2,f
  3453  05B3                     u2422:
  3454  05B3  082B               	movf	??___flmul+3,w
  3455  05B4  1103               	clrz
  3456  05B5  1803               	skipnc
  3457  05B6  3E01               	addlw	1
  3458  05B7  1903               	skipnz
  3459  05B8  2DBA               	goto	u2423
  3460  05B9  07B7               	addwf	___flmul@prod+3,f
  3461  05BA                     u2423:
  3462  05BA                     l1797:
  3463  05BA  3008               	movlw	8
  3464  05BB  00A8               	movwf	??___flmul
  3465  05BC                     u2435:
  3466  05BC  1003               	clrc
  3467  05BD  0DAE               	rlf	___flmul@grs,f
  3468  05BE  0DAF               	rlf	___flmul@grs+1,f
  3469  05BF  0DB0               	rlf	___flmul@grs+2,f
  3470  05C0  0DB1               	rlf	___flmul@grs+3,f
  3471  05C1  0BA8               	decfsz	??___flmul,f
  3472  05C2  2DBC               	goto	u2435
  3473  05C3                     l1799:
  3474  05C3  0821               	movf	___flmul@b+1,w
  3475  05C4  00A8               	movwf	??___flmul
  3476  05C5  0828               	movf	??___flmul,w
  3477  05C6  00F0               	movwf	__Umul8_16@multiplicand
  3478  05C7  0824               	movf	___flmul@a,w
  3479  05C8  120A  158A  261D  120A  118A  	fcall	__Umul8_16
  3480  05CD  0871               	movf	?__Umul8_16+1,w
  3481  05CE  1283               	bcf	3,5	;RP0=0, select bank0
  3482  05CF  1303               	bcf	3,6	;RP1=0, select bank0
  3483  05D0  00B9               	movwf	___flmul@temp+1
  3484  05D1  0870               	movf	?__Umul8_16,w
  3485  05D2  00B8               	movwf	___flmul@temp
  3486  05D3                     l1801:
  3487  05D3  0838               	movf	___flmul@temp,w
  3488  05D4  00A8               	movwf	??___flmul
  3489  05D5  0839               	movf	___flmul@temp+1,w
  3490  05D6  00A9               	movwf	??___flmul+1
  3491  05D7  01AA               	clrf	??___flmul+2
  3492  05D8  01AB               	clrf	??___flmul+3
  3493  05D9  0828               	movf	??___flmul,w
  3494  05DA  07AE               	addwf	___flmul@grs,f
  3495  05DB  0829               	movf	??___flmul+1,w
  3496  05DC  1103               	clrz
  3497  05DD  1803               	skipnc
  3498  05DE  3E01               	addlw	1
  3499  05DF  1903               	skipnz
  3500  05E0  2DE2               	goto	u2441
  3501  05E1  07AF               	addwf	___flmul@grs+1,f
  3502  05E2                     u2441:
  3503  05E2  082A               	movf	??___flmul+2,w
  3504  05E3  1103               	clrz
  3505  05E4  1803               	skipnc
  3506  05E5  3E01               	addlw	1
  3507  05E6  1903               	skipnz
  3508  05E7  2DE9               	goto	u2442
  3509  05E8  07B0               	addwf	___flmul@grs+2,f
  3510  05E9                     u2442:
  3511  05E9  082B               	movf	??___flmul+3,w
  3512  05EA  1103               	clrz
  3513  05EB  1803               	skipnc
  3514  05EC  3E01               	addlw	1
  3515  05ED  1903               	skipnz
  3516  05EE  2DF0               	goto	u2443
  3517  05EF  07B1               	addwf	___flmul@grs+3,f
  3518  05F0                     u2443:
  3519  05F0                     l1803:
  3520  05F0  0820               	movf	___flmul@b,w
  3521  05F1  00A8               	movwf	??___flmul
  3522  05F2  0828               	movf	??___flmul,w
  3523  05F3  00F0               	movwf	__Umul8_16@multiplicand
  3524  05F4  0825               	movf	___flmul@a+1,w
  3525  05F5  120A  158A  261D  120A  118A  	fcall	__Umul8_16
  3526  05FA  0871               	movf	?__Umul8_16+1,w
  3527  05FB  1283               	bcf	3,5	;RP0=0, select bank0
  3528  05FC  1303               	bcf	3,6	;RP1=0, select bank0
  3529  05FD  00B9               	movwf	___flmul@temp+1
  3530  05FE  0870               	movf	?__Umul8_16,w
  3531  05FF  00B8               	movwf	___flmul@temp
  3532  0600                     l1805:
  3533  0600  0838               	movf	___flmul@temp,w
  3534  0601  00A8               	movwf	??___flmul
  3535  0602  0839               	movf	___flmul@temp+1,w
  3536  0603  00A9               	movwf	??___flmul+1
  3537  0604  01AA               	clrf	??___flmul+2
  3538  0605  01AB               	clrf	??___flmul+3
  3539  0606  0828               	movf	??___flmul,w
  3540  0607  07AE               	addwf	___flmul@grs,f
  3541  0608  0829               	movf	??___flmul+1,w
  3542  0609  1103               	clrz
  3543  060A  1803               	skipnc
  3544  060B  3E01               	addlw	1
  3545  060C  1903               	skipnz
  3546  060D  2E0F               	goto	u2451
  3547  060E  07AF               	addwf	___flmul@grs+1,f
  3548  060F                     u2451:
  3549  060F  082A               	movf	??___flmul+2,w
  3550  0610  1103               	clrz
  3551  0611  1803               	skipnc
  3552  0612  3E01               	addlw	1
  3553  0613  1903               	skipnz
  3554  0614  2E16               	goto	u2452
  3555  0615  07B0               	addwf	___flmul@grs+2,f
  3556  0616                     u2452:
  3557  0616  082B               	movf	??___flmul+3,w
  3558  0617  1103               	clrz
  3559  0618  1803               	skipnc
  3560  0619  3E01               	addlw	1
  3561  061A  1903               	skipnz
  3562  061B  2E1D               	goto	u2453
  3563  061C  07B1               	addwf	___flmul@grs+3,f
  3564  061D                     u2453:
  3565  061D                     l1807:
  3566  061D  3008               	movlw	8
  3567  061E  00A8               	movwf	??___flmul
  3568  061F                     u2465:
  3569  061F  1003               	clrc
  3570  0620  0DAE               	rlf	___flmul@grs,f
  3571  0621  0DAF               	rlf	___flmul@grs+1,f
  3572  0622  0DB0               	rlf	___flmul@grs+2,f
  3573  0623  0DB1               	rlf	___flmul@grs+3,f
  3574  0624  0BA8               	decfsz	??___flmul,f
  3575  0625  2E1F               	goto	u2465
  3576  0626  0820               	movf	___flmul@b,w
  3577  0627  00A8               	movwf	??___flmul
  3578  0628  0828               	movf	??___flmul,w
  3579  0629  00F0               	movwf	__Umul8_16@multiplicand
  3580  062A  0824               	movf	___flmul@a,w
  3581  062B  120A  158A  261D  120A  118A  	fcall	__Umul8_16
  3582  0630  0871               	movf	?__Umul8_16+1,w
  3583  0631  1283               	bcf	3,5	;RP0=0, select bank0
  3584  0632  1303               	bcf	3,6	;RP1=0, select bank0
  3585  0633  00B9               	movwf	___flmul@temp+1
  3586  0634  0870               	movf	?__Umul8_16,w
  3587  0635  00B8               	movwf	___flmul@temp
  3588  0636                     l1809:
  3589  0636  0838               	movf	___flmul@temp,w
  3590  0637  00A8               	movwf	??___flmul
  3591  0638  0839               	movf	___flmul@temp+1,w
  3592  0639  00A9               	movwf	??___flmul+1
  3593  063A  01AA               	clrf	??___flmul+2
  3594  063B  01AB               	clrf	??___flmul+3
  3595  063C  0828               	movf	??___flmul,w
  3596  063D  07AE               	addwf	___flmul@grs,f
  3597  063E  0829               	movf	??___flmul+1,w
  3598  063F  1103               	clrz
  3599  0640  1803               	skipnc
  3600  0641  3E01               	addlw	1
  3601  0642  1903               	skipnz
  3602  0643  2E45               	goto	u2471
  3603  0644  07AF               	addwf	___flmul@grs+1,f
  3604  0645                     u2471:
  3605  0645  082A               	movf	??___flmul+2,w
  3606  0646  1103               	clrz
  3607  0647  1803               	skipnc
  3608  0648  3E01               	addlw	1
  3609  0649  1903               	skipnz
  3610  064A  2E4C               	goto	u2472
  3611  064B  07B0               	addwf	___flmul@grs+2,f
  3612  064C                     u2472:
  3613  064C  082B               	movf	??___flmul+3,w
  3614  064D  1103               	clrz
  3615  064E  1803               	skipnc
  3616  064F  3E01               	addlw	1
  3617  0650  1903               	skipnz
  3618  0651  2E53               	goto	u2473
  3619  0652  07B1               	addwf	___flmul@grs+3,f
  3620  0653                     u2473:
  3621  0653                     l1811:
  3622  0653  0821               	movf	___flmul@b+1,w
  3623  0654  00A8               	movwf	??___flmul
  3624  0655  0828               	movf	??___flmul,w
  3625  0656  00F0               	movwf	__Umul8_16@multiplicand
  3626  0657  0826               	movf	___flmul@a+2,w
  3627  0658  120A  158A  261D  120A  118A  	fcall	__Umul8_16
  3628  065D  0871               	movf	?__Umul8_16+1,w
  3629  065E  1283               	bcf	3,5	;RP0=0, select bank0
  3630  065F  1303               	bcf	3,6	;RP1=0, select bank0
  3631  0660  00B9               	movwf	___flmul@temp+1
  3632  0661  0870               	movf	?__Umul8_16,w
  3633  0662  00B8               	movwf	___flmul@temp
  3634  0663  0838               	movf	___flmul@temp,w
  3635  0664  00A8               	movwf	??___flmul
  3636  0665  0839               	movf	___flmul@temp+1,w
  3637  0666  00A9               	movwf	??___flmul+1
  3638  0667  01AA               	clrf	??___flmul+2
  3639  0668  01AB               	clrf	??___flmul+3
  3640  0669  0828               	movf	??___flmul,w
  3641  066A  07B4               	addwf	___flmul@prod,f
  3642  066B  0829               	movf	??___flmul+1,w
  3643  066C  1103               	clrz
  3644  066D  1803               	skipnc
  3645  066E  3E01               	addlw	1
  3646  066F  1903               	skipnz
  3647  0670  2E72               	goto	u2481
  3648  0671  07B5               	addwf	___flmul@prod+1,f
  3649  0672                     u2481:
  3650  0672  082A               	movf	??___flmul+2,w
  3651  0673  1103               	clrz
  3652  0674  1803               	skipnc
  3653  0675  3E01               	addlw	1
  3654  0676  1903               	skipnz
  3655  0677  2E79               	goto	u2482
  3656  0678  07B6               	addwf	___flmul@prod+2,f
  3657  0679                     u2482:
  3658  0679  082B               	movf	??___flmul+3,w
  3659  067A  1103               	clrz
  3660  067B  1803               	skipnc
  3661  067C  3E01               	addlw	1
  3662  067D  1903               	skipnz
  3663  067E  2E80               	goto	u2483
  3664  067F  07B7               	addwf	___flmul@prod+3,f
  3665  0680                     u2483:
  3666  0680                     l1813:
  3667  0680  0822               	movf	___flmul@b+2,w
  3668  0681  00A8               	movwf	??___flmul
  3669  0682  0828               	movf	??___flmul,w
  3670  0683  00F0               	movwf	__Umul8_16@multiplicand
  3671  0684  0825               	movf	___flmul@a+1,w
  3672  0685  120A  158A  261D  120A  118A  	fcall	__Umul8_16
  3673  068A  0871               	movf	?__Umul8_16+1,w
  3674  068B  1283               	bcf	3,5	;RP0=0, select bank0
  3675  068C  1303               	bcf	3,6	;RP1=0, select bank0
  3676  068D  00B9               	movwf	___flmul@temp+1
  3677  068E  0870               	movf	?__Umul8_16,w
  3678  068F  00B8               	movwf	___flmul@temp
  3679  0690                     l1815:
  3680  0690  0838               	movf	___flmul@temp,w
  3681  0691  00A8               	movwf	??___flmul
  3682  0692  0839               	movf	___flmul@temp+1,w
  3683  0693  00A9               	movwf	??___flmul+1
  3684  0694  01AA               	clrf	??___flmul+2
  3685  0695  01AB               	clrf	??___flmul+3
  3686  0696  0828               	movf	??___flmul,w
  3687  0697  07B4               	addwf	___flmul@prod,f
  3688  0698  0829               	movf	??___flmul+1,w
  3689  0699  1103               	clrz
  3690  069A  1803               	skipnc
  3691  069B  3E01               	addlw	1
  3692  069C  1903               	skipnz
  3693  069D  2E9F               	goto	u2491
  3694  069E  07B5               	addwf	___flmul@prod+1,f
  3695  069F                     u2491:
  3696  069F  082A               	movf	??___flmul+2,w
  3697  06A0  1103               	clrz
  3698  06A1  1803               	skipnc
  3699  06A2  3E01               	addlw	1
  3700  06A3  1903               	skipnz
  3701  06A4  2EA6               	goto	u2492
  3702  06A5  07B6               	addwf	___flmul@prod+2,f
  3703  06A6                     u2492:
  3704  06A6  082B               	movf	??___flmul+3,w
  3705  06A7  1103               	clrz
  3706  06A8  1803               	skipnc
  3707  06A9  3E01               	addlw	1
  3708  06AA  1903               	skipnz
  3709  06AB  2EAD               	goto	u2493
  3710  06AC  07B7               	addwf	___flmul@prod+3,f
  3711  06AD                     u2493:
  3712  06AD  0822               	movf	___flmul@b+2,w
  3713  06AE  00A8               	movwf	??___flmul
  3714  06AF  0828               	movf	??___flmul,w
  3715  06B0  00F0               	movwf	__Umul8_16@multiplicand
  3716  06B1  0826               	movf	___flmul@a+2,w
  3717  06B2  120A  158A  261D  120A  118A  	fcall	__Umul8_16
  3718  06B7  0871               	movf	?__Umul8_16+1,w
  3719  06B8  1283               	bcf	3,5	;RP0=0, select bank0
  3720  06B9  1303               	bcf	3,6	;RP1=0, select bank0
  3721  06BA  00B9               	movwf	___flmul@temp+1
  3722  06BB  0870               	movf	?__Umul8_16,w
  3723  06BC  00B8               	movwf	___flmul@temp
  3724  06BD                     l1817:
  3725  06BD  0838               	movf	___flmul@temp,w
  3726  06BE  00A8               	movwf	??___flmul
  3727  06BF  0839               	movf	___flmul@temp+1,w
  3728  06C0  00A9               	movwf	??___flmul+1
  3729  06C1  01AA               	clrf	??___flmul+2
  3730  06C2  01AB               	clrf	??___flmul+3
  3731  06C3  3008               	movlw	8
  3732  06C4                     u2505:
  3733  06C4  1003               	clrc
  3734  06C5  0DA8               	rlf	??___flmul,f
  3735  06C6  0DA9               	rlf	??___flmul+1,f
  3736  06C7  0DAA               	rlf	??___flmul+2,f
  3737  06C8  0DAB               	rlf	??___flmul+3,f
  3738  06C9                     u2500:
  3739  06C9  3EFF               	addlw	-1
  3740  06CA  1D03               	skipz
  3741  06CB  2EC4               	goto	u2505
  3742  06CC  0828               	movf	??___flmul,w
  3743  06CD  07B4               	addwf	___flmul@prod,f
  3744  06CE  0829               	movf	??___flmul+1,w
  3745  06CF  1103               	clrz
  3746  06D0  1803               	skipnc
  3747  06D1  3E01               	addlw	1
  3748  06D2  1903               	skipnz
  3749  06D3  2ED5               	goto	u2511
  3750  06D4  07B5               	addwf	___flmul@prod+1,f
  3751  06D5                     u2511:
  3752  06D5  082A               	movf	??___flmul+2,w
  3753  06D6  1103               	clrz
  3754  06D7  1803               	skipnc
  3755  06D8  3E01               	addlw	1
  3756  06D9  1903               	skipnz
  3757  06DA  2EDC               	goto	u2512
  3758  06DB  07B6               	addwf	___flmul@prod+2,f
  3759  06DC                     u2512:
  3760  06DC  082B               	movf	??___flmul+3,w
  3761  06DD  1103               	clrz
  3762  06DE  1803               	skipnc
  3763  06DF  3E01               	addlw	1
  3764  06E0  1903               	skipnz
  3765  06E1  2EE3               	goto	u2513
  3766  06E2  07B7               	addwf	___flmul@prod+3,f
  3767  06E3                     u2513:
  3768  06E3                     l1819:
  3769  06E3  082E               	movf	___flmul@grs,w
  3770  06E4  00A8               	movwf	??___flmul
  3771  06E5  082F               	movf	___flmul@grs+1,w
  3772  06E6  00A9               	movwf	??___flmul+1
  3773  06E7  0830               	movf	___flmul@grs+2,w
  3774  06E8  00AA               	movwf	??___flmul+2
  3775  06E9  0831               	movf	___flmul@grs+3,w
  3776  06EA  00AB               	movwf	??___flmul+3
  3777  06EB  3018               	movlw	24
  3778  06EC                     u2525:
  3779  06EC  1003               	clrc
  3780  06ED  0CAB               	rrf	??___flmul+3,f
  3781  06EE  0CAA               	rrf	??___flmul+2,f
  3782  06EF  0CA9               	rrf	??___flmul+1,f
  3783  06F0  0CA8               	rrf	??___flmul,f
  3784  06F1                     u2520:
  3785  06F1  3EFF               	addlw	-1
  3786  06F2  1D03               	skipz
  3787  06F3  2EEC               	goto	u2525
  3788  06F4  0828               	movf	??___flmul,w
  3789  06F5  07B4               	addwf	___flmul@prod,f
  3790  06F6  0829               	movf	??___flmul+1,w
  3791  06F7  1103               	clrz
  3792  06F8  1803               	skipnc
  3793  06F9  3E01               	addlw	1
  3794  06FA  1903               	skipnz
  3795  06FB  2EFD               	goto	u2531
  3796  06FC  07B5               	addwf	___flmul@prod+1,f
  3797  06FD                     u2531:
  3798  06FD  082A               	movf	??___flmul+2,w
  3799  06FE  1103               	clrz
  3800  06FF  1803               	skipnc
  3801  0700  3E01               	addlw	1
  3802  0701  1903               	skipnz
  3803  0702  2F04               	goto	u2532
  3804  0703  07B6               	addwf	___flmul@prod+2,f
  3805  0704                     u2532:
  3806  0704  082B               	movf	??___flmul+3,w
  3807  0705  1103               	clrz
  3808  0706  1803               	skipnc
  3809  0707  3E01               	addlw	1
  3810  0708  1903               	skipnz
  3811  0709  2F0B               	goto	u2533
  3812  070A  07B7               	addwf	___flmul@prod+3,f
  3813  070B                     u2533:
  3814  070B                     l1821:
  3815  070B  3008               	movlw	8
  3816  070C  00A8               	movwf	??___flmul
  3817  070D                     u2545:
  3818  070D  1003               	clrc
  3819  070E  0DAE               	rlf	___flmul@grs,f
  3820  070F  0DAF               	rlf	___flmul@grs+1,f
  3821  0710  0DB0               	rlf	___flmul@grs+2,f
  3822  0711  0DB1               	rlf	___flmul@grs+3,f
  3823  0712  0BA8               	decfsz	??___flmul,f
  3824  0713  2F0D               	goto	u2545
  3825  0714                     l1823:
  3826  0714  0833               	movf	___flmul@bexp,w
  3827  0715  0732               	addwf	___flmul@aexp,w
  3828  0716  00A8               	movwf	??___flmul
  3829  0717  01A9               	clrf	??___flmul+1
  3830  0718  0DA9               	rlf	??___flmul+1,f
  3831  0719  0828               	movf	??___flmul,w
  3832  071A  3E82               	addlw	130
  3833  071B  00B8               	movwf	___flmul@temp
  3834  071C  0829               	movf	??___flmul+1,w
  3835  071D  1803               	skipnc
  3836  071E  3E01               	addlw	1
  3837  071F  3EFF               	addlw	255
  3838  0720  00B9               	movwf	___flmul@temp+1
  3839  0721  2F3F               	goto	l1835
  3840  0722                     l1825:
  3841  0722  3001               	movlw	1
  3842  0723  00A8               	movwf	??___flmul
  3843  0724                     u2555:
  3844  0724  1003               	clrc
  3845  0725  0DB4               	rlf	___flmul@prod,f
  3846  0726  0DB5               	rlf	___flmul@prod+1,f
  3847  0727  0DB6               	rlf	___flmul@prod+2,f
  3848  0728  0DB7               	rlf	___flmul@prod+3,f
  3849  0729  0BA8               	decfsz	??___flmul,f
  3850  072A  2F24               	goto	u2555
  3851  072B                     l1827:
  3852  072B  1FB1               	btfss	___flmul@grs+3,7
  3853  072C  2F2E               	goto	u2561
  3854  072D  2F2F               	goto	u2560
  3855  072E                     u2561:
  3856  072E  2F30               	goto	l1831
  3857  072F                     u2560:
  3858  072F                     l1829:
  3859  072F  1434               	bsf	___flmul@prod,0
  3860  0730                     l1831:
  3861  0730  3001               	movlw	1
  3862  0731  00A8               	movwf	??___flmul
  3863  0732                     u2575:
  3864  0732  1003               	clrc
  3865  0733  0DAE               	rlf	___flmul@grs,f
  3866  0734  0DAF               	rlf	___flmul@grs+1,f
  3867  0735  0DB0               	rlf	___flmul@grs+2,f
  3868  0736  0DB1               	rlf	___flmul@grs+3,f
  3869  0737  0BA8               	decfsz	??___flmul,f
  3870  0738  2F32               	goto	u2575
  3871  0739                     l1833:
  3872  0739  30FF               	movlw	255
  3873  073A  07B8               	addwf	___flmul@temp,f
  3874  073B  1803               	skipnc
  3875  073C  0AB9               	incf	___flmul@temp+1,f
  3876  073D  30FF               	movlw	255
  3877  073E  07B9               	addwf	___flmul@temp+1,f
  3878  073F                     l1835:
  3879  073F  1FB6               	btfss	___flmul@prod+2,7
  3880  0740  2F42               	goto	u2581
  3881  0741  2F43               	goto	u2580
  3882  0742                     u2581:
  3883  0742  2F22               	goto	l1825
  3884  0743                     u2580:
  3885  0743                     l1837:
  3886  0743  01B2               	clrf	___flmul@aexp
  3887  0744                     l1839:
  3888  0744  1FB1               	btfss	___flmul@grs+3,7
  3889  0745  2F47               	goto	u2591
  3890  0746  2F48               	goto	u2590
  3891  0747                     u2591:
  3892  0747  2F64               	goto	l1847
  3893  0748                     u2590:
  3894  0748                     l1841:
  3895  0748  30FF               	movlw	255
  3896  0749  052E               	andwf	___flmul@grs,w
  3897  074A  00A8               	movwf	??___flmul
  3898  074B  30FF               	movlw	255
  3899  074C  052F               	andwf	___flmul@grs+1,w
  3900  074D  00A9               	movwf	??___flmul+1
  3901  074E  30FF               	movlw	255
  3902  074F  0530               	andwf	___flmul@grs+2,w
  3903  0750  00AA               	movwf	??___flmul+2
  3904  0751  307F               	movlw	127
  3905  0752  0531               	andwf	___flmul@grs+3,w
  3906  0753  00AB               	movwf	??___flmul+3
  3907  0754  082B               	movf	??___flmul+3,w
  3908  0755  042A               	iorwf	??___flmul+2,w
  3909  0756  0429               	iorwf	??___flmul+1,w
  3910  0757  0428               	iorwf	??___flmul,w
  3911  0758  1903               	skipnz
  3912  0759  2F5B               	goto	u2601
  3913  075A  2F5C               	goto	u2600
  3914  075B                     u2601:
  3915  075B  2F5F               	goto	l680
  3916  075C                     u2600:
  3917  075C                     l1843:
  3918  075C  01B2               	clrf	___flmul@aexp
  3919  075D  0AB2               	incf	___flmul@aexp,f
  3920  075E  2F64               	goto	l1847
  3921  075F                     l680:
  3922  075F  1C34               	btfss	___flmul@prod,0
  3923  0760  2F62               	goto	u2611
  3924  0761  2F63               	goto	u2610
  3925  0762                     u2611:
  3926  0762  2F64               	goto	l1847
  3927  0763                     u2610:
  3928  0763  2F5C               	goto	l1843
  3929  0764                     l1847:
  3930  0764  0832               	movf	___flmul@aexp,w
  3931  0765  1903               	btfsc	3,2
  3932  0766  2F68               	goto	u2621
  3933  0767  2F69               	goto	u2620
  3934  0768                     u2621:
  3935  0768  2F9A               	goto	l1857
  3936  0769                     u2620:
  3937  0769                     l1849:
  3938  0769  3001               	movlw	1
  3939  076A  07B4               	addwf	___flmul@prod,f
  3940  076B  3000               	movlw	0
  3941  076C  1803               	skipnc
  3942  076D  3001               	movlw	1
  3943  076E  07B5               	addwf	___flmul@prod+1,f
  3944  076F  3000               	movlw	0
  3945  0770  1803               	skipnc
  3946  0771  3001               	movlw	1
  3947  0772  07B6               	addwf	___flmul@prod+2,f
  3948  0773  3000               	movlw	0
  3949  0774  1803               	skipnc
  3950  0775  3001               	movlw	1
  3951  0776  07B7               	addwf	___flmul@prod+3,f
  3952  0777                     l1851:
  3953  0777  1C37               	btfss	___flmul@prod+3,0
  3954  0778  2F7A               	goto	u2631
  3955  0779  2F7B               	goto	u2630
  3956  077A                     u2631:
  3957  077A  2F9A               	goto	l1857
  3958  077B                     u2630:
  3959  077B                     l1853:
  3960  077B  0834               	movf	___flmul@prod,w
  3961  077C  00A8               	movwf	??___flmul
  3962  077D  0835               	movf	___flmul@prod+1,w
  3963  077E  00A9               	movwf	??___flmul+1
  3964  077F  0836               	movf	___flmul@prod+2,w
  3965  0780  00AA               	movwf	??___flmul+2
  3966  0781  0837               	movf	___flmul@prod+3,w
  3967  0782  00AB               	movwf	??___flmul+3
  3968  0783  3001               	movlw	1
  3969  0784  00AC               	movwf	??___flmul+4
  3970  0785                     u2645:
  3971  0785  0D2B               	rlf	??___flmul+3,w
  3972  0786  0CAB               	rrf	??___flmul+3,f
  3973  0787  0CAA               	rrf	??___flmul+2,f
  3974  0788  0CA9               	rrf	??___flmul+1,f
  3975  0789  0CA8               	rrf	??___flmul,f
  3976  078A                     u2640:
  3977  078A  0BAC               	decfsz	??___flmul+4,f
  3978  078B  2F85               	goto	u2645
  3979  078C  082B               	movf	??___flmul+3,w
  3980  078D  00B7               	movwf	___flmul@prod+3
  3981  078E  082A               	movf	??___flmul+2,w
  3982  078F  00B6               	movwf	___flmul@prod+2
  3983  0790  0829               	movf	??___flmul+1,w
  3984  0791  00B5               	movwf	___flmul@prod+1
  3985  0792  0828               	movf	??___flmul,w
  3986  0793  00B4               	movwf	___flmul@prod
  3987  0794                     l1855:
  3988  0794  3001               	movlw	1
  3989  0795  07B8               	addwf	___flmul@temp,f
  3990  0796  1803               	skipnc
  3991  0797  0AB9               	incf	___flmul@temp+1,f
  3992  0798  3000               	movlw	0
  3993  0799  07B9               	addwf	___flmul@temp+1,f
  3994  079A                     l1857:
  3995  079A  0839               	movf	___flmul@temp+1,w
  3996  079B  3A80               	xorlw	128
  3997  079C  00FF               	movwf	btemp+1
  3998  079D  3080               	movlw	128
  3999  079E  027F               	subwf	btemp+1,w
  4000  079F  1D03               	skipz
  4001  07A0  2FA3               	goto	u2655
  4002  07A1  30FF               	movlw	255
  4003  07A2  0238               	subwf	___flmul@temp,w
  4004  07A3                     u2655:
  4005  07A3  1C03               	skipc
  4006  07A4  2FA6               	goto	u2651
  4007  07A5  2FA7               	goto	u2650
  4008  07A6                     u2651:
  4009  07A6  2FB2               	goto	l1861
  4010  07A7                     u2650:
  4011  07A7                     l1859:
  4012  07A7  307F               	movlw	127
  4013  07A8  1283               	bcf	3,5	;RP0=0, select bank0
  4014  07A9  1303               	bcf	3,6	;RP1=0, select bank0
  4015  07AA  00B7               	movwf	___flmul@prod+3
  4016  07AB  3080               	movlw	128
  4017  07AC  00B6               	movwf	___flmul@prod+2
  4018  07AD  3000               	movlw	0
  4019  07AE  00B5               	movwf	___flmul@prod+1
  4020  07AF  3000               	movlw	0
  4021  07B0  00B4               	movwf	___flmul@prod
  4022  07B1  2FE7               	goto	l686
  4023  07B2                     l1861:
  4024  07B2  1283               	bcf	3,5	;RP0=0, select bank0
  4025  07B3  1303               	bcf	3,6	;RP1=0, select bank0
  4026  07B4  0839               	movf	___flmul@temp+1,w
  4027  07B5  3A80               	xorlw	128
  4028  07B6  00FF               	movwf	btemp+1
  4029  07B7  3080               	movlw	128
  4030  07B8  027F               	subwf	btemp+1,w
  4031  07B9  1D03               	skipz
  4032  07BA  2FBD               	goto	u2665
  4033  07BB  3001               	movlw	1
  4034  07BC  0238               	subwf	___flmul@temp,w
  4035  07BD                     u2665:
  4036  07BD  1803               	skipnc
  4037  07BE  2FC0               	goto	u2661
  4038  07BF  2FC1               	goto	u2660
  4039  07C0                     u2661:
  4040  07C0  2FCD               	goto	l1867
  4041  07C1                     u2660:
  4042  07C1                     l1863:
  4043  07C1  3000               	movlw	0
  4044  07C2  1283               	bcf	3,5	;RP0=0, select bank0
  4045  07C3  1303               	bcf	3,6	;RP1=0, select bank0
  4046  07C4  00B7               	movwf	___flmul@prod+3
  4047  07C5  3000               	movlw	0
  4048  07C6  00B6               	movwf	___flmul@prod+2
  4049  07C7  3000               	movlw	0
  4050  07C8  00B5               	movwf	___flmul@prod+1
  4051  07C9  3000               	movlw	0
  4052  07CA  00B4               	movwf	___flmul@prod
  4053  07CB                     l1865:
  4054  07CB  01AD               	clrf	___flmul@sign
  4055  07CC  2FE7               	goto	l686
  4056  07CD                     l1867:
  4057  07CD  1283               	bcf	3,5	;RP0=0, select bank0
  4058  07CE  1303               	bcf	3,6	;RP1=0, select bank0
  4059  07CF  0838               	movf	___flmul@temp,w
  4060  07D0  00A8               	movwf	??___flmul
  4061  07D1  0828               	movf	??___flmul,w
  4062  07D2  00B3               	movwf	___flmul@bexp
  4063  07D3  30FF               	movlw	255
  4064  07D4  05B4               	andwf	___flmul@prod,f
  4065  07D5  30FF               	movlw	255
  4066  07D6  05B5               	andwf	___flmul@prod+1,f
  4067  07D7  307F               	movlw	127
  4068  07D8  05B6               	andwf	___flmul@prod+2,f
  4069  07D9  3000               	movlw	0
  4070  07DA  05B7               	andwf	___flmul@prod+3,f
  4071  07DB                     l1869:
  4072  07DB  1C33               	btfss	___flmul@bexp,0
  4073  07DC  2FDE               	goto	u2671
  4074  07DD  2FDF               	goto	u2670
  4075  07DE                     u2671:
  4076  07DE  2FE0               	goto	l1873
  4077  07DF                     u2670:
  4078  07DF                     l1871:
  4079  07DF  17B6               	bsf	___flmul@prod+2,7
  4080  07E0                     l1873:
  4081  07E0  0833               	movf	___flmul@bexp,w
  4082  07E1  00A8               	movwf	??___flmul
  4083  07E2  1003               	clrc
  4084  07E3  0C28               	rrf	??___flmul,w
  4085  07E4  00A9               	movwf	??___flmul+1
  4086  07E5  0829               	movf	??___flmul+1,w
  4087  07E6  00B7               	movwf	___flmul@prod+3
  4088  07E7                     l686:
  4089  07E7  082D               	movf	___flmul@sign,w
  4090  07E8  00A8               	movwf	??___flmul
  4091  07E9  0828               	movf	??___flmul,w
  4092  07EA  04B7               	iorwf	___flmul@prod+3,f
  4093  07EB                     l1875:
  4094  07EB  0837               	movf	___flmul@prod+3,w
  4095  07EC  00A3               	movwf	?___flmul+3
  4096  07ED  0836               	movf	___flmul@prod+2,w
  4097  07EE  00A2               	movwf	?___flmul+2
  4098  07EF  0835               	movf	___flmul@prod+1,w
  4099  07F0  00A1               	movwf	?___flmul+1
  4100  07F1  0834               	movf	___flmul@prod,w
  4101  07F2  00A0               	movwf	?___flmul
  4102  07F3                     l674:
  4103  07F3  0008               	return
  4104  07F4                     __end_of___flmul:
  4105                           
  4106                           	psect	text16
  4107  0E1D                     __ptext16:	
  4108 ;; *************** function __Umul8_16 *****************
  4109 ;; Defined at:
  4110 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul8_16.c"
  4111 ;; Parameters:    Size  Location     Type
  4112 ;;  multiplier      1    wreg     unsigned char 
  4113 ;;  multiplicand    1    0[COMMON] unsigned char 
  4114 ;; Auto vars:     Size  Location     Type
  4115 ;;  multiplier      1    8[COMMON] unsigned char 
  4116 ;;  word_mpld       2    6[COMMON] unsigned int 
  4117 ;;  product         2    4[COMMON] unsigned int 
  4118 ;; Return value:  Size  Location     Type
  4119 ;;                  2    0[COMMON] unsigned int 
  4120 ;; Registers used:
  4121 ;;		wreg, status,2, status,0
  4122 ;; Tracked objects:
  4123 ;;		On entry : 0/0
  4124 ;;		On exit  : 0/0
  4125 ;;		Unchanged: 0/0
  4126 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4127 ;;      Params:         2       0       0       0       0
  4128 ;;      Locals:         5       0       0       0       0
  4129 ;;      Temps:          2       0       0       0       0
  4130 ;;      Totals:         9       0       0       0       0
  4131 ;;Total ram usage:        9 bytes
  4132 ;; Hardware stack levels used:    1
  4133 ;; This function calls:
  4134 ;;		Nothing
  4135 ;; This function is called by:
  4136 ;;		___flmul
  4137 ;; This function uses a non-reentrant model
  4138 ;;
  4139                           
  4140                           
  4141                           ;psect for function __Umul8_16
  4142  0E1D                     __Umul8_16:
  4143                           
  4144                           ;incstack = 0
  4145                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  4146                           ;__Umul8_16@multiplier stored from wreg
  4147  0E1D  00F8               	movwf	__Umul8_16@multiplier
  4148  0E1E                     l1485:
  4149  0E1E  01F4               	clrf	__Umul8_16@product
  4150  0E1F  01F5               	clrf	__Umul8_16@product+1
  4151  0E20                     l1487:
  4152  0E20  0870               	movf	__Umul8_16@multiplicand,w
  4153  0E21  00F2               	movwf	??__Umul8_16
  4154  0E22  01F3               	clrf	??__Umul8_16+1
  4155  0E23  0872               	movf	??__Umul8_16,w
  4156  0E24  00F6               	movwf	__Umul8_16@word_mpld
  4157  0E25  0873               	movf	??__Umul8_16+1,w
  4158  0E26  00F7               	movwf	__Umul8_16@word_mpld+1
  4159  0E27                     l1489:
  4160  0E27  1C78               	btfss	__Umul8_16@multiplier,0
  4161  0E28  2E2A               	goto	u1721
  4162  0E29  2E2B               	goto	u1720
  4163  0E2A                     u1721:
  4164  0E2A  2E31               	goto	l693
  4165  0E2B                     u1720:
  4166  0E2B                     l1491:
  4167  0E2B  0876               	movf	__Umul8_16@word_mpld,w
  4168  0E2C  07F4               	addwf	__Umul8_16@product,f
  4169  0E2D  1803               	skipnc
  4170  0E2E  0AF5               	incf	__Umul8_16@product+1,f
  4171  0E2F  0877               	movf	__Umul8_16@word_mpld+1,w
  4172  0E30  07F5               	addwf	__Umul8_16@product+1,f
  4173  0E31                     l693:
  4174  0E31  3001               	movlw	1
  4175  0E32                     u1735:
  4176  0E32  1003               	clrc
  4177  0E33  0DF6               	rlf	__Umul8_16@word_mpld,f
  4178  0E34  0DF7               	rlf	__Umul8_16@word_mpld+1,f
  4179  0E35  3EFF               	addlw	-1
  4180  0E36  1D03               	skipz
  4181  0E37  2E32               	goto	u1735
  4182  0E38  1003               	clrc
  4183  0E39  0CF8               	rrf	__Umul8_16@multiplier,f
  4184  0E3A                     l1493:
  4185  0E3A  0878               	movf	__Umul8_16@multiplier,w
  4186  0E3B  1D03               	btfss	3,2
  4187  0E3C  2E3E               	goto	u1741
  4188  0E3D  2E3F               	goto	u1740
  4189  0E3E                     u1741:
  4190  0E3E  2E27               	goto	l1489
  4191  0E3F                     u1740:
  4192  0E3F                     l1495:
  4193  0E3F  0875               	movf	__Umul8_16@product+1,w
  4194  0E40  00F1               	movwf	?__Umul8_16+1
  4195  0E41  0874               	movf	__Umul8_16@product,w
  4196  0E42  00F0               	movwf	?__Umul8_16
  4197  0E43                     l695:
  4198  0E43  0008               	return
  4199  0E44                     __end_of__Umul8_16:
  4200                           
  4201                           	psect	text17
  4202  00E7                     __ptext17:	
  4203 ;; *************** function _UARTInit *****************
  4204 ;; Defined at:
  4205 ;;		line 8 in file "UART.c"
  4206 ;; Parameters:    Size  Location     Type
  4207 ;;  baud_rate       4    0[BANK0 ] const unsigned long 
  4208 ;;  BRGH            1    4[BANK0 ] const unsigned char 
  4209 ;; Auto vars:     Size  Location     Type
  4210 ;;		None
  4211 ;; Return value:  Size  Location     Type
  4212 ;;                  1    wreg      void 
  4213 ;; Registers used:
  4214 ;;		wreg, status,2, status,0, pclath, cstack
  4215 ;; Tracked objects:
  4216 ;;		On entry : 0/0
  4217 ;;		On exit  : 0/0
  4218 ;;		Unchanged: 0/0
  4219 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4220 ;;      Params:         0       5       0       0       0
  4221 ;;      Locals:         0       0       0       0       0
  4222 ;;      Temps:          0       4       0       0       0
  4223 ;;      Totals:         0       9       0       0       0
  4224 ;;Total ram usage:        9 bytes
  4225 ;; Hardware stack levels used:    1
  4226 ;; Hardware stack levels required when called:    1
  4227 ;; This function calls:
  4228 ;;		___lldiv
  4229 ;; This function is called by:
  4230 ;;		_main
  4231 ;; This function uses a non-reentrant model
  4232 ;;
  4233                           
  4234                           
  4235                           ;psect for function _UARTInit
  4236  00E7                     _UARTInit:
  4237  00E7                     l1943:	
  4238                           ;incstack = 0
  4239                           ; Regs used in _UARTInit: [wreg+status,2+status,0+pclath+cstack]
  4240                           
  4241                           
  4242                           ;UART.c: 10:     if (BRGH == 0) {
  4243  00E7  1283               	bcf	3,5	;RP0=0, select bank0
  4244  00E8  1303               	bcf	3,6	;RP1=0, select bank0
  4245  00E9  0824               	movf	UARTInit@BRGH,w
  4246  00EA  1D03               	btfss	3,2
  4247  00EB  28ED               	goto	u2831
  4248  00EC  28EE               	goto	u2830
  4249  00ED                     u2831:
  4250  00ED  291B               	goto	l1949
  4251  00EE                     u2830:
  4252  00EE                     l1945:
  4253                           
  4254                           ;UART.c: 11:         SPBRG = 4000000/(64*baud_rate) - 1;
  4255  00EE  0820               	movf	UARTInit@baud_rate,w
  4256  00EF  00A5               	movwf	??_UARTInit
  4257  00F0  0821               	movf	UARTInit@baud_rate+1,w
  4258  00F1  00A6               	movwf	??_UARTInit+1
  4259  00F2  0822               	movf	UARTInit@baud_rate+2,w
  4260  00F3  00A7               	movwf	??_UARTInit+2
  4261  00F4  0823               	movf	UARTInit@baud_rate+3,w
  4262  00F5  00A8               	movwf	??_UARTInit+3
  4263  00F6  3006               	movlw	6
  4264  00F7                     u2845:
  4265  00F7  1003               	clrc
  4266  00F8  0DA5               	rlf	??_UARTInit,f
  4267  00F9  0DA6               	rlf	??_UARTInit+1,f
  4268  00FA  0DA7               	rlf	??_UARTInit+2,f
  4269  00FB  0DA8               	rlf	??_UARTInit+3,f
  4270  00FC                     u2840:
  4271  00FC  3EFF               	addlw	-1
  4272  00FD  1D03               	skipz
  4273  00FE  28F7               	goto	u2845
  4274  00FF  0828               	movf	??_UARTInit+3,w
  4275  0100  00F3               	movwf	___lldiv@divisor+3
  4276  0101  0827               	movf	??_UARTInit+2,w
  4277  0102  00F2               	movwf	___lldiv@divisor+2
  4278  0103  0826               	movf	??_UARTInit+1,w
  4279  0104  00F1               	movwf	___lldiv@divisor+1
  4280  0105  0825               	movf	??_UARTInit,w
  4281  0106  00F0               	movwf	___lldiv@divisor
  4282  0107  3000               	movlw	0
  4283  0108  00F7               	movwf	___lldiv@dividend+3
  4284  0109  303D               	movlw	61
  4285  010A  00F6               	movwf	___lldiv@dividend+2
  4286  010B  3009               	movlw	9
  4287  010C  00F5               	movwf	___lldiv@dividend+1
  4288  010D  3000               	movlw	0
  4289  010E  00F4               	movwf	___lldiv@dividend
  4290  010F  120A  118A  201A  120A  118A  	fcall	___lldiv
  4291  0114  0870               	movf	?___lldiv,w
  4292  0115  3EFF               	addlw	255
  4293  0116  1683               	bsf	3,5	;RP0=1, select bank1
  4294  0117  1303               	bcf	3,6	;RP1=0, select bank1
  4295  0118  0099               	movwf	25	;volatile
  4296  0119                     l1947:
  4297                           
  4298                           ;UART.c: 12:         TXSTAbits.BRGH = 0;
  4299  0119  1118               	bcf	24,2	;volatile
  4300                           
  4301                           ;UART.c: 13:     } else {
  4302  011A  2947               	goto	l1953
  4303  011B                     l1949:
  4304                           
  4305                           ;UART.c: 14:         SPBRG = 4000000/(16*baud_rate) - 1;
  4306  011B  0820               	movf	UARTInit@baud_rate,w
  4307  011C  00A5               	movwf	??_UARTInit
  4308  011D  0821               	movf	UARTInit@baud_rate+1,w
  4309  011E  00A6               	movwf	??_UARTInit+1
  4310  011F  0822               	movf	UARTInit@baud_rate+2,w
  4311  0120  00A7               	movwf	??_UARTInit+2
  4312  0121  0823               	movf	UARTInit@baud_rate+3,w
  4313  0122  00A8               	movwf	??_UARTInit+3
  4314  0123  3004               	movlw	4
  4315  0124                     u2855:
  4316  0124  1003               	clrc
  4317  0125  0DA5               	rlf	??_UARTInit,f
  4318  0126  0DA6               	rlf	??_UARTInit+1,f
  4319  0127  0DA7               	rlf	??_UARTInit+2,f
  4320  0128  0DA8               	rlf	??_UARTInit+3,f
  4321  0129                     u2850:
  4322  0129  3EFF               	addlw	-1
  4323  012A  1D03               	skipz
  4324  012B  2924               	goto	u2855
  4325  012C  0828               	movf	??_UARTInit+3,w
  4326  012D  00F3               	movwf	___lldiv@divisor+3
  4327  012E  0827               	movf	??_UARTInit+2,w
  4328  012F  00F2               	movwf	___lldiv@divisor+2
  4329  0130  0826               	movf	??_UARTInit+1,w
  4330  0131  00F1               	movwf	___lldiv@divisor+1
  4331  0132  0825               	movf	??_UARTInit,w
  4332  0133  00F0               	movwf	___lldiv@divisor
  4333  0134  3000               	movlw	0
  4334  0135  00F7               	movwf	___lldiv@dividend+3
  4335  0136  303D               	movlw	61
  4336  0137  00F6               	movwf	___lldiv@dividend+2
  4337  0138  3009               	movlw	9
  4338  0139  00F5               	movwf	___lldiv@dividend+1
  4339  013A  3000               	movlw	0
  4340  013B  00F4               	movwf	___lldiv@dividend
  4341  013C  120A  118A  201A  120A  118A  	fcall	___lldiv
  4342  0141  0870               	movf	?___lldiv,w
  4343  0142  3EFF               	addlw	255
  4344  0143  1683               	bsf	3,5	;RP0=1, select bank1
  4345  0144  1303               	bcf	3,6	;RP1=0, select bank1
  4346  0145  0099               	movwf	25	;volatile
  4347  0146                     l1951:
  4348                           
  4349                           ;UART.c: 15:         TXSTAbits.BRGH = 1;
  4350  0146  1518               	bsf	24,2	;volatile
  4351  0147                     l1953:
  4352                           
  4353                           ;UART.c: 19:     TXSTAbits.TX9 = 0;
  4354  0147  1318               	bcf	24,6	;volatile
  4355  0148                     l1955:
  4356                           
  4357                           ;UART.c: 20:     TXSTAbits.TXEN = 1;
  4358  0148  1698               	bsf	24,5	;volatile
  4359  0149                     l1957:
  4360                           
  4361                           ;UART.c: 21:     TXSTAbits.SYNC = 0;
  4362  0149  1218               	bcf	24,4	;volatile
  4363  014A                     l1959:
  4364                           
  4365                           ;UART.c: 24:     RCSTAbits.SPEN = 1;
  4366  014A  1283               	bcf	3,5	;RP0=0, select bank0
  4367  014B  1303               	bcf	3,6	;RP1=0, select bank0
  4368  014C  1798               	bsf	24,7	;volatile
  4369  014D                     l1961:
  4370                           
  4371                           ;UART.c: 25:     RCSTAbits.RX9 = 0;
  4372  014D  1318               	bcf	24,6	;volatile
  4373  014E                     l1963:
  4374                           
  4375                           ;UART.c: 26:     RCSTAbits.CREN = 1;
  4376  014E  1618               	bsf	24,4	;volatile
  4377  014F                     l1965:
  4378                           
  4379                           ;UART.c: 27:     RCSTAbits.FERR = 0;
  4380  014F  1118               	bcf	24,2	;volatile
  4381  0150                     l1967:
  4382                           
  4383                           ;UART.c: 28:     RCSTAbits.OERR = 0;
  4384  0150  1098               	bcf	24,1	;volatile
  4385  0151                     l1969:
  4386                           
  4387                           ;UART.c: 31:     TRISCbits.TRISC7 = 1;
  4388  0151  1683               	bsf	3,5	;RP0=1, select bank1
  4389  0152  1303               	bcf	3,6	;RP1=0, select bank1
  4390  0153  1787               	bsf	7,7	;volatile
  4391  0154                     l1971:
  4392                           
  4393                           ;UART.c: 32:     TRISCbits.TRISC6 = 0;
  4394  0154  1307               	bcf	7,6	;volatile
  4395  0155                     l77:
  4396  0155  0008               	return
  4397  0156                     __end_of_UARTInit:
  4398                           
  4399                           	psect	text18
  4400  001A                     __ptext18:	
  4401 ;; *************** function ___lldiv *****************
  4402 ;; Defined at:
  4403 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\__lldiv.c"
  4404 ;; Parameters:    Size  Location     Type
  4405 ;;  divisor         4    0[COMMON] unsigned long 
  4406 ;;  dividend        4    4[COMMON] unsigned long 
  4407 ;; Auto vars:     Size  Location     Type
  4408 ;;  quotient        4    9[COMMON] unsigned long 
  4409 ;;  counter         1   13[COMMON] unsigned char 
  4410 ;; Return value:  Size  Location     Type
  4411 ;;                  4    0[COMMON] unsigned long 
  4412 ;; Registers used:
  4413 ;;		wreg, status,2, status,0
  4414 ;; Tracked objects:
  4415 ;;		On entry : 0/0
  4416 ;;		On exit  : 0/0
  4417 ;;		Unchanged: 0/0
  4418 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4419 ;;      Params:         8       0       0       0       0
  4420 ;;      Locals:         5       0       0       0       0
  4421 ;;      Temps:          1       0       0       0       0
  4422 ;;      Totals:        14       0       0       0       0
  4423 ;;Total ram usage:       14 bytes
  4424 ;; Hardware stack levels used:    1
  4425 ;; This function calls:
  4426 ;;		Nothing
  4427 ;; This function is called by:
  4428 ;;		_UARTInit
  4429 ;; This function uses a non-reentrant model
  4430 ;;
  4431                           
  4432                           
  4433                           ;psect for function ___lldiv
  4434  001A                     ___lldiv:
  4435  001A                     l1549:	
  4436                           ;incstack = 0
  4437                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  4438                           
  4439  001A  3000               	movlw	0
  4440  001B  00FC               	movwf	___lldiv@quotient+3
  4441  001C  3000               	movlw	0
  4442  001D  00FB               	movwf	___lldiv@quotient+2
  4443  001E  3000               	movlw	0
  4444  001F  00FA               	movwf	___lldiv@quotient+1
  4445  0020  3000               	movlw	0
  4446  0021  00F9               	movwf	___lldiv@quotient
  4447  0022  0873               	movf	___lldiv@divisor+3,w
  4448  0023  0472               	iorwf	___lldiv@divisor+2,w
  4449  0024  0471               	iorwf	___lldiv@divisor+1,w
  4450  0025  0470               	iorwf	___lldiv@divisor,w
  4451  0026  1903               	skipnz
  4452  0027  2829               	goto	u1821
  4453  0028  282A               	goto	u1820
  4454  0029                     u1821:
  4455  0029  2877               	goto	l1569
  4456  002A                     u1820:
  4457  002A                     l1551:
  4458  002A  01FD               	clrf	___lldiv@counter
  4459  002B  0AFD               	incf	___lldiv@counter,f
  4460  002C  283A               	goto	l1555
  4461  002D                     l1553:
  4462  002D  3001               	movlw	1
  4463  002E  00F8               	movwf	??___lldiv
  4464  002F                     u1835:
  4465  002F  1003               	clrc
  4466  0030  0DF0               	rlf	___lldiv@divisor,f
  4467  0031  0DF1               	rlf	___lldiv@divisor+1,f
  4468  0032  0DF2               	rlf	___lldiv@divisor+2,f
  4469  0033  0DF3               	rlf	___lldiv@divisor+3,f
  4470  0034  0BF8               	decfsz	??___lldiv,f
  4471  0035  282F               	goto	u1835
  4472  0036  3001               	movlw	1
  4473  0037  00F8               	movwf	??___lldiv
  4474  0038  0878               	movf	??___lldiv,w
  4475  0039  07FD               	addwf	___lldiv@counter,f
  4476  003A                     l1555:
  4477  003A  1FF3               	btfss	___lldiv@divisor+3,7
  4478  003B  283D               	goto	u1841
  4479  003C  283E               	goto	u1840
  4480  003D                     u1841:
  4481  003D  282D               	goto	l1553
  4482  003E                     u1840:
  4483  003E                     l1557:
  4484  003E  3001               	movlw	1
  4485  003F  00F8               	movwf	??___lldiv
  4486  0040                     u1855:
  4487  0040  1003               	clrc
  4488  0041  0DF9               	rlf	___lldiv@quotient,f
  4489  0042  0DFA               	rlf	___lldiv@quotient+1,f
  4490  0043  0DFB               	rlf	___lldiv@quotient+2,f
  4491  0044  0DFC               	rlf	___lldiv@quotient+3,f
  4492  0045  0BF8               	decfsz	??___lldiv,f
  4493  0046  2840               	goto	u1855
  4494  0047                     l1559:
  4495  0047  0873               	movf	___lldiv@divisor+3,w
  4496  0048  0277               	subwf	___lldiv@dividend+3,w
  4497  0049  1D03               	skipz
  4498  004A  2855               	goto	u1865
  4499  004B  0872               	movf	___lldiv@divisor+2,w
  4500  004C  0276               	subwf	___lldiv@dividend+2,w
  4501  004D  1D03               	skipz
  4502  004E  2855               	goto	u1865
  4503  004F  0871               	movf	___lldiv@divisor+1,w
  4504  0050  0275               	subwf	___lldiv@dividend+1,w
  4505  0051  1D03               	skipz
  4506  0052  2855               	goto	u1865
  4507  0053  0870               	movf	___lldiv@divisor,w
  4508  0054  0274               	subwf	___lldiv@dividend,w
  4509  0055                     u1865:
  4510  0055  1C03               	skipc
  4511  0056  2858               	goto	u1861
  4512  0057  2859               	goto	u1860
  4513  0058                     u1861:
  4514  0058  2868               	goto	l1565
  4515  0059                     u1860:
  4516  0059                     l1561:
  4517  0059  0870               	movf	___lldiv@divisor,w
  4518  005A  02F4               	subwf	___lldiv@dividend,f
  4519  005B  0871               	movf	___lldiv@divisor+1,w
  4520  005C  1C03               	skipc
  4521  005D  0F71               	incfsz	___lldiv@divisor+1,w
  4522  005E  02F5               	subwf	___lldiv@dividend+1,f
  4523  005F  0872               	movf	___lldiv@divisor+2,w
  4524  0060  1C03               	skipc
  4525  0061  0F72               	incfsz	___lldiv@divisor+2,w
  4526  0062  02F6               	subwf	___lldiv@dividend+2,f
  4527  0063  0873               	movf	___lldiv@divisor+3,w
  4528  0064  1C03               	skipc
  4529  0065  0F73               	incfsz	___lldiv@divisor+3,w
  4530  0066  02F7               	subwf	___lldiv@dividend+3,f
  4531  0067                     l1563:
  4532  0067  1479               	bsf	___lldiv@quotient,0
  4533  0068                     l1565:
  4534  0068  3001               	movlw	1
  4535  0069                     u1875:
  4536  0069  1003               	clrc
  4537  006A  0CF3               	rrf	___lldiv@divisor+3,f
  4538  006B  0CF2               	rrf	___lldiv@divisor+2,f
  4539  006C  0CF1               	rrf	___lldiv@divisor+1,f
  4540  006D  0CF0               	rrf	___lldiv@divisor,f
  4541  006E  3EFF               	addlw	-1
  4542  006F  1D03               	skipz
  4543  0070  2869               	goto	u1875
  4544  0071                     l1567:
  4545  0071  3001               	movlw	1
  4546  0072  02FD               	subwf	___lldiv@counter,f
  4547  0073  1D03               	btfss	3,2
  4548  0074  2876               	goto	u1881
  4549  0075  2877               	goto	u1880
  4550  0076                     u1881:
  4551  0076  283E               	goto	l1557
  4552  0077                     u1880:
  4553  0077                     l1569:
  4554  0077  087C               	movf	___lldiv@quotient+3,w
  4555  0078  00F3               	movwf	?___lldiv+3
  4556  0079  087B               	movf	___lldiv@quotient+2,w
  4557  007A  00F2               	movwf	?___lldiv+2
  4558  007B  087A               	movf	___lldiv@quotient+1,w
  4559  007C  00F1               	movwf	?___lldiv+1
  4560  007D  0879               	movf	___lldiv@quotient,w
  4561  007E  00F0               	movwf	?___lldiv
  4562  007F                     l321:
  4563  007F  0008               	return
  4564  0080                     __end_of___lldiv:
  4565                           
  4566                           	psect	text19
  4567  0E7E                     __ptext19:	
  4568 ;; *************** function _LcdWriteString *****************
  4569 ;; Defined at:
  4570 ;;		line 64 in file "LCD8btis.c"
  4571 ;; Parameters:    Size  Location     Type
  4572 ;;  value           2    4[COMMON] PTR const unsigned char 
  4573 ;;		 -> NULL(0), int2String@cadena(4), adcToString@salida(5), STR_2(3), 
  4574 ;;		 -> STR_1(17), 
  4575 ;; Auto vars:     Size  Location     Type
  4576 ;;  i               2    9[COMMON] int 
  4577 ;; Return value:  Size  Location     Type
  4578 ;;                  1    wreg      void 
  4579 ;; Registers used:
  4580 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4581 ;; Tracked objects:
  4582 ;;		On entry : 0/0
  4583 ;;		On exit  : 0/0
  4584 ;;		Unchanged: 0/0
  4585 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4586 ;;      Params:         2       0       0       0       0
  4587 ;;      Locals:         2       0       0       0       0
  4588 ;;      Temps:          3       0       0       0       0
  4589 ;;      Totals:         7       0       0       0       0
  4590 ;;Total ram usage:        7 bytes
  4591 ;; Hardware stack levels used:    1
  4592 ;; Hardware stack levels required when called:    2
  4593 ;; This function calls:
  4594 ;;		_LcdWriteChar
  4595 ;; This function is called by:
  4596 ;;		_main
  4597 ;; This function uses a non-reentrant model
  4598 ;;
  4599                           
  4600                           
  4601                           ;psect for function _LcdWriteString
  4602  0E7E                     _LcdWriteString:
  4603  0E7E                     l1987:	
  4604                           ;incstack = 0
  4605                           ; Regs used in _LcdWriteString: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4606                           
  4607                           
  4608                           ;LCD8btis.c: 66:     for (int i = 0; value[i] != '\0'; i++)
  4609  0E7E  01F9               	clrf	LcdWriteString@i
  4610  0E7F  01FA               	clrf	LcdWriteString@i+1
  4611  0E80  2EA3               	goto	l1993
  4612  0E81                     l1989:
  4613                           
  4614                           ;LCD8btis.c: 67:         LcdWriteChar(value[i]);
  4615  0E81  0879               	movf	LcdWriteString@i,w
  4616  0E82  0774               	addwf	LcdWriteString@value,w
  4617  0E83  00F7               	movwf	??_LcdWriteString+1
  4618  0E84  0875               	movf	LcdWriteString@value+1,w
  4619  0E85  00F6               	movwf	??_LcdWriteString
  4620  0E86  1803               	skipnc
  4621  0E87  0AF6               	incf	??_LcdWriteString,f
  4622  0E88  1FF9               	btfss	LcdWriteString@i,7
  4623  0E89  2E8B               	goto	u2860
  4624  0E8A  03F6               	decf	??_LcdWriteString,f
  4625  0E8B                     u2860:
  4626  0E8B  0876               	movf	??_LcdWriteString,w
  4627  0E8C  00F8               	movwf	??_LcdWriteString+2
  4628  0E8D  0878               	movf	??_LcdWriteString+2,w
  4629  0E8E  1283               	bcf	3,5	;RP0=0, select bank0
  4630  0E8F  1303               	bcf	3,6	;RP1=0, select bank0
  4631  0E90  00FF               	movwf	btemp+1
  4632  0E91  0877               	movf	??_LcdWriteString+1,w
  4633  0E92  0084               	movwf	4
  4634  0E93  120A  158A  2000  120A  158A  	fcall	stringtab
  4635  0E98  120A  158A  2591  120A  158A  	fcall	_LcdWriteChar
  4636  0E9D                     l1991:
  4637  0E9D  3001               	movlw	1
  4638  0E9E  07F9               	addwf	LcdWriteString@i,f
  4639  0E9F  1803               	skipnc
  4640  0EA0  0AFA               	incf	LcdWriteString@i+1,f
  4641  0EA1  3000               	movlw	0
  4642  0EA2  07FA               	addwf	LcdWriteString@i+1,f
  4643  0EA3                     l1993:
  4644  0EA3  0879               	movf	LcdWriteString@i,w
  4645  0EA4  0774               	addwf	LcdWriteString@value,w
  4646  0EA5  00F7               	movwf	??_LcdWriteString+1
  4647  0EA6  0875               	movf	LcdWriteString@value+1,w
  4648  0EA7  00F6               	movwf	??_LcdWriteString
  4649  0EA8  1803               	skipnc
  4650  0EA9  0AF6               	incf	??_LcdWriteString,f
  4651  0EAA  1FF9               	btfss	LcdWriteString@i,7
  4652  0EAB  2EAD               	goto	u2870
  4653  0EAC  03F6               	decf	??_LcdWriteString,f
  4654  0EAD                     u2870:
  4655  0EAD  0876               	movf	??_LcdWriteString,w
  4656  0EAE  00F8               	movwf	??_LcdWriteString+2
  4657  0EAF  0878               	movf	??_LcdWriteString+2,w
  4658  0EB0  1283               	bcf	3,5	;RP0=0, select bank0
  4659  0EB1  1303               	bcf	3,6	;RP1=0, select bank0
  4660  0EB2  00FF               	movwf	btemp+1
  4661  0EB3  0877               	movf	??_LcdWriteString+1,w
  4662  0EB4  0084               	movwf	4
  4663  0EB5  120A  158A  2000  120A  158A  	fcall	stringtab
  4664  0EBA  3A00               	xorlw	0
  4665  0EBB  1D03               	skipz
  4666  0EBC  2EBE               	goto	u2881
  4667  0EBD  2EBF               	goto	u2880
  4668  0EBE                     u2881:
  4669  0EBE  2E81               	goto	l1989
  4670  0EBF                     u2880:
  4671  0EBF                     l159:
  4672  0EBF  0008               	return
  4673  0EC0                     __end_of_LcdWriteString:
  4674                           
  4675                           	psect	text20
  4676  0D91                     __ptext20:	
  4677 ;; *************** function _LcdWriteChar *****************
  4678 ;; Defined at:
  4679 ;;		line 56 in file "LCD8btis.c"
  4680 ;; Parameters:    Size  Location     Type
  4681 ;;  value           1    wreg     unsigned char 
  4682 ;; Auto vars:     Size  Location     Type
  4683 ;;  value           1    3[COMMON] unsigned char 
  4684 ;; Return value:  Size  Location     Type
  4685 ;;                  1    wreg      void 
  4686 ;; Registers used:
  4687 ;;		wreg, status,2, status,0, pclath, cstack
  4688 ;; Tracked objects:
  4689 ;;		On entry : 0/0
  4690 ;;		On exit  : 0/0
  4691 ;;		Unchanged: 0/0
  4692 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4693 ;;      Params:         0       0       0       0       0
  4694 ;;      Locals:         1       0       0       0       0
  4695 ;;      Temps:          1       0       0       0       0
  4696 ;;      Totals:         2       0       0       0       0
  4697 ;;Total ram usage:        2 bytes
  4698 ;; Hardware stack levels used:    1
  4699 ;; Hardware stack levels required when called:    1
  4700 ;; This function calls:
  4701 ;;		_LcdPort
  4702 ;; This function is called by:
  4703 ;;		_main
  4704 ;;		_LcdWriteString
  4705 ;; This function uses a non-reentrant model
  4706 ;;
  4707                           
  4708                           
  4709                           ;psect for function _LcdWriteChar
  4710  0D91                     _LcdWriteChar:
  4711                           
  4712                           ;incstack = 0
  4713                           ; Regs used in _LcdWriteChar: [wreg+status,2+status,0+pclath+cstack]
  4714                           ;LcdWriteChar@value stored from wreg
  4715  0D91  00F3               	movwf	LcdWriteChar@value
  4716  0D92                     l1499:
  4717                           
  4718                           ;LCD8btis.c: 57:     RE1 = 1;
  4719  0D92  1283               	bcf	3,5	;RP0=0, select bank0
  4720  0D93  1303               	bcf	3,6	;RP1=0, select bank0
  4721  0D94  1489               	bsf	9,1	;volatile
  4722  0D95                     l1501:
  4723                           
  4724                           ;LCD8btis.c: 58:     LcdPort(value);
  4725  0D95  0873               	movf	LcdWriteChar@value,w
  4726  0D96  120A  118A  21D2  120A  158A  	fcall	_LcdPort
  4727  0D9B                     l1503:
  4728                           
  4729                           ;LCD8btis.c: 59:     RE0 = 1;
  4730  0D9B  1283               	bcf	3,5	;RP0=0, select bank0
  4731  0D9C  1303               	bcf	3,6	;RP1=0, select bank0
  4732  0D9D  1409               	bsf	9,0	;volatile
  4733  0D9E                     l1505:
  4734                           
  4735                           ;LCD8btis.c: 60:     _delay((unsigned long)((40)*(4000000/4000000.0)));
  4736  0D9E  300D               	movlw	13
  4737  0D9F  00F2               	movwf	??_LcdWriteChar
  4738  0DA0                     u2897:
  4739  0DA0  0BF2               	decfsz	??_LcdWriteChar,f
  4740  0DA1  2DA0               	goto	u2897
  4741  0DA2                     l1507:
  4742                           
  4743                           ;LCD8btis.c: 61:     RE0 = 0;
  4744  0DA2  1283               	bcf	3,5	;RP0=0, select bank0
  4745  0DA3  1303               	bcf	3,6	;RP1=0, select bank0
  4746  0DA4  1009               	bcf	9,0	;volatile
  4747  0DA5                     l153:
  4748  0DA5  0008               	return
  4749  0DA6                     __end_of_LcdWriteChar:
  4750                           
  4751                           	psect	text21
  4752  0DD5                     __ptext21:	
  4753 ;; *************** function _LcdSetCursor *****************
  4754 ;; Defined at:
  4755 ;;		line 29 in file "LCD8btis.c"
  4756 ;; Parameters:    Size  Location     Type
  4757 ;;  row             1    wreg     unsigned char 
  4758 ;;  column          1    5[COMMON] unsigned char 
  4759 ;; Auto vars:     Size  Location     Type
  4760 ;;  row             1    8[COMMON] unsigned char 
  4761 ;; Return value:  Size  Location     Type
  4762 ;;                  1    wreg      void 
  4763 ;; Registers used:
  4764 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4765 ;; Tracked objects:
  4766 ;;		On entry : 0/0
  4767 ;;		On exit  : 0/0
  4768 ;;		Unchanged: 0/0
  4769 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4770 ;;      Params:         1       0       0       0       0
  4771 ;;      Locals:         1       0       0       0       0
  4772 ;;      Temps:          2       0       0       0       0
  4773 ;;      Totals:         4       0       0       0       0
  4774 ;;Total ram usage:        4 bytes
  4775 ;; Hardware stack levels used:    1
  4776 ;; Hardware stack levels required when called:    2
  4777 ;; This function calls:
  4778 ;;		_LcdCmd
  4779 ;; This function is called by:
  4780 ;;		_main
  4781 ;; This function uses a non-reentrant model
  4782 ;;
  4783                           
  4784                           
  4785                           ;psect for function _LcdSetCursor
  4786  0DD5                     _LcdSetCursor:
  4787                           
  4788                           ;incstack = 0
  4789                           ; Regs used in _LcdSetCursor: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4790                           ;LcdSetCursor@row stored from wreg
  4791  0DD5  00F8               	movwf	LcdSetCursor@row
  4792  0DD6                     l1973:
  4793                           
  4794                           ;LCD8btis.c: 30:     switch(row){
  4795  0DD6  2DE7               	goto	l1981
  4796  0DD7                     l1975:
  4797                           
  4798                           ;LCD8btis.c: 32:             LcdCmd(0x80 + column - 1);
  4799  0DD7  0875               	movf	LcdSetCursor@column,w
  4800  0DD8  3E7F               	addlw	127
  4801  0DD9  120A  158A  25BB  120A  158A  	fcall	_LcdCmd
  4802                           
  4803                           ;LCD8btis.c: 33:             break;
  4804  0DDE  2DF7               	goto	l147
  4805  0DDF                     l1977:
  4806                           
  4807                           ;LCD8btis.c: 35:             LcdCmd(0xC0 + column - 1);
  4808  0DDF  0875               	movf	LcdSetCursor@column,w
  4809  0DE0  3EBF               	addlw	191
  4810  0DE1  120A  158A  25BB  120A  158A  	fcall	_LcdCmd
  4811                           
  4812                           ;LCD8btis.c: 36:             break;
  4813  0DE6  2DF7               	goto	l147
  4814  0DE7                     l1981:
  4815  0DE7  0878               	movf	LcdSetCursor@row,w
  4816  0DE8  00F6               	movwf	??_LcdSetCursor
  4817  0DE9  01F7               	clrf	??_LcdSetCursor+1
  4818                           
  4819                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4820                           ; Switch size 1, requested type "simple"
  4821                           ; Number of cases is 1, Range of values is 0 to 0
  4822                           ; switch strategies available:
  4823                           ; Name         Instructions Cycles
  4824                           ; simple_byte            4     3 (average)
  4825                           ; direct_byte           11     8 (fixed)
  4826                           ; jumptable            260     6 (fixed)
  4827                           ;	Chosen strategy is simple_byte
  4828  0DEA  0877               	movf	??_LcdSetCursor+1,w
  4829  0DEB  3A00               	xorlw	0	; case 0
  4830  0DEC  1903               	skipnz
  4831  0DED  2DEF               	goto	l2123
  4832  0DEE  2DF7               	goto	l147
  4833  0DEF                     l2123:
  4834                           
  4835                           ; Switch size 1, requested type "simple"
  4836                           ; Number of cases is 2, Range of values is 1 to 2
  4837                           ; switch strategies available:
  4838                           ; Name         Instructions Cycles
  4839                           ; simple_byte            7     4 (average)
  4840                           ; direct_byte           17    11 (fixed)
  4841                           ; jumptable            263     9 (fixed)
  4842                           ;	Chosen strategy is simple_byte
  4843  0DEF  0876               	movf	??_LcdSetCursor,w
  4844  0DF0  3A01               	xorlw	1	; case 1
  4845  0DF1  1903               	skipnz
  4846  0DF2  2DD7               	goto	l1975
  4847  0DF3  3A03               	xorlw	3	; case 2
  4848  0DF4  1903               	skipnz
  4849  0DF5  2DDF               	goto	l1977
  4850  0DF6  2DF7               	goto	l147
  4851  0DF7                     l147:
  4852  0DF7  0008               	return
  4853  0DF8                     __end_of_LcdSetCursor:
  4854                           
  4855                           	psect	text22
  4856  0F04                     __ptext22:	
  4857 ;; *************** function _LcdInit *****************
  4858 ;; Defined at:
  4859 ;;		line 41 in file "LCD8btis.c"
  4860 ;; Parameters:    Size  Location     Type
  4861 ;;		None
  4862 ;; Auto vars:     Size  Location     Type
  4863 ;;		None
  4864 ;; Return value:  Size  Location     Type
  4865 ;;                  1    wreg      void 
  4866 ;; Registers used:
  4867 ;;		wreg, status,2, status,0, pclath, cstack
  4868 ;; Tracked objects:
  4869 ;;		On entry : 0/0
  4870 ;;		On exit  : 0/0
  4871 ;;		Unchanged: 0/0
  4872 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4873 ;;      Params:         0       0       0       0       0
  4874 ;;      Locals:         0       0       0       0       0
  4875 ;;      Temps:          2       0       0       0       0
  4876 ;;      Totals:         2       0       0       0       0
  4877 ;;Total ram usage:        2 bytes
  4878 ;; Hardware stack levels used:    1
  4879 ;; Hardware stack levels required when called:    2
  4880 ;; This function calls:
  4881 ;;		_LcdCmd
  4882 ;;		_LcdPort
  4883 ;; This function is called by:
  4884 ;;		_main
  4885 ;; This function uses a non-reentrant model
  4886 ;;
  4887                           
  4888                           
  4889                           ;psect for function _LcdInit
  4890  0F04                     _LcdInit:
  4891  0F04                     l1933:	
  4892                           ;incstack = 0
  4893                           ; Regs used in _LcdInit: [wreg+status,2+status,0+pclath+cstack]
  4894                           
  4895                           
  4896                           ;LCD8btis.c: 42:     LcdPort(0x00);
  4897  0F04  3000               	movlw	0
  4898  0F05  120A  118A  21D2  120A  158A  	fcall	_LcdPort
  4899  0F0A                     l1935:
  4900                           
  4901                           ;LCD8btis.c: 43:     _delay((unsigned long)((20)*(4000000/4000.0)));
  4902  0F0A  301A               	movlw	26
  4903  0F0B  00F6               	movwf	??_LcdInit+1
  4904  0F0C  30F8               	movlw	248
  4905  0F0D  00F5               	movwf	??_LcdInit
  4906  0F0E                     u2907:
  4907  0F0E  0BF5               	decfsz	??_LcdInit,f
  4908  0F0F  2F0E               	goto	u2907
  4909  0F10  0BF6               	decfsz	??_LcdInit+1,f
  4910  0F11  2F0E               	goto	u2907
  4911  0F12  0000               	nop
  4912  0F13                     l1937:
  4913                           
  4914                           ;LCD8btis.c: 44:     LcdCmd(0x30);
  4915  0F13  3030               	movlw	48
  4916  0F14  120A  158A  25BB  120A  158A  	fcall	_LcdCmd
  4917                           
  4918                           ;LCD8btis.c: 45:     _delay((unsigned long)((5)*(4000000/4000.0)));
  4919  0F19  3007               	movlw	7
  4920  0F1A  00F6               	movwf	??_LcdInit+1
  4921  0F1B  307D               	movlw	125
  4922  0F1C  00F5               	movwf	??_LcdInit
  4923  0F1D                     u2917:
  4924  0F1D  0BF5               	decfsz	??_LcdInit,f
  4925  0F1E  2F1D               	goto	u2917
  4926  0F1F  0BF6               	decfsz	??_LcdInit+1,f
  4927  0F20  2F1D               	goto	u2917
  4928  0F21                     l1939:
  4929                           
  4930                           ;LCD8btis.c: 46:     LcdCmd(0x30);
  4931  0F21  3030               	movlw	48
  4932  0F22  120A  158A  25BB  120A  158A  	fcall	_LcdCmd
  4933  0F27                     l1941:
  4934                           
  4935                           ;LCD8btis.c: 47:     _delay((unsigned long)((11)*(4000000/4000.0)));
  4936  0F27  300F               	movlw	15
  4937  0F28  00F6               	movwf	??_LcdInit+1
  4938  0F29  3047               	movlw	71
  4939  0F2A  00F5               	movwf	??_LcdInit
  4940  0F2B                     u2927:
  4941  0F2B  0BF5               	decfsz	??_LcdInit,f
  4942  0F2C  2F2B               	goto	u2927
  4943  0F2D  0BF6               	decfsz	??_LcdInit+1,f
  4944  0F2E  2F2B               	goto	u2927
  4945  0F2F  2F30               	nop2
  4946                           
  4947                           ;LCD8btis.c: 48:     LcdCmd(0x30);
  4948  0F30  3030               	movlw	48
  4949  0F31  120A  158A  25BB  120A  158A  	fcall	_LcdCmd
  4950                           
  4951                           ;LCD8btis.c: 50:     LcdCmd(0x38);
  4952  0F36  3038               	movlw	56
  4953  0F37  120A  158A  25BB  120A  158A  	fcall	_LcdCmd
  4954                           
  4955                           ;LCD8btis.c: 51:     LcdCmd(0x0C);
  4956  0F3C  300C               	movlw	12
  4957  0F3D  120A  158A  25BB  120A  158A  	fcall	_LcdCmd
  4958                           
  4959                           ;LCD8btis.c: 52:     LcdCmd(0x6);
  4960  0F42  3006               	movlw	6
  4961  0F43  120A  158A  25BB  120A  158A  	fcall	_LcdCmd
  4962  0F48                     l150:
  4963  0F48  0008               	return
  4964  0F49                     __end_of_LcdInit:
  4965                           
  4966                           	psect	text23
  4967  0DBB                     __ptext23:	
  4968 ;; *************** function _LcdCmd *****************
  4969 ;; Defined at:
  4970 ;;		line 16 in file "LCD8btis.c"
  4971 ;; Parameters:    Size  Location     Type
  4972 ;;  value           1    wreg     unsigned char 
  4973 ;; Auto vars:     Size  Location     Type
  4974 ;;  value           1    4[COMMON] unsigned char 
  4975 ;; Return value:  Size  Location     Type
  4976 ;;                  1    wreg      void 
  4977 ;; Registers used:
  4978 ;;		wreg, status,2, status,0, pclath, cstack
  4979 ;; Tracked objects:
  4980 ;;		On entry : 0/0
  4981 ;;		On exit  : 0/0
  4982 ;;		Unchanged: 0/0
  4983 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4984 ;;      Params:         0       0       0       0       0
  4985 ;;      Locals:         1       0       0       0       0
  4986 ;;      Temps:          2       0       0       0       0
  4987 ;;      Totals:         3       0       0       0       0
  4988 ;;Total ram usage:        3 bytes
  4989 ;; Hardware stack levels used:    1
  4990 ;; Hardware stack levels required when called:    1
  4991 ;; This function calls:
  4992 ;;		_LcdPort
  4993 ;; This function is called by:
  4994 ;;		_LcdSetCursor
  4995 ;;		_LcdInit
  4996 ;;		_LcdClear
  4997 ;;		_LcdShiftRight
  4998 ;;		_LcdShiftLeft
  4999 ;; This function uses a non-reentrant model
  5000 ;;
  5001                           
  5002                           
  5003                           ;psect for function _LcdCmd
  5004  0DBB                     _LcdCmd:
  5005                           
  5006                           ;incstack = 0
  5007                           ; Regs used in _LcdCmd: [wreg+status,2+status,0+pclath+cstack]
  5008                           ;LcdCmd@value stored from wreg
  5009  0DBB  00F4               	movwf	LcdCmd@value
  5010  0DBC                     l1509:
  5011                           
  5012                           ;LCD8btis.c: 17:     RE1 = 0;
  5013  0DBC  1283               	bcf	3,5	;RP0=0, select bank0
  5014  0DBD  1303               	bcf	3,6	;RP1=0, select bank0
  5015  0DBE  1089               	bcf	9,1	;volatile
  5016  0DBF                     l1511:
  5017                           
  5018                           ;LCD8btis.c: 18:     LcdPort(value);
  5019  0DBF  0874               	movf	LcdCmd@value,w
  5020  0DC0  120A  118A  21D2  120A  158A  	fcall	_LcdPort
  5021  0DC5                     l1513:
  5022                           
  5023                           ;LCD8btis.c: 19:     RE0 = 1;
  5024  0DC5  1283               	bcf	3,5	;RP0=0, select bank0
  5025  0DC6  1303               	bcf	3,6	;RP1=0, select bank0
  5026  0DC7  1409               	bsf	9,0	;volatile
  5027  0DC8                     l1515:
  5028                           
  5029                           ;LCD8btis.c: 20:     _delay((unsigned long)((4)*(4000000/4000.0)));
  5030  0DC8  3006               	movlw	6
  5031  0DC9  00F3               	movwf	??_LcdCmd+1
  5032  0DCA  3030               	movlw	48
  5033  0DCB  00F2               	movwf	??_LcdCmd
  5034  0DCC                     u2937:
  5035  0DCC  0BF2               	decfsz	??_LcdCmd,f
  5036  0DCD  2DCC               	goto	u2937
  5037  0DCE  0BF3               	decfsz	??_LcdCmd+1,f
  5038  0DCF  2DCC               	goto	u2937
  5039  0DD0  0000               	nop
  5040  0DD1                     l1517:
  5041                           
  5042                           ;LCD8btis.c: 21:     RE0 = 0;
  5043  0DD1  1283               	bcf	3,5	;RP0=0, select bank0
  5044  0DD2  1303               	bcf	3,6	;RP1=0, select bank0
  5045  0DD3  1009               	bcf	9,0	;volatile
  5046  0DD4                     l137:
  5047  0DD4  0008               	return
  5048  0DD5                     __end_of_LcdCmd:
  5049                           
  5050                           	psect	text24
  5051  01D2                     __ptext24:	
  5052 ;; *************** function _LcdPort *****************
  5053 ;; Defined at:
  5054 ;;		line 3 in file "LCD8btis.c"
  5055 ;; Parameters:    Size  Location     Type
  5056 ;;  value           1    wreg     unsigned char 
  5057 ;; Auto vars:     Size  Location     Type
  5058 ;;  value           1    1[COMMON] unsigned char 
  5059 ;; Return value:  Size  Location     Type
  5060 ;;                  1    wreg      void 
  5061 ;; Registers used:
  5062 ;;		wreg, status,2, status,0
  5063 ;; Tracked objects:
  5064 ;;		On entry : 0/0
  5065 ;;		On exit  : 0/0
  5066 ;;		Unchanged: 0/0
  5067 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5068 ;;      Params:         0       0       0       0       0
  5069 ;;      Locals:         1       0       0       0       0
  5070 ;;      Temps:          1       0       0       0       0
  5071 ;;      Totals:         2       0       0       0       0
  5072 ;;Total ram usage:        2 bytes
  5073 ;; Hardware stack levels used:    1
  5074 ;; This function calls:
  5075 ;;		Nothing
  5076 ;; This function is called by:
  5077 ;;		_LcdCmd
  5078 ;;		_LcdInit
  5079 ;;		_LcdWriteChar
  5080 ;; This function uses a non-reentrant model
  5081 ;;
  5082                           
  5083                           
  5084                           ;psect for function _LcdPort
  5085  01D2                     _LcdPort:
  5086                           
  5087                           ;incstack = 0
  5088                           ; Regs used in _LcdPort: [wreg+status,2+status,0]
  5089                           ;LcdPort@value stored from wreg
  5090  01D2  00F1               	movwf	LcdPort@value
  5091  01D3                     l1481:
  5092                           
  5093                           ;LCD8btis.c: 6:     RD0 = value &1;
  5094  01D3  1871               	btfsc	LcdPort@value,0
  5095  01D4  29D6               	goto	u1491
  5096  01D5  29DA               	goto	u1490
  5097  01D6                     u1491:
  5098  01D6  1283               	bcf	3,5	;RP0=0, select bank0
  5099  01D7  1303               	bcf	3,6	;RP1=0, select bank0
  5100  01D8  1408               	bsf	8,0	;volatile
  5101  01D9  29DD               	goto	u1504
  5102  01DA                     u1490:
  5103  01DA  1283               	bcf	3,5	;RP0=0, select bank0
  5104  01DB  1303               	bcf	3,6	;RP1=0, select bank0
  5105  01DC  1008               	bcf	8,0	;volatile
  5106  01DD                     u1504:
  5107  01DD                     l1483:
  5108                           
  5109                           ;LCD8btis.c: 7:     RD1 = (value & 2) >> 1;
  5110  01DD  0871               	movf	LcdPort@value,w
  5111  01DE  00F0               	movwf	??_LcdPort
  5112  01DF  3001               	movlw	1
  5113  01E0                     u1515:
  5114  01E0  1003               	clrc
  5115  01E1  0CF0               	rrf	??_LcdPort,f
  5116  01E2  3EFF               	addlw	-1
  5117  01E3  1D03               	skipz
  5118  01E4  29E0               	goto	u1515
  5119  01E5  1870               	btfsc	??_LcdPort,0
  5120  01E6  29E8               	goto	u1521
  5121  01E7  29EC               	goto	u1520
  5122  01E8                     u1521:
  5123  01E8  1283               	bcf	3,5	;RP0=0, select bank0
  5124  01E9  1303               	bcf	3,6	;RP1=0, select bank0
  5125  01EA  1488               	bsf	8,1	;volatile
  5126  01EB  29EF               	goto	u1534
  5127  01EC                     u1520:
  5128  01EC  1283               	bcf	3,5	;RP0=0, select bank0
  5129  01ED  1303               	bcf	3,6	;RP1=0, select bank0
  5130  01EE  1088               	bcf	8,1	;volatile
  5131  01EF                     u1534:
  5132                           
  5133                           ;LCD8btis.c: 8:     RD2 = (value & 4) >> 2;
  5134  01EF  0871               	movf	LcdPort@value,w
  5135  01F0  00F0               	movwf	??_LcdPort
  5136  01F1  3002               	movlw	2
  5137  01F2                     u1545:
  5138  01F2  1003               	clrc
  5139  01F3  0CF0               	rrf	??_LcdPort,f
  5140  01F4  3EFF               	addlw	-1
  5141  01F5  1D03               	skipz
  5142  01F6  29F2               	goto	u1545
  5143  01F7  1870               	btfsc	??_LcdPort,0
  5144  01F8  29FA               	goto	u1551
  5145  01F9  29FE               	goto	u1550
  5146  01FA                     u1551:
  5147  01FA  1283               	bcf	3,5	;RP0=0, select bank0
  5148  01FB  1303               	bcf	3,6	;RP1=0, select bank0
  5149  01FC  1508               	bsf	8,2	;volatile
  5150  01FD  2A01               	goto	u1564
  5151  01FE                     u1550:
  5152  01FE  1283               	bcf	3,5	;RP0=0, select bank0
  5153  01FF  1303               	bcf	3,6	;RP1=0, select bank0
  5154  0200  1108               	bcf	8,2	;volatile
  5155  0201                     u1564:
  5156                           
  5157                           ;LCD8btis.c: 9:     RD3 = (value &8) >> 3;
  5158  0201  0871               	movf	LcdPort@value,w
  5159  0202  00F0               	movwf	??_LcdPort
  5160  0203  3003               	movlw	3
  5161  0204                     u1575:
  5162  0204  1003               	clrc
  5163  0205  0CF0               	rrf	??_LcdPort,f
  5164  0206  3EFF               	addlw	-1
  5165  0207  1D03               	skipz
  5166  0208  2A04               	goto	u1575
  5167  0209  1870               	btfsc	??_LcdPort,0
  5168  020A  2A0C               	goto	u1581
  5169  020B  2A10               	goto	u1580
  5170  020C                     u1581:
  5171  020C  1283               	bcf	3,5	;RP0=0, select bank0
  5172  020D  1303               	bcf	3,6	;RP1=0, select bank0
  5173  020E  1588               	bsf	8,3	;volatile
  5174  020F  2A13               	goto	u1594
  5175  0210                     u1580:
  5176  0210  1283               	bcf	3,5	;RP0=0, select bank0
  5177  0211  1303               	bcf	3,6	;RP1=0, select bank0
  5178  0212  1188               	bcf	8,3	;volatile
  5179  0213                     u1594:
  5180                           
  5181                           ;LCD8btis.c: 10:     RD4 = (value & 16)>>4;
  5182  0213  0871               	movf	LcdPort@value,w
  5183  0214  00F0               	movwf	??_LcdPort
  5184  0215  3004               	movlw	4
  5185  0216                     u1605:
  5186  0216  1003               	clrc
  5187  0217  0CF0               	rrf	??_LcdPort,f
  5188  0218  3EFF               	addlw	-1
  5189  0219  1D03               	skipz
  5190  021A  2A16               	goto	u1605
  5191  021B  1870               	btfsc	??_LcdPort,0
  5192  021C  2A1E               	goto	u1611
  5193  021D  2A22               	goto	u1610
  5194  021E                     u1611:
  5195  021E  1283               	bcf	3,5	;RP0=0, select bank0
  5196  021F  1303               	bcf	3,6	;RP1=0, select bank0
  5197  0220  1608               	bsf	8,4	;volatile
  5198  0221  2A25               	goto	u1624
  5199  0222                     u1610:
  5200  0222  1283               	bcf	3,5	;RP0=0, select bank0
  5201  0223  1303               	bcf	3,6	;RP1=0, select bank0
  5202  0224  1208               	bcf	8,4	;volatile
  5203  0225                     u1624:
  5204                           
  5205                           ;LCD8btis.c: 11:     RD5 = (value & 32) >> 5 ;
  5206  0225  0871               	movf	LcdPort@value,w
  5207  0226  00F0               	movwf	??_LcdPort
  5208  0227  3005               	movlw	5
  5209  0228                     u1635:
  5210  0228  1003               	clrc
  5211  0229  0CF0               	rrf	??_LcdPort,f
  5212  022A  3EFF               	addlw	-1
  5213  022B  1D03               	skipz
  5214  022C  2A28               	goto	u1635
  5215  022D  1870               	btfsc	??_LcdPort,0
  5216  022E  2A30               	goto	u1641
  5217  022F  2A34               	goto	u1640
  5218  0230                     u1641:
  5219  0230  1283               	bcf	3,5	;RP0=0, select bank0
  5220  0231  1303               	bcf	3,6	;RP1=0, select bank0
  5221  0232  1688               	bsf	8,5	;volatile
  5222  0233  2A37               	goto	u1654
  5223  0234                     u1640:
  5224  0234  1283               	bcf	3,5	;RP0=0, select bank0
  5225  0235  1303               	bcf	3,6	;RP1=0, select bank0
  5226  0236  1288               	bcf	8,5	;volatile
  5227  0237                     u1654:
  5228                           
  5229                           ;LCD8btis.c: 12:     RD6 = (value & 64) >> 6;
  5230  0237  0871               	movf	LcdPort@value,w
  5231  0238  00F0               	movwf	??_LcdPort
  5232  0239  3006               	movlw	6
  5233  023A                     u1665:
  5234  023A  1003               	clrc
  5235  023B  0CF0               	rrf	??_LcdPort,f
  5236  023C  3EFF               	addlw	-1
  5237  023D  1D03               	skipz
  5238  023E  2A3A               	goto	u1665
  5239  023F  1870               	btfsc	??_LcdPort,0
  5240  0240  2A42               	goto	u1671
  5241  0241  2A46               	goto	u1670
  5242  0242                     u1671:
  5243  0242  1283               	bcf	3,5	;RP0=0, select bank0
  5244  0243  1303               	bcf	3,6	;RP1=0, select bank0
  5245  0244  1708               	bsf	8,6	;volatile
  5246  0245  2A49               	goto	u1684
  5247  0246                     u1670:
  5248  0246  1283               	bcf	3,5	;RP0=0, select bank0
  5249  0247  1303               	bcf	3,6	;RP1=0, select bank0
  5250  0248  1308               	bcf	8,6	;volatile
  5251  0249                     u1684:
  5252                           
  5253                           ;LCD8btis.c: 13:     RD7 = (value & 128) >> 7;
  5254  0249  0871               	movf	LcdPort@value,w
  5255  024A  00F0               	movwf	??_LcdPort
  5256  024B  3007               	movlw	7
  5257  024C                     u1695:
  5258  024C  1003               	clrc
  5259  024D  0CF0               	rrf	??_LcdPort,f
  5260  024E  3EFF               	addlw	-1
  5261  024F  1D03               	skipz
  5262  0250  2A4C               	goto	u1695
  5263  0251  1870               	btfsc	??_LcdPort,0
  5264  0252  2A54               	goto	u1701
  5265  0253  2A58               	goto	u1700
  5266  0254                     u1701:
  5267  0254  1283               	bcf	3,5	;RP0=0, select bank0
  5268  0255  1303               	bcf	3,6	;RP1=0, select bank0
  5269  0256  1788               	bsf	8,7	;volatile
  5270  0257  2A5B               	goto	u1714
  5271  0258                     u1700:
  5272  0258  1283               	bcf	3,5	;RP0=0, select bank0
  5273  0259  1303               	bcf	3,6	;RP1=0, select bank0
  5274  025A  1388               	bcf	8,7	;volatile
  5275  025B                     u1714:
  5276  025B                     l134:
  5277  025B  0008               	return
  5278  025C                     __end_of_LcdPort:
  5279  007E                     btemp	set	126	;btemp
  5280  007E                     wtemp0	set	126
  5281                           
  5282                           	psect	config
  5283                           
  5284                           ;Config register CONFIG1 @ 0x2007
  5285                           ;	Oscillator Selection bits
  5286                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  5287                           ;	Watchdog Timer Enable bit
  5288                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  5289                           ;	Power-up Timer Enable bit
  5290                           ;	PWRTE = OFF, PWRT disabled
  5291                           ;	RE3/MCLR pin function select bit
  5292                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  5293                           ;	Code Protection bit
  5294                           ;	CP = OFF, Program memory code protection is disabled
  5295                           ;	Data Code Protection bit
  5296                           ;	CPD = OFF, Data memory code protection is disabled
  5297                           ;	Brown Out Reset Selection bits
  5298                           ;	BOREN = OFF, BOR disabled
  5299                           ;	Internal External Switchover bit
  5300                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  5301                           ;	Fail-Safe Clock Monitor Enabled bit
  5302                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  5303                           ;	Low Voltage Programming Enable bit
  5304                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  5305                           ;	In-Circuit Debugger Mode bit
  5306                           ;	DEBUG = 0x1, unprogrammed default
  5307  2007                     	org	8199
  5308  2007  20D4               	dw	8404
  5309                           
  5310                           ;Config register CONFIG2 @ 0x2008
  5311                           ;	Brown-out Reset Selection bit
  5312                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  5313                           ;	Flash Program Memory Self Write Enable bits
  5314                           ;	WRT = OFF, Write protection off
  5315  2008                     	org	8200
  5316  2008  3FFF               	dw	16383

Data Sizes:
    Strings     20
    Constant    0
    Data        0
    BSS         6
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     50      56
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    LcdWriteString@value	PTR const unsigned char  size(2) Largest target is 17
		 -> NULL(NULL[0]), int2String@cadena(BANK0[4]), adcToString@salida(BANK0[5]), STR_2(CODE[3]), 
		 -> STR_1(CODE[17]), 

    cadenaTemp	PTR unsigned char  size(1) Largest target is 4
		 -> NULL(NULL[0]), int2String@cadena(BANK0[4]), 

    sp__int2String	PTR unsigned char  size(1) Largest target is 4
		 -> int2String@cadena(BANK0[4]), 

    cadenaCounter	PTR unsigned char  size(1) Largest target is 4
		 -> NULL(NULL[0]), int2String@cadena(BANK0[4]), 

    sp__adcToString	PTR unsigned char  size(1) Largest target is 5
		 -> adcToString@salida(BANK0[5]), 

    cadenaADC	PTR unsigned char  size(1) Largest target is 5
		 -> NULL(NULL[0]), adcToString@salida(BANK0[5]), 


Critical Paths under _main in COMMON

    _int2String->___awdiv
    _adcToString->___xxtofl
    ___fltol->___xxtofl
    ___flmul->___xxtofl
    _UARTInit->___lldiv
    _LcdWriteString->_LcdWriteChar
    _LcdWriteChar->_LcdPort
    _LcdSetCursor->_LcdCmd
    _LcdInit->_LcdCmd
    _LcdCmd->_LcdPort

Critical Paths under _main in BANK0

    _main->_adcToString
    _adcToString->___fltol
    ___fltol->___flmul

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    8670
                                             47 BANK0      3     3      0
                            _LcdInit
                       _LcdSetCursor
                       _LcdWriteChar
                     _LcdWriteString
                           _UARTInit
                        _adcToString
                         _int2String
                            _spiInit
                            _spiRead
                           _spiWrite
 ---------------------------------------------------------------------------------
 (1) _spiWrite                                             1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _spiRead                                              0     0      0       0
                     _spiReceiveWait
 ---------------------------------------------------------------------------------
 (2) _spiReceiveWait                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _spiInit                                              4     1      3     360
                                              0 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 (1) _int2String                                           9     9      0    1429
                                              9 COMMON     3     3      0
                                              0 BANK0      6     6      0
                            ___awdiv
                            ___awmod
                             ___bmul
 ---------------------------------------------------------------------------------
 (2) ___bmul                                               4     3      1     168
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4     448
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     604
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (1) _adcToString                                         10     8      2    4519
                                             37 BANK0     10     8      2
                            ___flmul
                            ___fltol
                            ___lwdiv
                            ___lwmod
                             ___wmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     398
                                              0 COMMON    14    10      4
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     244
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     311
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     466
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             11     7      4     305
                                             26 BANK0     11     7      4
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flmul                                             26    18      8    2417
                                              0 BANK0     26    18      8
                          __Umul8_16
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) __Umul8_16                                            9     7      2     799
                                              0 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 (1) _UARTInit                                             9     4      5     684
                                              0 BANK0      9     4      5
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     466
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 (1) _LcdWriteString                                       7     5      2     668
                                              4 COMMON     7     5      2
                       _LcdWriteChar
 ---------------------------------------------------------------------------------
 (2) _LcdWriteChar                                         2     2      0     198
                                              2 COMMON     2     2      0
                            _LcdPort
 ---------------------------------------------------------------------------------
 (1) _LcdSetCursor                                         4     3      1     416
                                              5 COMMON     4     3      1
                             _LcdCmd
 ---------------------------------------------------------------------------------
 (1) _LcdInit                                              2     2      0     374
                                              5 COMMON     2     2      0
                             _LcdCmd
                            _LcdPort
 ---------------------------------------------------------------------------------
 (2) _LcdCmd                                               3     3      0     198
                                              2 COMMON     3     3      0
                            _LcdPort
 ---------------------------------------------------------------------------------
 (3) _LcdPort                                              2     2      0     176
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LcdInit
     _LcdCmd
       _LcdPort
     _LcdPort
   _LcdSetCursor
     _LcdCmd
       _LcdPort
   _LcdWriteChar
     _LcdPort
   _LcdWriteString
     _LcdWriteChar
       _LcdPort
   _UARTInit
     ___lldiv
   _adcToString
     ___flmul
       __Umul8_16
       ___xxtofl (ARG)
     ___fltol
       ___flmul (ARG)
         __Umul8_16
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___lwdiv
     ___lwmod
     ___wmul
     ___xxtofl
   _int2String
     ___awdiv
     ___awmod
     ___bmul
   _spiInit
   _spiRead
     _spiReceiveWait
   _spiWrite

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      46       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     32      38       5       70.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      46      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Mon Feb 15 18:24:38 2021

      UARTInit@baud_rate 0020                        pc 0002           ___bmul@product 0072  
            _SSPSTATbits 0094                       l55 02F9                       l58 0FFF  
                     l77 0155             ___awdiv@sign 0076                       fsr 0004  
    ___wmul@multiplicand 0072      __Umul8_16@word_mpld 0076                      l134 025B  
                    l150 0F48                      l311 0DBA                      l137 0DD4  
                    l153 0DA5                      l321 007F                      l147 0DF7  
                    l181 0014                      l182 0019                      l159 0EBF  
                    l191 0D80                      l185 0D81                      l451 0FA1  
                    l188 0D87                      l285 0E04                      l438 00E6  
                    l471 01D1                      l287 0E1C                      l199 0D90  
                    l720 03B3                      l481 01D1                      l731 037D  
                    l732 0389                      l724 0361                      l557 0F03  
                    l478 01BC                      l718 031C                      l567 0E7D  
                    l680 075F                      l674 07F3                      l693 0E31  
                    l686 07E7                      l695 0E43                      _RD0 0040  
                    _RD1 0041                      _RD2 0042                      _RE0 0048  
                    _RD3 0043                      _RE1 0049                      _RD4 0044  
                    _RD5 0045                      _RD6 0046                      _RD7 0047  
                    fsr0 0004                      indf 0000             ___awmod@sign 0076  
           ___flmul@aexp 0032             ___flmul@bexp 0033             ___flmul@sign 002D  
           ___flmul@temp 0038             ___flmul@prod 0034             ___fltol@exp1 0044  
                   l2011 02B2                     l2003 025C                     l2021 02F7  
                   l2013 02C7                     l2005 0296                     l2023 02F8  
                   l2015 02DA                     l2007 02A9                     l2031 0FC0  
                   l2017 02DF                     l2009 02AE                     l2033 0FCF  
                   l2123 0DEF                     l2019 02F2                     l2035 0FE6  
                   l2027 0FA5                     l2051 03CC                     l2043 03B4  
                   l1501 0D95                     l2037 0FFD                     l2029 0FBB  
                   l2061 03FA                     l2053 03DD                     l2045 03BC  
                   l1511 0DBF                     l1503 0D9B                     l2039 0FFE  
                   l2071 042D                     l2063 0400                     l2055 03E5  
                   l2047 03BE                     l1513 0DC5                     l1505 0D9E  
                   l1521 0DF8                     l1601 00C4                     l2081 0455  
                   l2073 0431                     l2065 040A                     l2057 03EE  
                   l2049 03C7                     l1515 0DC8                     l1507 0DA2  
                   l1531 0E18                     l1523 0DFA                     l1611 00DD  
                   l1603 00CA                     l2091 047A                     l2083 045B  
                   l2075 0437                     l2067 041B                     l2059 03F6  
                   l1517 0DD1                     l1509 0DBC                     l1701 0ED6  
                   l1525 0DFE                     l1613 00E2                     l1605 00CB  
                   l1621 0F4E                     l1541 0DB0                     l2093 0483  
                   l2085 045F                     l2077 0441                     l2069 0424  
                   l1551 002A                     l1711 0EF9                     l1703 0EDA  
                   l1527 0E0B                     l1607 00D2                     l1631 0F64  
                   l1623 0F53                     l1543 0DB2                     l1535 0DA7  
                   l1519 0D81                     l2095 0489                     l2087 0465  
                   l2079 044C                     l1481 01D3                     l1561 0059  
                   l1553 002D                     l1801 05D3                     l1705 0EEB  
                   l1713 0EFF                     l1721 0E4D                     l1529 0E12  
                   l1609 00D8                     l1641 0F80                     l1633 0F67  
                   l1625 0F55                     l1617 0F49                     l1545 0DB9  
                   l1537 0DA8                     l2089 046F                     l1483 01DD  
                   l1563 0067                     l1555 003A                     l1491 0E2B  
                   l1811 0653                     l1803 05F0                     l1707 0EF1  
                   l1731 0E6C                     l1723 0E54                     l1651 0F9D  
                   l1643 0F86                     l1635 0F6E                     l1627 0F59  
                   l1619 0F4A                     l1539 0DAC                     l1565 0068  
                   l1557 003E                     l1549 001A                     l1493 0E3A  
                   l1485 0E1E                     l1821 070B                     l1813 0680  
                   l1805 0600                     l1741 049A                     l1661 016C  
                   l1709 0EF2                     l1733 0E73                     l1725 0E58  
                   l1717 0E44                     l1901 0358                     l1581 008C  
                   l1573 0080                     l1645 0F8D                     l1637 0F72  
                   l1629 0F5E                     l1567 0071                     l1559 0047  
                   l1495 0E3F                     l1487 0E20                     l1831 0730  
                   l1823 0714                     l1815 0690                     l1807 061D  
                   l1751 04AF                     l1743 04A0                     l1671 0190  
                   l1663 0181                     l1655 0156                     l1727 0E5C  
                   l1719 0E4A                     l1735 0E79                     l1911 038B  
                   l1903 0368                     l1591 00A1                     l1583 0090  
                   l1575 0081                     l1639 0F76                     l1647 0F93  
                   l1569 0077                     l1489 0E27                     l1841 0748  
                   l1833 0739                     l1825 0722                     l1817 06BD  
                   l1809 0636                     l1761 04CC                     l1753 04B7  
                   l1745 04A4                     l1665 0182                     l1657 0163  
                   l1729 0E66                     l1913 03A1                     l1905 0373  
                   l1593 00A4                     l1585 0095                     l1577 0085  
                   l1649 0F98                     l1499 0D92                     l1851 0777  
                   l1843 075C                     l1827 072B                     l1835 073F  
                   l1819 06E3                     l1771 04E3                     l1763 04D0  
                   l1755 04B9                     l1747 04A5                     l1739 0493  
                   l1667 018A                     l1691 0EC0                     l1915 03A6  
                   l1907 0377                     l1595 00AB                     l1587 0099  
                   l1579 008A                     l1931 0013                     l1923 0005  
                   l1941 0F27                     l1933 0F04                     l1861 07B2  
                   l1853 077B                     l1837 0743                     l1829 072F  
                   l1773 04E5                     l1765 04D1                     l1757 04C1  
                   l1749 04AA                     l1685 01B1                     l1677 0198  
                   l1669 018C                     l1693 0EC2                     l1917 03AA  
                   l1909 0381                     l1597 00AF                     l1589 009B  
                   l1925 000C                     l1935 0F0A                     l1951 0146  
                   l1943 00E7                     l1871 07DF                     l1863 07C1  
                   l1855 0794                     l1847 0764                     l1839 0744  
                   l1791 0556                     l1783 0500                     l1775 04ED  
                   l1767 04D6                     l1759 04C6                     l1687 01C1  
                   l1679 01AA                     l1695 0EC8                     l1919 03AB  
                   l1599 00B3                     l1927 000E                     l1937 0F13  
                   l1961 014D                     l1953 0147                     l1945 00EE  
                   l1873 07E0                     l1865 07CB                     l1849 0769  
                   l1857 079A                     l1793 0582                     l1785 0510  
                   l1777 04F2                     l1769 04DB                     l1689 01C6  
                   l1697 0ECB                     l1881 0300                     l1929 0010  
                   l1939 0F21                     l1971 0154                     l1963 014E  
                   l1955 0148                     l1947 0119                     l1875 07EB  
                   l1867 07CD                     l1859 07A7                     l1795 059E  
                   l1787 051D                     l1779 04F7                     l1699 0ED2  
                   l1891 032D                     l1883 0304                     l1981 0DE7  
                   l1973 0DD6                     l1965 014F                     l1957 0149  
                   l1949 011B                     l1869 07DB                     l1797 05BA  
                   l1789 053A                     l1893 0332                     l1885 0314  
                   l1975 0DD7                     l1991 0E9D                     l1967 0150  
                   l1959 014A                     l1799 05C3                     l1895 033F  
                   l1887 0324                     l1879 02FB                     l1977 0DDF  
                   l1993 0EA3                     l1969 0151                     l1897 0346  
                   l1987 0E7E                     l1899 034A                     l1995 0D7C  
                   l1989 0E81                     l1997 0D88                     l1999 0D8D  
                   STR_1 0810                     STR_2 0821                     u2000 0F59  
                   u2001 0F58                     u2010 0F64                     u2011 0F63  
                   u2100 0190                     u2101 018F                     u2110 0197  
                   u2030 0F76                     u2111 0196                     u2031 0F75  
                   u2200 0EDA                     u2040 0F80                     u2201 0ED9  
                   u2041 0F7F                     u2025 0F68                     u2130 01A9  
                   u2131 01A8                     u2140 01B0                     u2220 0EEB  
                   u2300 0E79                     u2060 0F93                     u2141 01AF  
                   u2125 0199                     u2221 0EEA                     u2301 0E78  
                   u2061 0F92                     u2045 0F7C                     u2310 04A4  
                   u2070 0F98                     u2311 04A3                     u2215 0EDB  
                   u2071 0F97                     u2055 0F87                     u1520 01EC  
                   u1504 01DD                     u2320 04AA                     u2160 01C1  
                   u2080 0163                     u2240 0EFF                     u1521 01E8  
                   u2401 0564                     u2321 04A9                     u2161 01C0  
                   u2081 0162                     u2241 0EFE                     u2225 0EE7  
                   u1610 0222                     u2402 056B                     u2330 04AF  
                   u2170 01C6                     u2090 017A                     u2250 0E4A  
                   u1611 021E                     u1515 01E0                     u2411 0590  
                   u2403 0572                     u2331 04AE                     u2171 01C5  
                   u2155 01B3                     u2235 0EF3                     u2251 0E49  
                   u1700 0258                     u2500 06C9                     u2412 0597  
                   u2340 04D0                     u2180 0EC8                     u1701 0254  
                   u1605 0216                     u2421 05AC                     u2413 059E  
                   u2341 04CF                     u2181 0EC7                     u1550 01FE  
                   u1534 01EF                     u2422 05B3                     u2350 04D6  
                   u2270 0E5C                     u1551 01FA                     u2511 06D5  
                   u2423 05BA                     u2351 04D5                     u2095 0175  
                   u2271 0E5B                     u1640 0234                     u1624 0225  
                   u1720 0E2B                     u2600 075C                     u2520 06F1  
                   u2512 06DC                     u2360 04DB                     u2280 0E66  
                   u1800 0DAC                     u1641 0230                     u1545 01F2  
                   u1721 0E2A                     u2601 075B                     u2513 06E3  
                   u2505 06C4                     u2441 05E2                     u2361 04DA  
                   u2281 0E65                     u2265 0E4E                     u1801 0DAB  
                   u1714 025B                     u1490 01DA                     u2610 0763  
                   u2442 05E9                     u2370 04F2                     u1810 0DB9  
                   u1635 0228                     u1491 01D6                     u2611 0762  
                   u2531 06FD                     u2451 060F                     u2443 05F0  
                   u2435 05BC                     u2371 04F1                     u2195 0ECC  
                   u1811 0DB8                     u1580 0210                     u1564 0201  
                   u1820 002A                     u1740 0E3F                     u2620 0769  
                   u2532 0704                     u2452 0616                     u2380 04F7  
                   u2700 0324                     u1900 0090                     u1581 020C  
                   u1821 0029                     u1741 0E3E                     u2621 0768  
                   u2533 070B                     u2525 06EC                     u2453 061D  
                   u2381 04F6                     u2285 0E62                     u2701 0323  
                   u1901 008F                     u1670 0246                     u1654 0237  
                   u2630 077B                     u1910 00A1                     u1750 0D87  
                   u1671 0242                     u1575 0204                     u1735 0E32  
                   u2631 077A                     u2471 0645                     u2391 0548  
                   u2295 0E6D                     u1911 00A0                     u1751 0D86  
                   u1840 003E                     u2640 078A                     u2560 072F  
                   u2472 064C                     u2392 054F                     u1760 0DFE  
                   u2800 03A6                     u2720 0345                     u1665 023A  
                   u1841 003D                     u2561 072E                     u2545 070D  
                   u2481 0672                     u2473 0653                     u2465 061F  
                   u2393 0556                     u1761 0DFD                     u2801 03A5  
                   u2721 0344                     u1594 0213                     u2650 07A7  
                   u2482 0679                     u2810 03AA                     u1930 00B3  
                   u1835 002F                     u2651 07A6                     u2555 0724  
                   u2491 069F                     u2483 0680                     u2811 03A9  
                   u2715 0337                     u1931 00B2                     u1684 0249  
                   u1860 0059                     u2660 07C1                     u2580 0743  
                   u2492 06A6                     u2740 0367                     u2820 000C  
                   u1861 0058                     u2661 07C0                     u2645 0785  
                   u2581 0742                     u2493 06AD                     u2741 0366  
                   u1925 00A5                     u2821 000B                     u2830 00EE  
                   u2670 07DF                     u2590 0748                     u1790 0E18  
                   u1950 00C4                     u1695 024C                     u1855 0040  
                   u2831 00ED                     u2671 07DE                     u2655 07A3  
                   u2591 0747                     u2575 0732                     u1791 0E17  
                   u1775 0E05                     u2735 0359                     u1951 00C3  
                   u1880 0077                     u2840 00FC                     u2760 0377  
                   u2680 0300                     u1881 0076                     u1865 0055  
                   u2665 07BD                     u1785 0E0C                     u2761 0376  
                   u2681 02FF                     u1945 00B4                     u2850 0129  
                   u2770 037D                     u2690 0304                     u1970 00D8  
                   u1890 0085                     u2907 0F0E                     u1875 0069  
                   u2771 037C                     u2755 036C                     u2691 0303  
                   u1971 00D7                     u1955 00C0                     u1891 0084  
                   u2860 0E8B                     u2780 0381                     u1980 00DD  
                   u2917 0F1D                     u2845 00F7                     u2781 0380  
                   u1981 00DC                     u1965 00CC                     u2870 0EAD  
                   u2790 0396                     u1990 0F4E                     u2927 0F2B  
                   u2855 0124                     u1991 0F4D                     u2880 0EBF  
                   u2937 0DCC                     u2881 0EBE                     u2795 0391  
                   u2897 0DA0                     _main 03B4                     btemp 007E  
                   start 0000          LcdSetCursor@row 0078          __end_of_LcdInit 0F49  
        __end_of_LcdPort 025C        ___bmul@multiplier 0073     __end_of_LcdSetCursor 0DF8  
          ___fltol@sign1 0043                    ?_main 0070          __end_of___awdiv 00E7  
        __end_of___awmod 0FA2          __end_of___flmul 07F4          __end_of___fltol 01D2  
                  _ANSEL 0188          __end_of___lldiv 0080          ___awdiv@divisor 0070  
        __end_of___lwdiv 0F04          __end_of___lwmod 0E7E          ___awdiv@counter 0075  
                  _RCREG 001A                    _SPBRG 0099                    _PORTA 0005  
                  _TRISA 0085                    _TRISD 0088                    _TRISE 0089  
                  _TXREG 0019         __end_of_UARTInit 0156                    pclath 000A  
        __end_of_spiInit 001A          __end_of_spiRead 0D91                    status 0003  
                  wtemp0 007E     __end_of_LcdWriteChar 0DA6          __initialization 07F4  
           __end_of_main 0493        adcToString@digito 004D        adcToString@salida 0048  
                 ??_main 004F         ___awdiv@dividend 0072                   _ANSELH 0189  
              ??_LcdInit 0075                ??_LcdPort 0070                   _TRISC3 043B  
                 _TRISC5 043D                   _SSPCON 0014                   _SSPBUF 0013  
       __end_of___xxtofl 03B4                   _LcdCmd 0DBB                   ___bmul 0DA6  
                 ___wmul 0DF8                ??___awdiv 0074                ??___awmod 0074  
              ??___flmul 0028                ??___fltol 003E                ??___lldiv 0078  
              ??___lwdiv 0074                ??___lwmod 0074         ___awdiv@quotient 0077  
        ___awmod@divisor 0070          ___awmod@counter 0075       __size_of__Umul8_16 0027  
       __end_of_spiWrite 0D81                ??_spiInit 0073                ??_spiRead 0070  
           ___xxtofl@arg 007A             ___xxtofl@exp 0079             ___xxtofl@val 0070  
__end_of__initialization 07FC  __size_of_LcdWriteString 0042               ___fltol@f1 003A  
          _cadenaCounter 0054    __size_of_LcdSetCursor 0023      ___bmul@multiplicand 0070  
      LcdWriteChar@value 0073           __pcstackCOMMON 0070                ?_UARTInit 0020  
             _cadenaTemp 0053    __size_of_LcdWriteChar 0015             _LcdSetCursor 0DD5  
             __pbssBANK0 0052            ??_adcToString 0047                  ?_LcdCmd 0070  
      __end_of__Umul8_16 0E44               __pmaintext 03B4                  ?___bmul 0070  
                ?___wmul 0070               ??_UARTInit 0025  __size_of_spiReceiveWait 0007  
           _LcdWriteChar 0D91                ?___xxtofl 0070               _int2String 0FA2  
                _SSPSTAT 0094               __stringtab 0800          int2String@value 0025  
                _LcdInit 0F04                  _LcdPort 01D2          __size_of_LcdCmd 001A  
    __end_of_adcToString 02FA                ?_spiWrite 0070          __size_of___bmul 0015  
                ___awdiv 0080                  ___awmod 0F49                  ___flmul 0493  
                ___fltol 0156                  ___lldiv 001A          __size_of___wmul 0025  
                ___lwdiv 0EC0                  ___lwmod 0E44                  __ptext1 0D7B  
                __ptext2 0D88                  __ptext3 0D81                  __ptext4 0004  
                __ptext5 0FA2                  __ptext6 0DA6                  __ptext7 0F49  
                __ptext8 0080                  __ptext9 025C               ??___xxtofl 0074  
       ___awmod@dividend 0072                  _spiInit 0004                  _spiRead 0D88  
   end_of_initialization 07FC           _LcdWriteString 0E7E          ___lldiv@divisor 0070  
        ___lldiv@counter 007D                _RCSTAbits 0018               ??_spiWrite 0070  
            ?_int2String 0070            ___xxtofl@sign 0078                _TRISCbits 0087  
     LcdSetCursor@column 0075   __end_of_LcdWriteString 0EC0              spiWrite@dat 0070  
            ___flmul@grs 002E              _adcToString 025C                _TXSTAbits 0098  
         __end_of_LcdCmd 0DD5           _spiReceiveWait 0D81           __end_of___bmul 0DBB  
         __end_of___wmul 0E1D        __size_of_UARTInit 006F      start_initialization 07F4  
        ?_LcdWriteString 0074         adcToString@value 0045                 ??_LcdCmd 0072  
 __end_of_spiReceiveWait 0D88      __size_of_int2String 005E                 ??___bmul 0071  
               ??___wmul 0074                __Umul8_16 0E1D                ___flmul@a 0024  
              ___flmul@b 0020                ___latbits 0002            __pcstackBANK0 0020  
      __size_of___xxtofl 00BA                _cadenaADC 0056                 ?_LcdInit 0070  
               ?_LcdPort 0070         ___lwdiv@dividend 0072          ?_spiReceiveWait 0070  
               ?___awdiv 0070                 ?___awmod 0070                 ?___flmul 0020  
               ?___fltol 003A                 ?___lldiv 0070               ?__Umul8_16 0070  
               ?___lwdiv 0070                 ?___lwmod 0070        __size_of_spiWrite 0006  
              __pstrings 0800                 ?_spiInit 0070                 ?_spiRead 0070  
       ___lwdiv@quotient 0075     spiInit@sTransmitEdge 0072           ___wmul@product 0074  
     spiInit@sDataSample 0070                 _PIR1bits 000C                _valorTemp 0052  
               _UARTInit 00E7         int2String@cadena 0020         int2String@digito 0024  
            __stringbase 080F        ___wmul@multiplier 0070             ??_int2String 0079  
           ?_adcToString 0045         __size_of_LcdInit 0045         __size_of_LcdPort 008A  
           LcdPort@value 0071             UARTInit@BRGH 0024       __end_of_int2String 1000  
            LcdCmd@value 0074              ??__Umul8_16 0072         __size_of___awdiv 0067  
       __size_of___awmod 0059         __size_of___flmul 0361         __size_of___fltol 007C  
       __size_of___lldiv 0066         __size_of___lwdiv 0044         __size_of___lwmod 003A  
     __end_of__stringtab 0810         ??_LcdWriteString 0076                 ___xxtofl 02FA  
        ___lwdiv@divisor 0070          ___lwdiv@counter 0077                 __ptext10 02FA  
               __ptext11 0DF8                 __ptext20 0D91                 __ptext12 0E44  
               __ptext21 0DD5                 __ptext13 0EC0                 __ptext22 0F04  
               __ptext14 0156                 __ptext23 0DBB                 __ptext15 0493  
               __ptext24 01D2                 __ptext16 0E1D                 __ptext17 00E7  
               __ptext18 001A                 __ptext19 0E7E         __size_of_spiInit 0016  
       __size_of_spiRead 0009            ?_LcdSetCursor 0075            __size_of_main 00DF  
               _valueADC 0057                 _spiWrite 0D7B          LcdWriteString@i 0079  
           spiInit@sType 0073             _valueCounter 0055        spiInit@sClockIdle 0071  
          ?_LcdWriteChar 0070           ??_LcdSetCursor 0076         ___lwmod@dividend 0072  
       ___lldiv@dividend 0074         ??_spiReceiveWait 0070                stringcode 080A  
         ??_LcdWriteChar 0072   __Umul8_16@multiplicand 0070         ___lldiv@quotient 0079  
        ___lwmod@divisor 0070          ___lwmod@counter 0075                 stringdir 080A  
               stringtab 0800      LcdWriteString@value 0074     __Umul8_16@multiplier 0078  
   __size_of_adcToString 009E        __Umul8_16@product 0074  
