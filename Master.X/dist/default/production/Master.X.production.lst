

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Mon Feb 15 16:42:34 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2
    15                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    16                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    17                           	psect	text8,local,class=CODE,merge=1,delta=2,group=1
    18                           	psect	text9,local,class=CODE,merge=1,delta=2
    19                           	psect	text10,local,class=CODE,merge=1,delta=2,group=1
    20                           	psect	text11,local,class=CODE,merge=1,delta=2,group=1
    21                           	psect	text12,local,class=CODE,merge=1,delta=2,group=1
    22                           	psect	text13,local,class=CODE,merge=1,delta=2,group=1
    23                           	psect	text14,local,class=CODE,merge=1,delta=2,group=1
    24                           	psect	text15,local,class=CODE,merge=1,delta=2,group=1
    25                           	psect	text16,local,class=CODE,merge=1,delta=2,group=1
    26                           	psect	text17,local,class=CODE,merge=1,delta=2
    27                           	psect	text18,local,class=CODE,merge=1,delta=2,group=1
    28                           	psect	text19,local,class=CODE,merge=1,delta=2
    29                           	psect	text20,local,class=CODE,merge=1,delta=2
    30                           	psect	text21,local,class=CODE,merge=1,delta=2
    31                           	psect	text22,local,class=CODE,merge=1,delta=2
    32                           	psect	text23,local,class=CODE,merge=1,delta=2
    33                           	psect	text24,local,class=CODE,merge=1,delta=2
    34                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    35                           	dabs	1,0x7E,2
    36  0000                     
    37                           ; Version 2.20
    38                           ; Generated 12/02/2020 GMT
    39                           ; 
    40                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    41                           ; All rights reserved.
    42                           ; 
    43                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    44                           ; 
    45                           ; Redistribution and use in source and binary forms, with or without modification, are
    46                           ; permitted provided that the following conditions are met:
    47                           ; 
    48                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    49                           ;        conditions and the following disclaimer.
    50                           ; 
    51                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    52                           ;        of conditions and the following disclaimer in the documentation and/or other
    53                           ;        materials provided with the distribution.
    54                           ; 
    55                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    56                           ;        software without specific prior written permission.
    57                           ; 
    58                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    59                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    60                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    61                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    62                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    63                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    64                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    65                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    66                           ; 
    67                           ; 
    68                           ; Code-generator required, PIC16F887 Definitions
    69                           ; 
    70                           ; SFR Addresses
    71  0000                     	;# 
    72  0001                     	;# 
    73  0002                     	;# 
    74  0003                     	;# 
    75  0004                     	;# 
    76  0005                     	;# 
    77  0006                     	;# 
    78  0007                     	;# 
    79  0008                     	;# 
    80  0009                     	;# 
    81  000A                     	;# 
    82  000B                     	;# 
    83  000C                     	;# 
    84  000D                     	;# 
    85  000E                     	;# 
    86  000E                     	;# 
    87  000F                     	;# 
    88  0010                     	;# 
    89  0011                     	;# 
    90  0012                     	;# 
    91  0013                     	;# 
    92  0014                     	;# 
    93  0015                     	;# 
    94  0015                     	;# 
    95  0016                     	;# 
    96  0017                     	;# 
    97  0018                     	;# 
    98  0019                     	;# 
    99  001A                     	;# 
   100  001B                     	;# 
   101  001B                     	;# 
   102  001C                     	;# 
   103  001D                     	;# 
   104  001E                     	;# 
   105  001F                     	;# 
   106  0081                     	;# 
   107  0085                     	;# 
   108  0086                     	;# 
   109  0087                     	;# 
   110  0088                     	;# 
   111  0089                     	;# 
   112  008C                     	;# 
   113  008D                     	;# 
   114  008E                     	;# 
   115  008F                     	;# 
   116  0090                     	;# 
   117  0091                     	;# 
   118  0092                     	;# 
   119  0093                     	;# 
   120  0093                     	;# 
   121  0093                     	;# 
   122  0094                     	;# 
   123  0095                     	;# 
   124  0096                     	;# 
   125  0097                     	;# 
   126  0098                     	;# 
   127  0099                     	;# 
   128  009A                     	;# 
   129  009B                     	;# 
   130  009C                     	;# 
   131  009D                     	;# 
   132  009E                     	;# 
   133  009F                     	;# 
   134  0105                     	;# 
   135  0107                     	;# 
   136  0108                     	;# 
   137  0109                     	;# 
   138  010C                     	;# 
   139  010C                     	;# 
   140  010D                     	;# 
   141  010E                     	;# 
   142  010F                     	;# 
   143  0185                     	;# 
   144  0187                     	;# 
   145  0188                     	;# 
   146  0189                     	;# 
   147  018C                     	;# 
   148  018D                     	;# 
   149  0000                     	;# 
   150  0001                     	;# 
   151  0002                     	;# 
   152  0003                     	;# 
   153  0004                     	;# 
   154  0005                     	;# 
   155  0006                     	;# 
   156  0007                     	;# 
   157  0008                     	;# 
   158  0009                     	;# 
   159  000A                     	;# 
   160  000B                     	;# 
   161  000C                     	;# 
   162  000D                     	;# 
   163  000E                     	;# 
   164  000E                     	;# 
   165  000F                     	;# 
   166  0010                     	;# 
   167  0011                     	;# 
   168  0012                     	;# 
   169  0013                     	;# 
   170  0014                     	;# 
   171  0015                     	;# 
   172  0015                     	;# 
   173  0016                     	;# 
   174  0017                     	;# 
   175  0018                     	;# 
   176  0019                     	;# 
   177  001A                     	;# 
   178  001B                     	;# 
   179  001B                     	;# 
   180  001C                     	;# 
   181  001D                     	;# 
   182  001E                     	;# 
   183  001F                     	;# 
   184  0081                     	;# 
   185  0085                     	;# 
   186  0086                     	;# 
   187  0087                     	;# 
   188  0088                     	;# 
   189  0089                     	;# 
   190  008C                     	;# 
   191  008D                     	;# 
   192  008E                     	;# 
   193  008F                     	;# 
   194  0090                     	;# 
   195  0091                     	;# 
   196  0092                     	;# 
   197  0093                     	;# 
   198  0093                     	;# 
   199  0093                     	;# 
   200  0094                     	;# 
   201  0095                     	;# 
   202  0096                     	;# 
   203  0097                     	;# 
   204  0098                     	;# 
   205  0099                     	;# 
   206  009A                     	;# 
   207  009B                     	;# 
   208  009C                     	;# 
   209  009D                     	;# 
   210  009E                     	;# 
   211  009F                     	;# 
   212  0105                     	;# 
   213  0107                     	;# 
   214  0108                     	;# 
   215  0109                     	;# 
   216  010C                     	;# 
   217  010C                     	;# 
   218  010D                     	;# 
   219  010E                     	;# 
   220  010F                     	;# 
   221  0185                     	;# 
   222  0187                     	;# 
   223  0188                     	;# 
   224  0189                     	;# 
   225  018C                     	;# 
   226  018D                     	;# 
   227  0000                     	;# 
   228  0001                     	;# 
   229  0002                     	;# 
   230  0003                     	;# 
   231  0004                     	;# 
   232  0005                     	;# 
   233  0006                     	;# 
   234  0007                     	;# 
   235  0008                     	;# 
   236  0009                     	;# 
   237  000A                     	;# 
   238  000B                     	;# 
   239  000C                     	;# 
   240  000D                     	;# 
   241  000E                     	;# 
   242  000E                     	;# 
   243  000F                     	;# 
   244  0010                     	;# 
   245  0011                     	;# 
   246  0012                     	;# 
   247  0013                     	;# 
   248  0014                     	;# 
   249  0015                     	;# 
   250  0015                     	;# 
   251  0016                     	;# 
   252  0017                     	;# 
   253  0018                     	;# 
   254  0019                     	;# 
   255  001A                     	;# 
   256  001B                     	;# 
   257  001B                     	;# 
   258  001C                     	;# 
   259  001D                     	;# 
   260  001E                     	;# 
   261  001F                     	;# 
   262  0081                     	;# 
   263  0085                     	;# 
   264  0086                     	;# 
   265  0087                     	;# 
   266  0088                     	;# 
   267  0089                     	;# 
   268  008C                     	;# 
   269  008D                     	;# 
   270  008E                     	;# 
   271  008F                     	;# 
   272  0090                     	;# 
   273  0091                     	;# 
   274  0092                     	;# 
   275  0093                     	;# 
   276  0093                     	;# 
   277  0093                     	;# 
   278  0094                     	;# 
   279  0095                     	;# 
   280  0096                     	;# 
   281  0097                     	;# 
   282  0098                     	;# 
   283  0099                     	;# 
   284  009A                     	;# 
   285  009B                     	;# 
   286  009C                     	;# 
   287  009D                     	;# 
   288  009E                     	;# 
   289  009F                     	;# 
   290  0105                     	;# 
   291  0107                     	;# 
   292  0108                     	;# 
   293  0109                     	;# 
   294  010C                     	;# 
   295  010C                     	;# 
   296  010D                     	;# 
   297  010E                     	;# 
   298  010F                     	;# 
   299  0185                     	;# 
   300  0187                     	;# 
   301  0188                     	;# 
   302  0189                     	;# 
   303  018C                     	;# 
   304  018D                     	;# 
   305  0000                     	;# 
   306  0001                     	;# 
   307  0002                     	;# 
   308  0003                     	;# 
   309  0004                     	;# 
   310  0005                     	;# 
   311  0006                     	;# 
   312  0007                     	;# 
   313  0008                     	;# 
   314  0009                     	;# 
   315  000A                     	;# 
   316  000B                     	;# 
   317  000C                     	;# 
   318  000D                     	;# 
   319  000E                     	;# 
   320  000E                     	;# 
   321  000F                     	;# 
   322  0010                     	;# 
   323  0011                     	;# 
   324  0012                     	;# 
   325  0013                     	;# 
   326  0014                     	;# 
   327  0015                     	;# 
   328  0015                     	;# 
   329  0016                     	;# 
   330  0017                     	;# 
   331  0018                     	;# 
   332  0019                     	;# 
   333  001A                     	;# 
   334  001B                     	;# 
   335  001B                     	;# 
   336  001C                     	;# 
   337  001D                     	;# 
   338  001E                     	;# 
   339  001F                     	;# 
   340  0081                     	;# 
   341  0085                     	;# 
   342  0086                     	;# 
   343  0087                     	;# 
   344  0088                     	;# 
   345  0089                     	;# 
   346  008C                     	;# 
   347  008D                     	;# 
   348  008E                     	;# 
   349  008F                     	;# 
   350  0090                     	;# 
   351  0091                     	;# 
   352  0092                     	;# 
   353  0093                     	;# 
   354  0093                     	;# 
   355  0093                     	;# 
   356  0094                     	;# 
   357  0095                     	;# 
   358  0096                     	;# 
   359  0097                     	;# 
   360  0098                     	;# 
   361  0099                     	;# 
   362  009A                     	;# 
   363  009B                     	;# 
   364  009C                     	;# 
   365  009D                     	;# 
   366  009E                     	;# 
   367  009F                     	;# 
   368  0105                     	;# 
   369  0107                     	;# 
   370  0108                     	;# 
   371  0109                     	;# 
   372  010C                     	;# 
   373  010C                     	;# 
   374  010D                     	;# 
   375  010E                     	;# 
   376  010F                     	;# 
   377  0185                     	;# 
   378  0187                     	;# 
   379  0188                     	;# 
   380  0189                     	;# 
   381  018C                     	;# 
   382  018D                     	;# 
   383  0000                     	;# 
   384  0001                     	;# 
   385  0002                     	;# 
   386  0003                     	;# 
   387  0004                     	;# 
   388  0005                     	;# 
   389  0006                     	;# 
   390  0007                     	;# 
   391  0008                     	;# 
   392  0009                     	;# 
   393  000A                     	;# 
   394  000B                     	;# 
   395  000C                     	;# 
   396  000D                     	;# 
   397  000E                     	;# 
   398  000E                     	;# 
   399  000F                     	;# 
   400  0010                     	;# 
   401  0011                     	;# 
   402  0012                     	;# 
   403  0013                     	;# 
   404  0014                     	;# 
   405  0015                     	;# 
   406  0015                     	;# 
   407  0016                     	;# 
   408  0017                     	;# 
   409  0018                     	;# 
   410  0019                     	;# 
   411  001A                     	;# 
   412  001B                     	;# 
   413  001B                     	;# 
   414  001C                     	;# 
   415  001D                     	;# 
   416  001E                     	;# 
   417  001F                     	;# 
   418  0081                     	;# 
   419  0085                     	;# 
   420  0086                     	;# 
   421  0087                     	;# 
   422  0088                     	;# 
   423  0089                     	;# 
   424  008C                     	;# 
   425  008D                     	;# 
   426  008E                     	;# 
   427  008F                     	;# 
   428  0090                     	;# 
   429  0091                     	;# 
   430  0092                     	;# 
   431  0093                     	;# 
   432  0093                     	;# 
   433  0093                     	;# 
   434  0094                     	;# 
   435  0095                     	;# 
   436  0096                     	;# 
   437  0097                     	;# 
   438  0098                     	;# 
   439  0099                     	;# 
   440  009A                     	;# 
   441  009B                     	;# 
   442  009C                     	;# 
   443  009D                     	;# 
   444  009E                     	;# 
   445  009F                     	;# 
   446  0105                     	;# 
   447  0107                     	;# 
   448  0108                     	;# 
   449  0109                     	;# 
   450  010C                     	;# 
   451  010C                     	;# 
   452  010D                     	;# 
   453  010E                     	;# 
   454  010F                     	;# 
   455  0185                     	;# 
   456  0187                     	;# 
   457  0188                     	;# 
   458  0189                     	;# 
   459  018C                     	;# 
   460  018D                     	;# 
   461  0013                     _SSPBUF	set	19
   462  0014                     _SSPCON	set	20
   463  001A                     _RCREG	set	26
   464  000C                     _PIR1bits	set	12
   465  0019                     _TXREG	set	25
   466  0018                     _RCSTAbits	set	24
   467  0005                     _PORTA	set	5
   468  0048                     _RE0	set	72
   469  0049                     _RE1	set	73
   470  0047                     _RD7	set	71
   471  0046                     _RD6	set	70
   472  0045                     _RD5	set	69
   473  0044                     _RD4	set	68
   474  0043                     _RD3	set	67
   475  0042                     _RD2	set	66
   476  0041                     _RD1	set	65
   477  0040                     _RD0	set	64
   478  0094                     _SSPSTATbits	set	148
   479  0094                     _SSPSTAT	set	148
   480  0087                     _TRISCbits	set	135
   481  0098                     _TXSTAbits	set	152
   482  0099                     _SPBRG	set	153
   483  0085                     _TRISA	set	133
   484  0089                     _TRISE	set	137
   485  0088                     _TRISD	set	136
   486  043B                     _TRISC3	set	1083
   487  043D                     _TRISC5	set	1085
   488  0189                     _ANSELH	set	393
   489  0188                     _ANSEL	set	392
   490                           
   491                           	psect	strings
   492  0800                     __pstrings:
   493  0800                     stringtab:
   494  0800                     __stringtab:
   495                           
   496                           ;	String table - string pointers are 1 byte each
   497  0800  1BFF               	btfsc	btemp+1,7
   498  0801  280A               	ljmp	stringcode
   499  0802  1383               	bcf	3,7
   500  0803  187F               	btfsc	btemp+1,0
   501  0804  1783               	bsf	3,7
   502  0805  0800               	movf	0,w
   503  0806  0A84               	incf	4,f
   504  0807  1903               	skipnz
   505  0808  0AFF               	incf	btemp+1,f
   506  0809  0008               	return
   507  080A                     stringcode:
   508  080A                     stringdir:
   509  080A  3008               	movlw	high stringdir
   510  080B  008A               	movwf	10
   511  080C  0804               	movf	4,w
   512  080D  0A84               	incf	4,f
   513  080E  0782               	addwf	2,f
   514  080F                     __stringbase:
   515  080F  3400               	retlw	0
   516  0810                     __end_of__stringtab:
   517  0810                     STR_1:
   518  0810  3441               	retlw	65	;'A'
   519  0811  3444               	retlw	68	;'D'
   520  0812  3443               	retlw	67	;'C'
   521  0813  343A               	retlw	58	;':'
   522  0814  3420               	retlw	32	;' '
   523  0815  3443               	retlw	67	;'C'
   524  0816  344F               	retlw	79	;'O'
   525  0817  344E               	retlw	78	;'N'
   526  0818  3454               	retlw	84	;'T'
   527  0819  343A               	retlw	58	;':'
   528  081A  3420               	retlw	32	;' '
   529  081B  3454               	retlw	84	;'T'
   530  081C  3445               	retlw	69	;'E'
   531  081D  344D               	retlw	77	;'M'
   532  081E  3450               	retlw	80	;'P'
   533  081F  343A               	retlw	58	;':'
   534  0820  3400               	retlw	0
   535  0821                     STR_2:
   536  0821  3456               	retlw	86	;'V'
   537  0822  3420               	retlw	32	;' '
   538  0823  3400               	retlw	0
   539                           
   540                           	psect	cinit
   541  07F6                     start_initialization:	
   542                           ; #config settings
   543                           
   544  07F6                     __initialization:
   545                           
   546                           ; Clear objects allocated to BANK0
   547  07F6  1283               	bcf	3,5	;RP0=0, select bank0
   548  07F7  1303               	bcf	3,6	;RP1=0, select bank0
   549  07F8  01D2               	clrf	__pbssBANK0& (0+127)
   550  07F9  01D3               	clrf	(__pbssBANK0+1)& (0+127)
   551  07FA  01D4               	clrf	(__pbssBANK0+2)& (0+127)
   552  07FB  01D5               	clrf	(__pbssBANK0+3)& (0+127)
   553  07FC                     end_of_initialization:	
   554                           ;End of C runtime variable initialization code
   555                           
   556  07FC                     __end_of__initialization:
   557  07FC  0183               	clrf	3
   558  07FD  120A  118A  2B37   	ljmp	_main	;jump to C main() function
   559                           
   560                           	psect	bssBANK0
   561  0052                     __pbssBANK0:
   562  0052                     _cadenaCounter:
   563  0052                     	ds	1
   564  0053                     _valueCounter:
   565  0053                     	ds	1
   566  0054                     _cadenaADC:
   567  0054                     	ds	1
   568  0055                     _valueADC:
   569  0055                     	ds	1
   570                           
   571                           	psect	cstackCOMMON
   572  0070                     __pcstackCOMMON:
   573  0070                     ?_spiInit:
   574  0070                     ?_LcdInit:	
   575                           ; 1 bytes @ 0x0
   576                           
   577  0070                     ?_spiWrite:	
   578                           ; 1 bytes @ 0x0
   579                           
   580  0070                     ??_spiWrite:	
   581                           ; 1 bytes @ 0x0
   582                           
   583  0070                     ?_spiRead:	
   584                           ; 1 bytes @ 0x0
   585                           
   586  0070                     ??_spiRead:	
   587                           ; 1 bytes @ 0x0
   588                           
   589  0070                     ?_int2String:	
   590                           ; 1 bytes @ 0x0
   591                           
   592  0070                     ?_LcdPort:	
   593                           ; 1 bytes @ 0x0
   594                           
   595  0070                     ??_LcdPort:	
   596                           ; 1 bytes @ 0x0
   597                           
   598  0070                     ?_LcdCmd:	
   599                           ; 1 bytes @ 0x0
   600                           
   601  0070                     ?_LcdWriteChar:	
   602                           ; 1 bytes @ 0x0
   603                           
   604  0070                     ?_spiReceiveWait:	
   605                           ; 1 bytes @ 0x0
   606                           
   607  0070                     ??_spiReceiveWait:	
   608                           ; 1 bytes @ 0x0
   609                           
   610  0070                     ?___bmul:	
   611                           ; 1 bytes @ 0x0
   612                           
   613  0070                     ?__Umul8_16:	
   614                           ; 1 bytes @ 0x0
   615                           
   616  0070                     ?_main:	
   617                           ; 2 bytes @ 0x0
   618                           
   619  0070                     ?___wmul:	
   620                           ; 2 bytes @ 0x0
   621                           
   622  0070                     ?___awdiv:	
   623                           ; 2 bytes @ 0x0
   624                           
   625  0070                     ?___awmod:	
   626                           ; 2 bytes @ 0x0
   627                           
   628  0070                     ?___lwdiv:	
   629                           ; 2 bytes @ 0x0
   630                           
   631  0070                     ?___lwmod:	
   632                           ; 2 bytes @ 0x0
   633                           
   634  0070                     ?___lldiv:	
   635                           ; 2 bytes @ 0x0
   636                           
   637  0070                     ?___xxtofl:	
   638                           ; 4 bytes @ 0x0
   639                           
   640  0070                     spiInit@sDataSample:	
   641                           ; 4 bytes @ 0x0
   642                           
   643  0070                     spiWrite@dat:	
   644                           ; 1 bytes @ 0x0
   645                           
   646  0070                     ___bmul@multiplicand:	
   647                           ; 1 bytes @ 0x0
   648                           
   649  0070                     __Umul8_16@multiplicand:	
   650                           ; 1 bytes @ 0x0
   651                           
   652  0070                     ___wmul@multiplier:	
   653                           ; 1 bytes @ 0x0
   654                           
   655  0070                     ___awdiv@divisor:	
   656                           ; 2 bytes @ 0x0
   657                           
   658  0070                     ___awmod@divisor:	
   659                           ; 2 bytes @ 0x0
   660                           
   661  0070                     ___lwdiv@divisor:	
   662                           ; 2 bytes @ 0x0
   663                           
   664  0070                     ___lwmod@divisor:	
   665                           ; 2 bytes @ 0x0
   666                           
   667  0070                     ___lldiv@divisor:	
   668                           ; 2 bytes @ 0x0
   669                           
   670  0070                     ___xxtofl@val:	
   671                           ; 4 bytes @ 0x0
   672                           
   673                           
   674                           ; 4 bytes @ 0x0
   675  0070                     	ds	1
   676  0071                     ??___bmul:
   677  0071                     LcdPort@value:	
   678                           ; 1 bytes @ 0x1
   679                           
   680  0071                     spiInit@sClockIdle:	
   681                           ; 1 bytes @ 0x1
   682                           
   683                           
   684                           ; 1 bytes @ 0x1
   685  0071                     	ds	1
   686  0072                     ??__Umul8_16:
   687  0072                     ??_LcdCmd:	
   688                           ; 1 bytes @ 0x2
   689                           
   690  0072                     ??_LcdWriteChar:	
   691                           ; 1 bytes @ 0x2
   692                           
   693  0072                     spiInit@sTransmitEdge:	
   694                           ; 1 bytes @ 0x2
   695                           
   696  0072                     ___bmul@product:	
   697                           ; 1 bytes @ 0x2
   698                           
   699  0072                     ___wmul@multiplicand:	
   700                           ; 1 bytes @ 0x2
   701                           
   702  0072                     ___awdiv@dividend:	
   703                           ; 2 bytes @ 0x2
   704                           
   705  0072                     ___awmod@dividend:	
   706                           ; 2 bytes @ 0x2
   707                           
   708  0072                     ___lwdiv@dividend:	
   709                           ; 2 bytes @ 0x2
   710                           
   711  0072                     ___lwmod@dividend:	
   712                           ; 2 bytes @ 0x2
   713                           
   714                           
   715                           ; 2 bytes @ 0x2
   716  0072                     	ds	1
   717  0073                     ??_spiInit:
   718  0073                     LcdWriteChar@value:	
   719                           ; 1 bytes @ 0x3
   720                           
   721  0073                     spiInit@sType:	
   722                           ; 1 bytes @ 0x3
   723                           
   724  0073                     ___bmul@multiplier:	
   725                           ; 1 bytes @ 0x3
   726                           
   727                           
   728                           ; 1 bytes @ 0x3
   729  0073                     	ds	1
   730  0074                     ?_LcdWriteString:
   731  0074                     ??___wmul:	
   732                           ; 1 bytes @ 0x4
   733                           
   734  0074                     ??___awdiv:	
   735                           ; 1 bytes @ 0x4
   736                           
   737  0074                     ??___awmod:	
   738                           ; 1 bytes @ 0x4
   739                           
   740  0074                     ??___lwdiv:	
   741                           ; 1 bytes @ 0x4
   742                           
   743  0074                     ??___lwmod:	
   744                           ; 1 bytes @ 0x4
   745                           
   746  0074                     ??___xxtofl:	
   747                           ; 1 bytes @ 0x4
   748                           
   749  0074                     LcdCmd@value:	
   750                           ; 1 bytes @ 0x4
   751                           
   752  0074                     LcdWriteString@value:	
   753                           ; 1 bytes @ 0x4
   754                           
   755  0074                     ___wmul@product:	
   756                           ; 2 bytes @ 0x4
   757                           
   758  0074                     __Umul8_16@product:	
   759                           ; 2 bytes @ 0x4
   760                           
   761  0074                     ___lldiv@dividend:	
   762                           ; 2 bytes @ 0x4
   763                           
   764                           
   765                           ; 4 bytes @ 0x4
   766  0074                     	ds	1
   767  0075                     ??_LcdInit:
   768  0075                     ?_LcdSetCursor:	
   769                           ; 1 bytes @ 0x5
   770                           
   771  0075                     LcdSetCursor@column:	
   772                           ; 1 bytes @ 0x5
   773                           
   774  0075                     ___awdiv@counter:	
   775                           ; 1 bytes @ 0x5
   776                           
   777  0075                     ___awmod@counter:	
   778                           ; 1 bytes @ 0x5
   779                           
   780  0075                     ___lwmod@counter:	
   781                           ; 1 bytes @ 0x5
   782                           
   783  0075                     ___lwdiv@quotient:	
   784                           ; 1 bytes @ 0x5
   785                           
   786                           
   787                           ; 2 bytes @ 0x5
   788  0075                     	ds	1
   789  0076                     ??_LcdSetCursor:
   790  0076                     ??_LcdWriteString:	
   791                           ; 1 bytes @ 0x6
   792                           
   793  0076                     ___awdiv@sign:	
   794                           ; 1 bytes @ 0x6
   795                           
   796  0076                     ___awmod@sign:	
   797                           ; 1 bytes @ 0x6
   798                           
   799  0076                     __Umul8_16@word_mpld:	
   800                           ; 1 bytes @ 0x6
   801                           
   802                           
   803                           ; 2 bytes @ 0x6
   804  0076                     	ds	1
   805  0077                     ___lwdiv@counter:
   806  0077                     ___awdiv@quotient:	
   807                           ; 1 bytes @ 0x7
   808                           
   809                           
   810                           ; 2 bytes @ 0x7
   811  0077                     	ds	1
   812  0078                     ??___lldiv:
   813  0078                     LcdSetCursor@row:	
   814                           ; 1 bytes @ 0x8
   815                           
   816  0078                     __Umul8_16@multiplier:	
   817                           ; 1 bytes @ 0x8
   818                           
   819  0078                     ___xxtofl@sign:	
   820                           ; 1 bytes @ 0x8
   821                           
   822                           
   823                           ; 1 bytes @ 0x8
   824  0078                     	ds	1
   825  0079                     ??_int2String:
   826  0079                     ___xxtofl@exp:	
   827                           ; 1 bytes @ 0x9
   828                           
   829  0079                     LcdWriteString@i:	
   830                           ; 1 bytes @ 0x9
   831                           
   832  0079                     ___lldiv@quotient:	
   833                           ; 2 bytes @ 0x9
   834                           
   835                           
   836                           ; 4 bytes @ 0x9
   837  0079                     	ds	1
   838  007A                     ___xxtofl@arg:
   839                           
   840                           ; 4 bytes @ 0xA
   841  007A                     	ds	3
   842  007D                     ___lldiv@counter:
   843                           
   844                           ; 1 bytes @ 0xD
   845  007D                     	ds	1
   846                           
   847                           	psect	cstackBANK0
   848  0020                     __pcstackBANK0:
   849  0020                     ?_UARTInit:
   850  0020                     ?___flmul:	
   851                           ; 1 bytes @ 0x0
   852                           
   853  0020                     int2String@cadena:	
   854                           ; 4 bytes @ 0x0
   855                           
   856  0020                     UARTInit@baud_rate:	
   857                           ; 4 bytes @ 0x0
   858                           
   859  0020                     ___flmul@b:	
   860                           ; 4 bytes @ 0x0
   861                           
   862                           
   863                           ; 4 bytes @ 0x0
   864  0020                     	ds	4
   865  0024                     int2String@digito:
   866  0024                     UARTInit@BRGH:	
   867                           ; 1 bytes @ 0x4
   868                           
   869  0024                     ___flmul@a:	
   870                           ; 1 bytes @ 0x4
   871                           
   872                           
   873                           ; 4 bytes @ 0x4
   874  0024                     	ds	1
   875  0025                     ??_UARTInit:
   876  0025                     int2String@value:	
   877                           ; 1 bytes @ 0x5
   878                           
   879                           
   880                           ; 1 bytes @ 0x5
   881  0025                     	ds	3
   882  0028                     ??___flmul:
   883                           
   884                           ; 1 bytes @ 0x8
   885  0028                     	ds	5
   886  002D                     ___flmul@sign:
   887                           
   888                           ; 1 bytes @ 0xD
   889  002D                     	ds	1
   890  002E                     ___flmul@grs:
   891                           
   892                           ; 4 bytes @ 0xE
   893  002E                     	ds	4
   894  0032                     ___flmul@aexp:
   895                           
   896                           ; 1 bytes @ 0x12
   897  0032                     	ds	1
   898  0033                     ___flmul@bexp:
   899                           
   900                           ; 1 bytes @ 0x13
   901  0033                     	ds	1
   902  0034                     ___flmul@prod:
   903                           
   904                           ; 4 bytes @ 0x14
   905  0034                     	ds	4
   906  0038                     ___flmul@temp:
   907                           
   908                           ; 2 bytes @ 0x18
   909  0038                     	ds	2
   910  003A                     ?___fltol:
   911  003A                     ___fltol@f1:	
   912                           ; 4 bytes @ 0x1A
   913                           
   914                           
   915                           ; 4 bytes @ 0x1A
   916  003A                     	ds	4
   917  003E                     ??___fltol:
   918                           
   919                           ; 1 bytes @ 0x1E
   920  003E                     	ds	5
   921  0043                     ___fltol@sign1:
   922                           
   923                           ; 1 bytes @ 0x23
   924  0043                     	ds	1
   925  0044                     ___fltol@exp1:
   926                           
   927                           ; 1 bytes @ 0x24
   928  0044                     	ds	1
   929  0045                     ?_adcToString:
   930  0045                     adcToString@value:	
   931                           ; 1 bytes @ 0x25
   932                           
   933                           
   934                           ; 2 bytes @ 0x25
   935  0045                     	ds	2
   936  0047                     ??_adcToString:
   937                           
   938                           ; 1 bytes @ 0x27
   939  0047                     	ds	1
   940  0048                     adcToString@salida:
   941                           
   942                           ; 5 bytes @ 0x28
   943  0048                     	ds	5
   944  004D                     adcToString@digito:
   945                           
   946                           ; 2 bytes @ 0x2D
   947  004D                     	ds	2
   948  004F                     ??_main:
   949                           
   950                           ; 1 bytes @ 0x2F
   951  004F                     	ds	3
   952                           
   953                           	psect	maintext
   954  0337                     __pmaintext:	
   955 ;;
   956 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   957 ;;
   958 ;; *************** function _main *****************
   959 ;; Defined at:
   960 ;;		line 53 in file "main.c"
   961 ;; Parameters:    Size  Location     Type
   962 ;;		None
   963 ;; Auto vars:     Size  Location     Type
   964 ;;		None
   965 ;; Return value:  Size  Location     Type
   966 ;;                  2   42[None  ] int 
   967 ;; Registers used:
   968 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   969 ;; Tracked objects:
   970 ;;		On entry : B00/0
   971 ;;		On exit  : 0/0
   972 ;;		Unchanged: 0/0
   973 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   974 ;;      Params:         0       0       0       0       0
   975 ;;      Locals:         0       0       0       0       0
   976 ;;      Temps:          0       3       0       0       0
   977 ;;      Totals:         0       3       0       0       0
   978 ;;Total ram usage:        3 bytes
   979 ;; Hardware stack levels required when called:    3
   980 ;; This function calls:
   981 ;;		_LcdInit
   982 ;;		_LcdSetCursor
   983 ;;		_LcdWriteString
   984 ;;		_UARTInit
   985 ;;		_adcToString
   986 ;;		_int2String
   987 ;;		_spiInit
   988 ;;		_spiRead
   989 ;;		_spiWrite
   990 ;; This function is called by:
   991 ;;		Startup code after reset
   992 ;; This function uses a non-reentrant model
   993 ;;
   994                           
   995                           
   996                           ;psect for function _main
   997  0337                     _main:
   998  0337                     l2019:	
   999                           ;incstack = 0
  1000                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1001                           
  1002                           
  1003                           ;main.c: 55:   ANSEL = 0;
  1004  0337  1683               	bsf	3,5	;RP0=1, select bank3
  1005  0338  1703               	bsf	3,6	;RP1=1, select bank3
  1006  0339  0188               	clrf	8	;volatile
  1007                           
  1008                           ;main.c: 56:   ANSELH = 0;
  1009  033A  0189               	clrf	9	;volatile
  1010                           
  1011                           ;main.c: 58:   TRISD = 0;
  1012  033B  1683               	bsf	3,5	;RP0=1, select bank1
  1013  033C  1303               	bcf	3,6	;RP1=0, select bank1
  1014  033D  0188               	clrf	8	;volatile
  1015                           
  1016                           ;main.c: 59:   TRISE = 0;
  1017  033E  0189               	clrf	9	;volatile
  1018                           
  1019                           ;main.c: 61:   TRISA = 0;
  1020  033F  0185               	clrf	5	;volatile
  1021  0340                     l2021:
  1022                           
  1023                           ;main.c: 63:     spiInit(SPI_MASTER_OSC_DIV4, SPI_DATA_SAMPLE_MIDDLE,
  1024  0340  01F0               	clrf	spiInit@sDataSample
  1025  0341  01F1               	clrf	spiInit@sClockIdle
  1026  0342  01F2               	clrf	spiInit@sTransmitEdge
  1027  0343  3020               	movlw	32
  1028  0344  120A  158A  25EA  120A  118A  	fcall	_spiInit
  1029  0349                     l2023:
  1030                           
  1031                           ;main.c: 65:   LcdInit();
  1032  0349  120A  118A  2012  120A  118A  	fcall	_LcdInit
  1033  034E                     l2025:
  1034                           
  1035                           ;main.c: 66:   UARTInit(9600,1);
  1036  034E  3000               	movlw	0
  1037  034F  1283               	bcf	3,5	;RP0=0, select bank0
  1038  0350  1303               	bcf	3,6	;RP1=0, select bank0
  1039  0351  00A3               	movwf	UARTInit@baud_rate+3
  1040  0352  3000               	movlw	0
  1041  0353  00A2               	movwf	UARTInit@baud_rate+2
  1042  0354  3025               	movlw	37
  1043  0355  00A1               	movwf	UARTInit@baud_rate+1
  1044  0356  3080               	movlw	128
  1045  0357  00A0               	movwf	UARTInit@baud_rate
  1046  0358  01A4               	clrf	UARTInit@BRGH
  1047  0359  0AA4               	incf	UARTInit@BRGH,f
  1048  035A  120A  118A  2124  120A  118A  	fcall	_UARTInit
  1049  035F                     l2027:
  1050                           
  1051                           ;main.c: 68:   LcdSetCursor(1,1);
  1052  035F  01F5               	clrf	LcdSetCursor@column
  1053  0360  0AF5               	incf	LcdSetCursor@column,f
  1054  0361  3001               	movlw	1
  1055  0362  120A  158A  261A  120A  118A  	fcall	_LcdSetCursor
  1056  0367                     l2029:
  1057                           
  1058                           ;main.c: 69:   LcdWriteString("ADC: CONT: TEMP:");
  1059  0367  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1060  0368  00F4               	movwf	LcdWriteString@value
  1061  0369  3080               	movlw	128
  1062  036A  00F5               	movwf	LcdWriteString@value+1
  1063  036B  120A  158A  26C3  120A  118A  	fcall	_LcdWriteString
  1064  0370                     l2031:
  1065                           
  1066                           ;main.c: 71:       LcdSetCursor(2,1);
  1067  0370  01F5               	clrf	LcdSetCursor@column
  1068  0371  0AF5               	incf	LcdSetCursor@column,f
  1069  0372  3002               	movlw	2
  1070  0373  120A  158A  261A  120A  118A  	fcall	_LcdSetCursor
  1071  0378                     l2033:
  1072                           
  1073                           ;main.c: 73:       PORTA = 254;
  1074  0378  30FE               	movlw	254
  1075  0379  1283               	bcf	3,5	;RP0=0, select bank0
  1076  037A  1303               	bcf	3,6	;RP1=0, select bank0
  1077  037B  0085               	movwf	5	;volatile
  1078  037C                     l2035:
  1079                           
  1080                           ;main.c: 75:       spiWrite('A');
  1081  037C  3041               	movlw	65
  1082  037D  120A  118A  2003  120A  118A  	fcall	_spiWrite
  1083  0382                     l2037:
  1084                           
  1085                           ;main.c: 76:       valueADC = spiRead();
  1086  0382  120A  118A  2009  120A  118A  	fcall	_spiRead
  1087  0387  1283               	bcf	3,5	;RP0=0, select bank0
  1088  0388  1303               	bcf	3,6	;RP1=0, select bank0
  1089  0389  00CF               	movwf	??_main
  1090  038A  084F               	movf	??_main,w
  1091  038B  00D5               	movwf	_valueADC
  1092  038C                     l2039:
  1093                           
  1094                           ;main.c: 78:       cadenaADC = adcToString(valueADC);
  1095  038C  0855               	movf	_valueADC,w
  1096  038D  00CF               	movwf	??_main
  1097  038E  01D0               	clrf	??_main+1
  1098  038F  084F               	movf	??_main,w
  1099  0390  00C5               	movwf	adcToString@value
  1100  0391  0850               	movf	??_main+1,w
  1101  0392  00C6               	movwf	adcToString@value+1
  1102  0393  120A  118A  2299  120A  118A  	fcall	_adcToString
  1103  0398  1283               	bcf	3,5	;RP0=0, select bank0
  1104  0399  1303               	bcf	3,6	;RP1=0, select bank0
  1105  039A  00D1               	movwf	??_main+2
  1106  039B  0851               	movf	??_main+2,w
  1107  039C  00D4               	movwf	_cadenaADC
  1108  039D                     l2041:
  1109                           
  1110                           ;main.c: 79:       LcdWriteString(cadenaADC);
  1111  039D  0854               	movf	_cadenaADC,w
  1112  039E  00F4               	movwf	LcdWriteString@value
  1113  039F  3000               	movlw	0
  1114  03A0  00F5               	movwf	LcdWriteString@value+1
  1115  03A1  120A  158A  26C3  120A  118A  	fcall	_LcdWriteString
  1116  03A6                     l2043:
  1117                           
  1118                           ;main.c: 80:       LcdWriteString("V ");
  1119  03A6  3012               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1120  03A7  00F4               	movwf	LcdWriteString@value
  1121  03A8  3080               	movlw	128
  1122  03A9  00F5               	movwf	LcdWriteString@value+1
  1123  03AA  120A  158A  26C3  120A  118A  	fcall	_LcdWriteString
  1124  03AF                     l2045:
  1125                           
  1126                           ;main.c: 82:       PORTA = 253;
  1127  03AF  30FD               	movlw	253
  1128  03B0  1283               	bcf	3,5	;RP0=0, select bank0
  1129  03B1  1303               	bcf	3,6	;RP1=0, select bank0
  1130  03B2  0085               	movwf	5	;volatile
  1131  03B3                     l2047:
  1132                           
  1133                           ;main.c: 83:       spiWrite('C');
  1134  03B3  3043               	movlw	67
  1135  03B4  120A  118A  2003  120A  118A  	fcall	_spiWrite
  1136  03B9                     l2049:
  1137                           
  1138                           ;main.c: 84:       valueCounter = spiRead();
  1139  03B9  120A  118A  2009  120A  118A  	fcall	_spiRead
  1140  03BE  1283               	bcf	3,5	;RP0=0, select bank0
  1141  03BF  1303               	bcf	3,6	;RP1=0, select bank0
  1142  03C0  00CF               	movwf	??_main
  1143  03C1  084F               	movf	??_main,w
  1144  03C2  00D3               	movwf	_valueCounter
  1145  03C3                     l2051:
  1146                           
  1147                           ;main.c: 85:       cadenaCounter = int2String(valueCounter);
  1148  03C3  0853               	movf	_valueCounter,w
  1149  03C4  120A  158A  27A2  120A  118A  	fcall	_int2String
  1150  03C9  1283               	bcf	3,5	;RP0=0, select bank0
  1151  03CA  1303               	bcf	3,6	;RP1=0, select bank0
  1152  03CB  00CF               	movwf	??_main
  1153  03CC  084F               	movf	??_main,w
  1154  03CD  00D2               	movwf	_cadenaCounter
  1155  03CE                     l2053:
  1156                           
  1157                           ;main.c: 86:       LcdWriteString(cadenaCounter) ;
  1158  03CE  0852               	movf	_cadenaCounter,w
  1159  03CF  00F4               	movwf	LcdWriteString@value
  1160  03D0  3000               	movlw	0
  1161  03D1  00F5               	movwf	LcdWriteString@value+1
  1162  03D2  120A  158A  26C3  120A  118A  	fcall	_LcdWriteString
  1163  03D7  2B70               	goto	l2031
  1164  03D8  120A  118A  2800   	ljmp	start
  1165  03DB                     __end_of_main:
  1166                           
  1167                           	psect	text1
  1168  0003                     __ptext1:	
  1169 ;; *************** function _spiWrite *****************
  1170 ;; Defined at:
  1171 ;;		line 34 in file "spi.c"
  1172 ;; Parameters:    Size  Location     Type
  1173 ;;  dat             1    wreg     unsigned char 
  1174 ;; Auto vars:     Size  Location     Type
  1175 ;;  dat             1    0[COMMON] unsigned char 
  1176 ;; Return value:  Size  Location     Type
  1177 ;;                  1    wreg      void 
  1178 ;; Registers used:
  1179 ;;		wreg
  1180 ;; Tracked objects:
  1181 ;;		On entry : 0/0
  1182 ;;		On exit  : 0/0
  1183 ;;		Unchanged: 0/0
  1184 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1185 ;;      Params:         0       0       0       0       0
  1186 ;;      Locals:         1       0       0       0       0
  1187 ;;      Temps:          0       0       0       0       0
  1188 ;;      Totals:         1       0       0       0       0
  1189 ;;Total ram usage:        1 bytes
  1190 ;; Hardware stack levels used:    1
  1191 ;; This function calls:
  1192 ;;		Nothing
  1193 ;; This function is called by:
  1194 ;;		_main
  1195 ;; This function uses a non-reentrant model
  1196 ;;
  1197                           
  1198                           
  1199                           ;psect for function _spiWrite
  1200  0003                     _spiWrite:
  1201                           
  1202                           ;incstack = 0
  1203                           ; Regs used in _spiWrite: [wreg]
  1204                           ;spiWrite@dat stored from wreg
  1205  0003  00F0               	movwf	spiWrite@dat
  1206  0004                     l1971:
  1207                           
  1208                           ;spi.c: 34: void spiWrite(char dat);spi.c: 35: {;spi.c: 36:     SSPBUF = dat;
  1209  0004  0870               	movf	spiWrite@dat,w
  1210  0005  1283               	bcf	3,5	;RP0=0, select bank0
  1211  0006  1303               	bcf	3,6	;RP1=0, select bank0
  1212  0007  0093               	movwf	19	;volatile
  1213  0008                     l185:
  1214  0008  0008               	return
  1215  0009                     __end_of_spiWrite:
  1216                           
  1217                           	psect	text2
  1218  0009                     __ptext2:	
  1219 ;; *************** function _spiRead *****************
  1220 ;; Defined at:
  1221 ;;		line 47 in file "spi.c"
  1222 ;; Parameters:    Size  Location     Type
  1223 ;;		None
  1224 ;; Auto vars:     Size  Location     Type
  1225 ;;		None
  1226 ;; Return value:  Size  Location     Type
  1227 ;;                  1    wreg      unsigned char 
  1228 ;; Registers used:
  1229 ;;		wreg, status,2, status,0, pclath, cstack
  1230 ;; Tracked objects:
  1231 ;;		On entry : 0/0
  1232 ;;		On exit  : 0/0
  1233 ;;		Unchanged: 0/0
  1234 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1235 ;;      Params:         0       0       0       0       0
  1236 ;;      Locals:         0       0       0       0       0
  1237 ;;      Temps:          0       0       0       0       0
  1238 ;;      Totals:         0       0       0       0       0
  1239 ;;Total ram usage:        0 bytes
  1240 ;; Hardware stack levels used:    1
  1241 ;; Hardware stack levels required when called:    1
  1242 ;; This function calls:
  1243 ;;		_spiReceiveWait
  1244 ;; This function is called by:
  1245 ;;		_main
  1246 ;; This function uses a non-reentrant model
  1247 ;;
  1248                           
  1249                           
  1250                           ;psect for function _spiRead
  1251  0009                     _spiRead:
  1252  0009                     l1973:	
  1253                           ;incstack = 0
  1254                           ; Regs used in _spiRead: [wreg+status,2+status,0+pclath+cstack]
  1255                           
  1256                           
  1257                           ;spi.c: 49:     spiReceiveWait();
  1258  0009  120A  158A  25B9  120A  118A  	fcall	_spiReceiveWait
  1259  000E                     l1975:
  1260                           
  1261                           ;spi.c: 50:     return(SSPBUF);
  1262  000E  1283               	bcf	3,5	;RP0=0, select bank0
  1263  000F  1303               	bcf	3,6	;RP1=0, select bank0
  1264  0010  0813               	movf	19,w	;volatile
  1265  0011                     l193:
  1266  0011  0008               	return
  1267  0012                     __end_of_spiRead:
  1268                           
  1269                           	psect	text3
  1270  0DB9                     __ptext3:	
  1271 ;; *************** function _spiReceiveWait *****************
  1272 ;; Defined at:
  1273 ;;		line 29 in file "spi.c"
  1274 ;; Parameters:    Size  Location     Type
  1275 ;;		None
  1276 ;; Auto vars:     Size  Location     Type
  1277 ;;		None
  1278 ;; Return value:  Size  Location     Type
  1279 ;;                  1    wreg      void 
  1280 ;; Registers used:
  1281 ;;		None
  1282 ;; Tracked objects:
  1283 ;;		On entry : 0/0
  1284 ;;		On exit  : 0/0
  1285 ;;		Unchanged: 0/0
  1286 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1287 ;;      Params:         0       0       0       0       0
  1288 ;;      Locals:         0       0       0       0       0
  1289 ;;      Temps:          0       0       0       0       0
  1290 ;;      Totals:         0       0       0       0       0
  1291 ;;Total ram usage:        0 bytes
  1292 ;; Hardware stack levels used:    1
  1293 ;; This function calls:
  1294 ;;		Nothing
  1295 ;; This function is called by:
  1296 ;;		_spiRead
  1297 ;; This function uses a non-reentrant model
  1298 ;;
  1299                           
  1300                           
  1301                           ;psect for function _spiReceiveWait
  1302  0DB9                     _spiReceiveWait:
  1303  0DB9                     l1495:	
  1304                           ;incstack = 0
  1305                           ; Regs used in _spiReceiveWait: []
  1306                           
  1307  0DB9                     l179:	
  1308                           ;spi.c: 31:     while ( !SSPSTATbits.BF );
  1309                           
  1310  0DB9  1683               	bsf	3,5	;RP0=1, select bank1
  1311  0DBA  1303               	bcf	3,6	;RP1=0, select bank1
  1312  0DBB  1C14               	btfss	20,0	;volatile
  1313  0DBC  2DBE               	goto	u1751
  1314  0DBD  2DBF               	goto	u1750
  1315  0DBE                     u1751:
  1316  0DBE  2DB9               	goto	l179
  1317  0DBF                     u1750:
  1318  0DBF                     l182:
  1319  0DBF  0008               	return
  1320  0DC0                     __end_of_spiReceiveWait:
  1321                           
  1322                           	psect	text4
  1323  0DEA                     __ptext4:	
  1324 ;; *************** function _spiInit *****************
  1325 ;; Defined at:
  1326 ;;		line 12 in file "spi.c"
  1327 ;; Parameters:    Size  Location     Type
  1328 ;;  sType           1    wreg     enum E1264
  1329 ;;  sDataSample     1    0[COMMON] enum E1272
  1330 ;;  sClockIdle      1    1[COMMON] enum E1276
  1331 ;;  sTransmitEdg    1    2[COMMON] enum E1280
  1332 ;; Auto vars:     Size  Location     Type
  1333 ;;  sType           1    3[COMMON] enum E1264
  1334 ;; Return value:  Size  Location     Type
  1335 ;;                  1    wreg      void 
  1336 ;; Registers used:
  1337 ;;		wreg, status,2, status,0
  1338 ;; Tracked objects:
  1339 ;;		On entry : 0/0
  1340 ;;		On exit  : 0/0
  1341 ;;		Unchanged: 0/0
  1342 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1343 ;;      Params:         3       0       0       0       0
  1344 ;;      Locals:         1       0       0       0       0
  1345 ;;      Temps:          0       0       0       0       0
  1346 ;;      Totals:         4       0       0       0       0
  1347 ;;Total ram usage:        4 bytes
  1348 ;; Hardware stack levels used:    1
  1349 ;; This function calls:
  1350 ;;		Nothing
  1351 ;; This function is called by:
  1352 ;;		_main
  1353 ;; This function uses a non-reentrant model
  1354 ;;
  1355                           
  1356                           
  1357                           ;psect for function _spiInit
  1358  0DEA                     _spiInit:
  1359                           
  1360                           ;incstack = 0
  1361                           ; Regs used in _spiInit: [wreg+status,2+status,0]
  1362                           ;spiInit@sType stored from wreg
  1363  0DEA  00F3               	movwf	spiInit@sType
  1364  0DEB                     l1899:
  1365                           
  1366                           ;spi.c: 12: void spiInit(Spi_Type sType, Spi_Data_Sample sDataSample, Spi_Clock_Idle sCl
      +                          ockIdle, Spi_Transmit_Edge sTransmitEdge);spi.c: 13: {;spi.c: 14:     TRISC5 = 0;
  1367  0DEB  1683               	bsf	3,5	;RP0=1, select bank1
  1368  0DEC  1303               	bcf	3,6	;RP1=0, select bank1
  1369  0DED  1287               	bcf	7,5	;volatile
  1370                           
  1371                           ;spi.c: 15:     if(sType & 0b00000100)
  1372  0DEE  1D73               	btfss	spiInit@sType,2
  1373  0DEF  2DF1               	goto	u2821
  1374  0DF0  2DF2               	goto	u2820
  1375  0DF1                     u2821:
  1376  0DF1  2DF6               	goto	l1905
  1377  0DF2                     u2820:
  1378  0DF2                     l1901:
  1379                           
  1380                           ;spi.c: 16:     {;spi.c: 17:         SSPSTAT = sTransmitEdge;
  1381  0DF2  0872               	movf	spiInit@sTransmitEdge,w
  1382  0DF3  0094               	movwf	20	;volatile
  1383  0DF4                     l1903:
  1384                           
  1385                           ;spi.c: 18:         TRISC3 = 1;
  1386  0DF4  1587               	bsf	7,3	;volatile
  1387                           
  1388                           ;spi.c: 19:     }
  1389  0DF5  2DFA               	goto	l175
  1390  0DF6                     l1905:
  1391                           
  1392                           ;spi.c: 21:     {;spi.c: 22:         SSPSTAT = sDataSample | sTransmitEdge;
  1393  0DF6  0870               	movf	spiInit@sDataSample,w
  1394  0DF7  0472               	iorwf	spiInit@sTransmitEdge,w
  1395  0DF8  0094               	movwf	20	;volatile
  1396  0DF9                     l1907:
  1397                           
  1398                           ;spi.c: 23:         TRISC3 = 0;
  1399  0DF9  1187               	bcf	7,3	;volatile
  1400  0DFA                     l175:	
  1401                           ;spi.c: 24:     }
  1402                           
  1403                           
  1404                           ;spi.c: 26:     SSPCON = sType | sClockIdle;
  1405  0DFA  0873               	movf	spiInit@sType,w
  1406  0DFB  0471               	iorwf	spiInit@sClockIdle,w
  1407  0DFC  1283               	bcf	3,5	;RP0=0, select bank0
  1408  0DFD  1303               	bcf	3,6	;RP1=0, select bank0
  1409  0DFE  0094               	movwf	20	;volatile
  1410  0DFF                     l176:
  1411  0DFF  0008               	return
  1412  0E00                     __end_of_spiInit:
  1413                           
  1414                           	psect	text5
  1415  0FA2                     __ptext5:	
  1416 ;; *************** function _int2String *****************
  1417 ;; Defined at:
  1418 ;;		line 112 in file "main.c"
  1419 ;; Parameters:    Size  Location     Type
  1420 ;;  value           1    wreg     unsigned char 
  1421 ;; Auto vars:     Size  Location     Type
  1422 ;;  value           1    5[BANK0 ] unsigned char 
  1423 ;;  cadena          4    0[BANK0 ] unsigned char [4]
  1424 ;;  digito          1    4[BANK0 ] unsigned char 
  1425 ;; Return value:  Size  Location     Type
  1426 ;;                  1    wreg      PTR unsigned char 
  1427 ;; Registers used:
  1428 ;;		wreg, status,2, status,0, pclath, cstack
  1429 ;; Tracked objects:
  1430 ;;		On entry : 0/0
  1431 ;;		On exit  : 0/0
  1432 ;;		Unchanged: 0/0
  1433 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1434 ;;      Params:         0       0       0       0       0
  1435 ;;      Locals:         0       6       0       0       0
  1436 ;;      Temps:          3       0       0       0       0
  1437 ;;      Totals:         3       6       0       0       0
  1438 ;;Total ram usage:        9 bytes
  1439 ;; Hardware stack levels used:    1
  1440 ;; Hardware stack levels required when called:    1
  1441 ;; This function calls:
  1442 ;;		___awdiv
  1443 ;;		___awmod
  1444 ;;		___bmul
  1445 ;; This function is called by:
  1446 ;;		_main
  1447 ;; This function uses a non-reentrant model
  1448 ;;
  1449                           
  1450                           
  1451                           ;psect for function _int2String
  1452  0FA2                     _int2String:
  1453                           
  1454                           ;incstack = 0
  1455                           ; Regs used in _int2String: [wreg+status,2+status,0+pclath+cstack]
  1456                           ;int2String@value stored from wreg
  1457  0FA2  1283               	bcf	3,5	;RP0=0, select bank0
  1458  0FA3  1303               	bcf	3,6	;RP1=0, select bank0
  1459  0FA4  00A5               	movwf	int2String@value
  1460  0FA5                     l2003:
  1461                           
  1462                           ;main.c: 113:     char cadena[4];;main.c: 114:     uint8_t digito;;main.c: 116:     digi
      +                          to = value/100;
  1463  0FA5  3064               	movlw	100
  1464  0FA6  00F0               	movwf	___awdiv@divisor
  1465  0FA7  3000               	movlw	0
  1466  0FA8  00F1               	movwf	___awdiv@divisor+1
  1467  0FA9  0825               	movf	int2String@value,w
  1468  0FAA  00F9               	movwf	??_int2String
  1469  0FAB  01FA               	clrf	??_int2String+1
  1470  0FAC  0879               	movf	??_int2String,w
  1471  0FAD  00F2               	movwf	___awdiv@dividend
  1472  0FAE  087A               	movf	??_int2String+1,w
  1473  0FAF  00F3               	movwf	___awdiv@dividend+1
  1474  0FB0  120A  118A  20BD  120A  158A  	fcall	___awdiv
  1475  0FB5  0870               	movf	?___awdiv,w
  1476  0FB6  00FB               	movwf	??_int2String+2
  1477  0FB7  087B               	movf	??_int2String+2,w
  1478  0FB8  1283               	bcf	3,5	;RP0=0, select bank0
  1479  0FB9  1303               	bcf	3,6	;RP1=0, select bank0
  1480  0FBA  00A4               	movwf	int2String@digito
  1481  0FBB                     l2005:
  1482                           
  1483                           ;main.c: 117:     cadena[0] = digito +48;
  1484  0FBB  0824               	movf	int2String@digito,w
  1485  0FBC  3E30               	addlw	48
  1486  0FBD  00F9               	movwf	??_int2String
  1487  0FBE  0879               	movf	??_int2String,w
  1488  0FBF  00A0               	movwf	int2String@cadena
  1489  0FC0                     l2007:
  1490                           
  1491                           ;main.c: 118:     value-= digito*100;
  1492  0FC0  3064               	movlw	100
  1493  0FC1  00F9               	movwf	??_int2String
  1494  0FC2  0879               	movf	??_int2String,w
  1495  0FC3  00F0               	movwf	___bmul@multiplicand
  1496  0FC4  0824               	movf	int2String@digito,w
  1497  0FC5  120A  158A  25D5  120A  158A  	fcall	___bmul
  1498  0FCA  00FA               	movwf	??_int2String+1
  1499  0FCB  087A               	movf	??_int2String+1,w
  1500  0FCC  1283               	bcf	3,5	;RP0=0, select bank0
  1501  0FCD  1303               	bcf	3,6	;RP1=0, select bank0
  1502  0FCE  02A5               	subwf	int2String@value,f
  1503  0FCF                     l2009:
  1504                           
  1505                           ;main.c: 120:     cadena[1] = value/10 + 48;
  1506  0FCF  300A               	movlw	10
  1507  0FD0  00F0               	movwf	___awdiv@divisor
  1508  0FD1  3000               	movlw	0
  1509  0FD2  00F1               	movwf	___awdiv@divisor+1
  1510  0FD3  0825               	movf	int2String@value,w
  1511  0FD4  00F9               	movwf	??_int2String
  1512  0FD5  01FA               	clrf	??_int2String+1
  1513  0FD6  0879               	movf	??_int2String,w
  1514  0FD7  00F2               	movwf	___awdiv@dividend
  1515  0FD8  087A               	movf	??_int2String+1,w
  1516  0FD9  00F3               	movwf	___awdiv@dividend+1
  1517  0FDA  120A  118A  20BD  120A  158A  	fcall	___awdiv
  1518  0FDF  0870               	movf	?___awdiv,w
  1519  0FE0  3E30               	addlw	48
  1520  0FE1  00FB               	movwf	??_int2String+2
  1521  0FE2  087B               	movf	??_int2String+2,w
  1522  0FE3  1283               	bcf	3,5	;RP0=0, select bank0
  1523  0FE4  1303               	bcf	3,6	;RP1=0, select bank0
  1524  0FE5  00A1               	movwf	int2String@cadena+1
  1525  0FE6                     l2011:
  1526                           
  1527                           ;main.c: 121:     cadena[2] = value%10 + 48;
  1528  0FE6  300A               	movlw	10
  1529  0FE7  00F0               	movwf	___awmod@divisor
  1530  0FE8  3000               	movlw	0
  1531  0FE9  00F1               	movwf	___awmod@divisor+1
  1532  0FEA  0825               	movf	int2String@value,w
  1533  0FEB  00F9               	movwf	??_int2String
  1534  0FEC  01FA               	clrf	??_int2String+1
  1535  0FED  0879               	movf	??_int2String,w
  1536  0FEE  00F2               	movwf	___awmod@dividend
  1537  0FEF  087A               	movf	??_int2String+1,w
  1538  0FF0  00F3               	movwf	___awmod@dividend+1
  1539  0FF1  120A  158A  2749  120A  158A  	fcall	___awmod
  1540  0FF6  0870               	movf	?___awmod,w
  1541  0FF7  3E30               	addlw	48
  1542  0FF8  00FB               	movwf	??_int2String+2
  1543  0FF9  087B               	movf	??_int2String+2,w
  1544  0FFA  1283               	bcf	3,5	;RP0=0, select bank0
  1545  0FFB  1303               	bcf	3,6	;RP1=0, select bank0
  1546  0FFC  00A2               	movwf	int2String@cadena+2
  1547  0FFD                     l2013:
  1548                           
  1549                           ;main.c: 122:     cadena[3] = '\0';
  1550  0FFD  01A3               	clrf	int2String@cadena+3
  1551  0FFE                     l2015:
  1552                           
  1553                           ;main.c: 123:     return cadena;
  1554  0FFE  3020               	movlw	(low (int2String@cadena| 0))& (0+255)
  1555  0FFF                     l52:
  1556  0FFF  0008               	return
  1557  1000                     __end_of_int2String:
  1558                           
  1559                           	psect	text6
  1560  0DD5                     __ptext6:	
  1561 ;; *************** function ___bmul *****************
  1562 ;; Defined at:
  1563 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul8.c"
  1564 ;; Parameters:    Size  Location     Type
  1565 ;;  multiplier      1    wreg     unsigned char 
  1566 ;;  multiplicand    1    0[COMMON] unsigned char 
  1567 ;; Auto vars:     Size  Location     Type
  1568 ;;  multiplier      1    3[COMMON] unsigned char 
  1569 ;;  product         1    2[COMMON] unsigned char 
  1570 ;; Return value:  Size  Location     Type
  1571 ;;                  1    wreg      unsigned char 
  1572 ;; Registers used:
  1573 ;;		wreg, status,2, status,0
  1574 ;; Tracked objects:
  1575 ;;		On entry : 0/0
  1576 ;;		On exit  : 0/0
  1577 ;;		Unchanged: 0/0
  1578 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1579 ;;      Params:         1       0       0       0       0
  1580 ;;      Locals:         2       0       0       0       0
  1581 ;;      Temps:          1       0       0       0       0
  1582 ;;      Totals:         4       0       0       0       0
  1583 ;;Total ram usage:        4 bytes
  1584 ;; Hardware stack levels used:    1
  1585 ;; This function calls:
  1586 ;;		Nothing
  1587 ;; This function is called by:
  1588 ;;		_int2String
  1589 ;; This function uses a non-reentrant model
  1590 ;;
  1591                           
  1592                           
  1593                           ;psect for function ___bmul
  1594  0DD5                     ___bmul:
  1595                           
  1596                           ;incstack = 0
  1597                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  1598                           ;___bmul@multiplier stored from wreg
  1599  0DD5  00F3               	movwf	___bmul@multiplier
  1600  0DD6                     l1511:
  1601  0DD6  01F2               	clrf	___bmul@product
  1602  0DD7                     l1513:
  1603  0DD7  1C73               	btfss	___bmul@multiplier,0
  1604  0DD8  2DDA               	goto	u1801
  1605  0DD9  2DDB               	goto	u1800
  1606  0DDA                     u1801:
  1607  0DDA  2DDF               	goto	l1517
  1608  0DDB                     u1800:
  1609  0DDB                     l1515:
  1610  0DDB  0870               	movf	___bmul@multiplicand,w
  1611  0DDC  00F1               	movwf	??___bmul
  1612  0DDD  0871               	movf	??___bmul,w
  1613  0DDE  07F2               	addwf	___bmul@product,f
  1614  0DDF                     l1517:
  1615  0DDF  1003               	clrc
  1616  0DE0  0DF0               	rlf	___bmul@multiplicand,f
  1617  0DE1                     l1519:
  1618  0DE1  1003               	clrc
  1619  0DE2  0CF3               	rrf	___bmul@multiplier,f
  1620  0DE3  0873               	movf	___bmul@multiplier,w
  1621  0DE4  1D03               	btfss	3,2
  1622  0DE5  2DE7               	goto	u1811
  1623  0DE6  2DE8               	goto	u1810
  1624  0DE7                     u1811:
  1625  0DE7  2DD7               	goto	l1513
  1626  0DE8                     u1810:
  1627  0DE8                     l1521:
  1628  0DE8  0872               	movf	___bmul@product,w
  1629  0DE9                     l305:
  1630  0DE9  0008               	return
  1631  0DEA                     __end_of___bmul:
  1632                           
  1633                           	psect	text7
  1634  0F49                     __ptext7:	
  1635 ;; *************** function ___awmod *****************
  1636 ;; Defined at:
  1637 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awmod.c"
  1638 ;; Parameters:    Size  Location     Type
  1639 ;;  divisor         2    0[COMMON] int 
  1640 ;;  dividend        2    2[COMMON] int 
  1641 ;; Auto vars:     Size  Location     Type
  1642 ;;  sign            1    6[COMMON] unsigned char 
  1643 ;;  counter         1    5[COMMON] unsigned char 
  1644 ;; Return value:  Size  Location     Type
  1645 ;;                  2    0[COMMON] int 
  1646 ;; Registers used:
  1647 ;;		wreg, status,2, status,0
  1648 ;; Tracked objects:
  1649 ;;		On entry : 0/0
  1650 ;;		On exit  : 0/0
  1651 ;;		Unchanged: 0/0
  1652 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1653 ;;      Params:         4       0       0       0       0
  1654 ;;      Locals:         2       0       0       0       0
  1655 ;;      Temps:          1       0       0       0       0
  1656 ;;      Totals:         7       0       0       0       0
  1657 ;;Total ram usage:        7 bytes
  1658 ;; Hardware stack levels used:    1
  1659 ;; This function calls:
  1660 ;;		Nothing
  1661 ;; This function is called by:
  1662 ;;		_int2String
  1663 ;; This function uses a non-reentrant model
  1664 ;;
  1665                           
  1666                           
  1667                           ;psect for function ___awmod
  1668  0F49                     ___awmod:
  1669  0F49                     l1593:	
  1670                           ;incstack = 0
  1671                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  1672                           
  1673  0F49  01F6               	clrf	___awmod@sign
  1674  0F4A                     l1595:
  1675  0F4A  1FF3               	btfss	___awmod@dividend+1,7
  1676  0F4B  2F4D               	goto	u1991
  1677  0F4C  2F4E               	goto	u1990
  1678  0F4D                     u1991:
  1679  0F4D  2F55               	goto	l1601
  1680  0F4E                     u1990:
  1681  0F4E                     l1597:
  1682  0F4E  09F2               	comf	___awmod@dividend,f
  1683  0F4F  09F3               	comf	___awmod@dividend+1,f
  1684  0F50  0AF2               	incf	___awmod@dividend,f
  1685  0F51  1903               	skipnz
  1686  0F52  0AF3               	incf	___awmod@dividend+1,f
  1687  0F53                     l1599:
  1688  0F53  01F6               	clrf	___awmod@sign
  1689  0F54  0AF6               	incf	___awmod@sign,f
  1690  0F55                     l1601:
  1691  0F55  1FF1               	btfss	___awmod@divisor+1,7
  1692  0F56  2F58               	goto	u2001
  1693  0F57  2F59               	goto	u2000
  1694  0F58                     u2001:
  1695  0F58  2F5E               	goto	l1605
  1696  0F59                     u2000:
  1697  0F59                     l1603:
  1698  0F59  09F0               	comf	___awmod@divisor,f
  1699  0F5A  09F1               	comf	___awmod@divisor+1,f
  1700  0F5B  0AF0               	incf	___awmod@divisor,f
  1701  0F5C  1903               	skipnz
  1702  0F5D  0AF1               	incf	___awmod@divisor+1,f
  1703  0F5E                     l1605:
  1704  0F5E  0870               	movf	___awmod@divisor,w
  1705  0F5F  0471               	iorwf	___awmod@divisor+1,w
  1706  0F60  1903               	btfsc	3,2
  1707  0F61  2F63               	goto	u2011
  1708  0F62  2F64               	goto	u2010
  1709  0F63                     u2011:
  1710  0F63  2F93               	goto	l1623
  1711  0F64                     u2010:
  1712  0F64                     l1607:
  1713  0F64  01F5               	clrf	___awmod@counter
  1714  0F65  0AF5               	incf	___awmod@counter,f
  1715  0F66  2F72               	goto	l1613
  1716  0F67                     l1609:
  1717  0F67  3001               	movlw	1
  1718  0F68                     u2025:
  1719  0F68  1003               	clrc
  1720  0F69  0DF0               	rlf	___awmod@divisor,f
  1721  0F6A  0DF1               	rlf	___awmod@divisor+1,f
  1722  0F6B  3EFF               	addlw	-1
  1723  0F6C  1D03               	skipz
  1724  0F6D  2F68               	goto	u2025
  1725  0F6E                     l1611:
  1726  0F6E  3001               	movlw	1
  1727  0F6F  00F4               	movwf	??___awmod
  1728  0F70  0874               	movf	??___awmod,w
  1729  0F71  07F5               	addwf	___awmod@counter,f
  1730  0F72                     l1613:
  1731  0F72  1FF1               	btfss	___awmod@divisor+1,7
  1732  0F73  2F75               	goto	u2031
  1733  0F74  2F76               	goto	u2030
  1734  0F75                     u2031:
  1735  0F75  2F67               	goto	l1609
  1736  0F76                     u2030:
  1737  0F76                     l1615:
  1738  0F76  0871               	movf	___awmod@divisor+1,w
  1739  0F77  0273               	subwf	___awmod@dividend+1,w
  1740  0F78  1D03               	skipz
  1741  0F79  2F7C               	goto	u2045
  1742  0F7A  0870               	movf	___awmod@divisor,w
  1743  0F7B  0272               	subwf	___awmod@dividend,w
  1744  0F7C                     u2045:
  1745  0F7C  1C03               	skipc
  1746  0F7D  2F7F               	goto	u2041
  1747  0F7E  2F80               	goto	u2040
  1748  0F7F                     u2041:
  1749  0F7F  2F86               	goto	l1619
  1750  0F80                     u2040:
  1751  0F80                     l1617:
  1752  0F80  0870               	movf	___awmod@divisor,w
  1753  0F81  02F2               	subwf	___awmod@dividend,f
  1754  0F82  0871               	movf	___awmod@divisor+1,w
  1755  0F83  1C03               	skipc
  1756  0F84  03F3               	decf	___awmod@dividend+1,f
  1757  0F85  02F3               	subwf	___awmod@dividend+1,f
  1758  0F86                     l1619:
  1759  0F86  3001               	movlw	1
  1760  0F87                     u2055:
  1761  0F87  1003               	clrc
  1762  0F88  0CF1               	rrf	___awmod@divisor+1,f
  1763  0F89  0CF0               	rrf	___awmod@divisor,f
  1764  0F8A  3EFF               	addlw	-1
  1765  0F8B  1D03               	skipz
  1766  0F8C  2F87               	goto	u2055
  1767  0F8D                     l1621:
  1768  0F8D  3001               	movlw	1
  1769  0F8E  02F5               	subwf	___awmod@counter,f
  1770  0F8F  1D03               	btfss	3,2
  1771  0F90  2F92               	goto	u2061
  1772  0F91  2F93               	goto	u2060
  1773  0F92                     u2061:
  1774  0F92  2F76               	goto	l1615
  1775  0F93                     u2060:
  1776  0F93                     l1623:
  1777  0F93  0876               	movf	___awmod@sign,w
  1778  0F94  1903               	btfsc	3,2
  1779  0F95  2F97               	goto	u2071
  1780  0F96  2F98               	goto	u2070
  1781  0F97                     u2071:
  1782  0F97  2F9D               	goto	l1627
  1783  0F98                     u2070:
  1784  0F98                     l1625:
  1785  0F98  09F2               	comf	___awmod@dividend,f
  1786  0F99  09F3               	comf	___awmod@dividend+1,f
  1787  0F9A  0AF2               	incf	___awmod@dividend,f
  1788  0F9B  1903               	skipnz
  1789  0F9C  0AF3               	incf	___awmod@dividend+1,f
  1790  0F9D                     l1627:
  1791  0F9D  0873               	movf	___awmod@dividend+1,w
  1792  0F9E  00F1               	movwf	?___awmod+1
  1793  0F9F  0872               	movf	___awmod@dividend,w
  1794  0FA0  00F0               	movwf	?___awmod
  1795  0FA1                     l445:
  1796  0FA1  0008               	return
  1797  0FA2                     __end_of___awmod:
  1798                           
  1799                           	psect	text8
  1800  00BD                     __ptext8:	
  1801 ;; *************** function ___awdiv *****************
  1802 ;; Defined at:
  1803 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awdiv.c"
  1804 ;; Parameters:    Size  Location     Type
  1805 ;;  divisor         2    0[COMMON] int 
  1806 ;;  dividend        2    2[COMMON] int 
  1807 ;; Auto vars:     Size  Location     Type
  1808 ;;  quotient        2    7[COMMON] int 
  1809 ;;  sign            1    6[COMMON] unsigned char 
  1810 ;;  counter         1    5[COMMON] unsigned char 
  1811 ;; Return value:  Size  Location     Type
  1812 ;;                  2    0[COMMON] int 
  1813 ;; Registers used:
  1814 ;;		wreg, status,2, status,0
  1815 ;; Tracked objects:
  1816 ;;		On entry : 0/0
  1817 ;;		On exit  : 0/0
  1818 ;;		Unchanged: 0/0
  1819 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1820 ;;      Params:         4       0       0       0       0
  1821 ;;      Locals:         4       0       0       0       0
  1822 ;;      Temps:          1       0       0       0       0
  1823 ;;      Totals:         9       0       0       0       0
  1824 ;;Total ram usage:        9 bytes
  1825 ;; Hardware stack levels used:    1
  1826 ;; This function calls:
  1827 ;;		Nothing
  1828 ;; This function is called by:
  1829 ;;		_int2String
  1830 ;; This function uses a non-reentrant model
  1831 ;;
  1832                           
  1833                           
  1834                           ;psect for function ___awdiv
  1835  00BD                     ___awdiv:
  1836  00BD                     l1549:	
  1837                           ;incstack = 0
  1838                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  1839                           
  1840  00BD  01F6               	clrf	___awdiv@sign
  1841  00BE                     l1551:
  1842  00BE  1FF1               	btfss	___awdiv@divisor+1,7
  1843  00BF  28C1               	goto	u1891
  1844  00C0  28C2               	goto	u1890
  1845  00C1                     u1891:
  1846  00C1  28C9               	goto	l1557
  1847  00C2                     u1890:
  1848  00C2                     l1553:
  1849  00C2  09F0               	comf	___awdiv@divisor,f
  1850  00C3  09F1               	comf	___awdiv@divisor+1,f
  1851  00C4  0AF0               	incf	___awdiv@divisor,f
  1852  00C5  1903               	skipnz
  1853  00C6  0AF1               	incf	___awdiv@divisor+1,f
  1854  00C7                     l1555:
  1855  00C7  01F6               	clrf	___awdiv@sign
  1856  00C8  0AF6               	incf	___awdiv@sign,f
  1857  00C9                     l1557:
  1858  00C9  1FF3               	btfss	___awdiv@dividend+1,7
  1859  00CA  28CC               	goto	u1901
  1860  00CB  28CD               	goto	u1900
  1861  00CC                     u1901:
  1862  00CC  28D6               	goto	l1563
  1863  00CD                     u1900:
  1864  00CD                     l1559:
  1865  00CD  09F2               	comf	___awdiv@dividend,f
  1866  00CE  09F3               	comf	___awdiv@dividend+1,f
  1867  00CF  0AF2               	incf	___awdiv@dividend,f
  1868  00D0  1903               	skipnz
  1869  00D1  0AF3               	incf	___awdiv@dividend+1,f
  1870  00D2                     l1561:
  1871  00D2  3001               	movlw	1
  1872  00D3  00F4               	movwf	??___awdiv
  1873  00D4  0874               	movf	??___awdiv,w
  1874  00D5  06F6               	xorwf	___awdiv@sign,f
  1875  00D6                     l1563:
  1876  00D6  01F7               	clrf	___awdiv@quotient
  1877  00D7  01F8               	clrf	___awdiv@quotient+1
  1878  00D8                     l1565:
  1879  00D8  0870               	movf	___awdiv@divisor,w
  1880  00D9  0471               	iorwf	___awdiv@divisor+1,w
  1881  00DA  1903               	btfsc	3,2
  1882  00DB  28DD               	goto	u1911
  1883  00DC  28DE               	goto	u1910
  1884  00DD                     u1911:
  1885  00DD  2915               	goto	l1585
  1886  00DE                     u1910:
  1887  00DE                     l1567:
  1888  00DE  01F5               	clrf	___awdiv@counter
  1889  00DF  0AF5               	incf	___awdiv@counter,f
  1890  00E0  28EC               	goto	l1573
  1891  00E1                     l1569:
  1892  00E1  3001               	movlw	1
  1893  00E2                     u1925:
  1894  00E2  1003               	clrc
  1895  00E3  0DF0               	rlf	___awdiv@divisor,f
  1896  00E4  0DF1               	rlf	___awdiv@divisor+1,f
  1897  00E5  3EFF               	addlw	-1
  1898  00E6  1D03               	skipz
  1899  00E7  28E2               	goto	u1925
  1900  00E8                     l1571:
  1901  00E8  3001               	movlw	1
  1902  00E9  00F4               	movwf	??___awdiv
  1903  00EA  0874               	movf	??___awdiv,w
  1904  00EB  07F5               	addwf	___awdiv@counter,f
  1905  00EC                     l1573:
  1906  00EC  1FF1               	btfss	___awdiv@divisor+1,7
  1907  00ED  28EF               	goto	u1931
  1908  00EE  28F0               	goto	u1930
  1909  00EF                     u1931:
  1910  00EF  28E1               	goto	l1569
  1911  00F0                     u1930:
  1912  00F0                     l1575:
  1913  00F0  3001               	movlw	1
  1914  00F1                     u1945:
  1915  00F1  1003               	clrc
  1916  00F2  0DF7               	rlf	___awdiv@quotient,f
  1917  00F3  0DF8               	rlf	___awdiv@quotient+1,f
  1918  00F4  3EFF               	addlw	-1
  1919  00F5  1D03               	skipz
  1920  00F6  28F1               	goto	u1945
  1921  00F7  0871               	movf	___awdiv@divisor+1,w
  1922  00F8  0273               	subwf	___awdiv@dividend+1,w
  1923  00F9  1D03               	skipz
  1924  00FA  28FD               	goto	u1955
  1925  00FB  0870               	movf	___awdiv@divisor,w
  1926  00FC  0272               	subwf	___awdiv@dividend,w
  1927  00FD                     u1955:
  1928  00FD  1C03               	skipc
  1929  00FE  2900               	goto	u1951
  1930  00FF  2901               	goto	u1950
  1931  0100                     u1951:
  1932  0100  2908               	goto	l1581
  1933  0101                     u1950:
  1934  0101                     l1577:
  1935  0101  0870               	movf	___awdiv@divisor,w
  1936  0102  02F2               	subwf	___awdiv@dividend,f
  1937  0103  0871               	movf	___awdiv@divisor+1,w
  1938  0104  1C03               	skipc
  1939  0105  03F3               	decf	___awdiv@dividend+1,f
  1940  0106  02F3               	subwf	___awdiv@dividend+1,f
  1941  0107                     l1579:
  1942  0107  1477               	bsf	___awdiv@quotient,0
  1943  0108                     l1581:
  1944  0108  3001               	movlw	1
  1945  0109                     u1965:
  1946  0109  1003               	clrc
  1947  010A  0CF1               	rrf	___awdiv@divisor+1,f
  1948  010B  0CF0               	rrf	___awdiv@divisor,f
  1949  010C  3EFF               	addlw	-1
  1950  010D  1D03               	skipz
  1951  010E  2909               	goto	u1965
  1952  010F                     l1583:
  1953  010F  3001               	movlw	1
  1954  0110  02F5               	subwf	___awdiv@counter,f
  1955  0111  1D03               	btfss	3,2
  1956  0112  2914               	goto	u1971
  1957  0113  2915               	goto	u1970
  1958  0114                     u1971:
  1959  0114  28F0               	goto	l1575
  1960  0115                     u1970:
  1961  0115                     l1585:
  1962  0115  0876               	movf	___awdiv@sign,w
  1963  0116  1903               	btfsc	3,2
  1964  0117  2919               	goto	u1981
  1965  0118  291A               	goto	u1980
  1966  0119                     u1981:
  1967  0119  291F               	goto	l1589
  1968  011A                     u1980:
  1969  011A                     l1587:
  1970  011A  09F7               	comf	___awdiv@quotient,f
  1971  011B  09F8               	comf	___awdiv@quotient+1,f
  1972  011C  0AF7               	incf	___awdiv@quotient,f
  1973  011D  1903               	skipnz
  1974  011E  0AF8               	incf	___awdiv@quotient+1,f
  1975  011F                     l1589:
  1976  011F  0878               	movf	___awdiv@quotient+1,w
  1977  0120  00F1               	movwf	?___awdiv+1
  1978  0121  0877               	movf	___awdiv@quotient,w
  1979  0122  00F0               	movwf	?___awdiv
  1980  0123                     l432:
  1981  0123  0008               	return
  1982  0124                     __end_of___awdiv:
  1983                           
  1984                           	psect	text9
  1985  0299                     __ptext9:	
  1986 ;; *************** function _adcToString *****************
  1987 ;; Defined at:
  1988 ;;		line 93 in file "main.c"
  1989 ;; Parameters:    Size  Location     Type
  1990 ;;  value           2   37[BANK0 ] unsigned int 
  1991 ;; Auto vars:     Size  Location     Type
  1992 ;;  salida          5   40[BANK0 ] unsigned char [5]
  1993 ;;  digito          2   45[BANK0 ] unsigned int 
  1994 ;; Return value:  Size  Location     Type
  1995 ;;                  1    wreg      PTR unsigned char 
  1996 ;; Registers used:
  1997 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1998 ;; Tracked objects:
  1999 ;;		On entry : 0/0
  2000 ;;		On exit  : 0/0
  2001 ;;		Unchanged: 0/0
  2002 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2003 ;;      Params:         0       2       0       0       0
  2004 ;;      Locals:         0       7       0       0       0
  2005 ;;      Temps:          0       1       0       0       0
  2006 ;;      Totals:         0      10       0       0       0
  2007 ;;Total ram usage:       10 bytes
  2008 ;; Hardware stack levels used:    1
  2009 ;; Hardware stack levels required when called:    2
  2010 ;; This function calls:
  2011 ;;		___flmul
  2012 ;;		___fltol
  2013 ;;		___lwdiv
  2014 ;;		___lwmod
  2015 ;;		___wmul
  2016 ;;		___xxtofl
  2017 ;; This function is called by:
  2018 ;;		_main
  2019 ;; This function uses a non-reentrant model
  2020 ;;
  2021                           
  2022                           
  2023                           ;psect for function _adcToString
  2024  0299                     _adcToString:
  2025  0299                     l1979:	
  2026                           ;incstack = 0
  2027                           ; Regs used in _adcToString: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  2028                           
  2029                           
  2030                           ;main.c: 94:     char salida[5];;main.c: 95:     uint16_t digito;;main.c: 97:     value 
      +                          = value*1.96;
  2031  0299  1283               	bcf	3,5	;RP0=0, select bank0
  2032  029A  1303               	bcf	3,6	;RP1=0, select bank0
  2033  029B  0845               	movf	adcToString@value,w
  2034  029C  00F0               	movwf	___xxtofl@val
  2035  029D  0846               	movf	adcToString@value+1,w
  2036  029E  00F1               	movwf	___xxtofl@val+1
  2037  029F  01F2               	clrf	___xxtofl@val+2
  2038  02A0  01F3               	clrf	___xxtofl@val+3
  2039  02A1  3000               	movlw	0
  2040  02A2  120A  118A  23DB  120A  118A  	fcall	___xxtofl
  2041  02A7  0873               	movf	?___xxtofl+3,w
  2042  02A8  1283               	bcf	3,5	;RP0=0, select bank0
  2043  02A9  1303               	bcf	3,6	;RP1=0, select bank0
  2044  02AA  00A7               	movwf	___flmul@a+3
  2045  02AB  0872               	movf	?___xxtofl+2,w
  2046  02AC  00A6               	movwf	___flmul@a+2
  2047  02AD  0871               	movf	?___xxtofl+1,w
  2048  02AE  00A5               	movwf	___flmul@a+1
  2049  02AF  0870               	movf	?___xxtofl,w
  2050  02B0  00A4               	movwf	___flmul@a
  2051  02B1  303F               	movlw	63
  2052  02B2  00A3               	movwf	___flmul@b+3
  2053  02B3  30FA               	movlw	250
  2054  02B4  00A2               	movwf	___flmul@b+2
  2055  02B5  30E1               	movlw	225
  2056  02B6  00A1               	movwf	___flmul@b+1
  2057  02B7  3048               	movlw	72
  2058  02B8  00A0               	movwf	___flmul@b
  2059  02B9  120A  118A  2495  120A  118A  	fcall	___flmul
  2060  02BE  1283               	bcf	3,5	;RP0=0, select bank0
  2061  02BF  1303               	bcf	3,6	;RP1=0, select bank0
  2062  02C0  0823               	movf	?___flmul+3,w
  2063  02C1  00BD               	movwf	___fltol@f1+3
  2064  02C2  0822               	movf	?___flmul+2,w
  2065  02C3  00BC               	movwf	___fltol@f1+2
  2066  02C4  0821               	movf	?___flmul+1,w
  2067  02C5  00BB               	movwf	___fltol@f1+1
  2068  02C6  0820               	movf	?___flmul,w
  2069  02C7  00BA               	movwf	___fltol@f1
  2070  02C8  120A  118A  2193  120A  118A  	fcall	___fltol
  2071  02CD  1283               	bcf	3,5	;RP0=0, select bank0
  2072  02CE  1303               	bcf	3,6	;RP1=0, select bank0
  2073  02CF  083B               	movf	?___fltol+1,w
  2074  02D0  00C6               	movwf	adcToString@value+1
  2075  02D1  083A               	movf	?___fltol,w
  2076  02D2  00C5               	movwf	adcToString@value
  2077  02D3                     l1981:
  2078                           
  2079                           ;main.c: 98:     digito = value/100 ;
  2080  02D3  3064               	movlw	100
  2081  02D4  00F0               	movwf	___lwdiv@divisor
  2082  02D5  3000               	movlw	0
  2083  02D6  00F1               	movwf	___lwdiv@divisor+1
  2084  02D7  0846               	movf	adcToString@value+1,w
  2085  02D8  00F3               	movwf	___lwdiv@dividend+1
  2086  02D9  0845               	movf	adcToString@value,w
  2087  02DA  00F2               	movwf	___lwdiv@dividend
  2088  02DB  120A  158A  2705  120A  118A  	fcall	___lwdiv
  2089  02E0  0871               	movf	?___lwdiv+1,w
  2090  02E1  1283               	bcf	3,5	;RP0=0, select bank0
  2091  02E2  1303               	bcf	3,6	;RP1=0, select bank0
  2092  02E3  00CE               	movwf	adcToString@digito+1
  2093  02E4  0870               	movf	?___lwdiv,w
  2094  02E5  00CD               	movwf	adcToString@digito
  2095  02E6                     l1983:
  2096                           
  2097                           ;main.c: 100:     salida[0] = digito + 48;
  2098  02E6  084D               	movf	adcToString@digito,w
  2099  02E7  3E30               	addlw	48
  2100  02E8  00C7               	movwf	??_adcToString
  2101  02E9  0847               	movf	??_adcToString,w
  2102  02EA  00C8               	movwf	adcToString@salida
  2103  02EB                     l1985:
  2104                           
  2105                           ;main.c: 101:     salida[1] = '.';
  2106  02EB  302E               	movlw	46
  2107  02EC  00C7               	movwf	??_adcToString
  2108  02ED  0847               	movf	??_adcToString,w
  2109  02EE  00C9               	movwf	adcToString@salida+1
  2110  02EF                     l1987:
  2111                           
  2112                           ;main.c: 102:     value -= digito*100;
  2113  02EF  084E               	movf	adcToString@digito+1,w
  2114  02F0  00F1               	movwf	___wmul@multiplier+1
  2115  02F1  084D               	movf	adcToString@digito,w
  2116  02F2  00F0               	movwf	___wmul@multiplier
  2117  02F3  3064               	movlw	100
  2118  02F4  00F2               	movwf	___wmul@multiplicand
  2119  02F5  3000               	movlw	0
  2120  02F6  00F3               	movwf	___wmul@multiplicand+1
  2121  02F7  120A  158A  263D  120A  118A  	fcall	___wmul
  2122  02FC  0870               	movf	?___wmul,w
  2123  02FD  1283               	bcf	3,5	;RP0=0, select bank0
  2124  02FE  1303               	bcf	3,6	;RP1=0, select bank0
  2125  02FF  02C5               	subwf	adcToString@value,f
  2126  0300  0871               	movf	?___wmul+1,w
  2127  0301  1C03               	skipc
  2128  0302  03C6               	decf	adcToString@value+1,f
  2129  0303  02C6               	subwf	adcToString@value+1,f
  2130  0304                     l1989:
  2131                           
  2132                           ;main.c: 104:     digito = value/10;
  2133  0304  300A               	movlw	10
  2134  0305  00F0               	movwf	___lwdiv@divisor
  2135  0306  3000               	movlw	0
  2136  0307  00F1               	movwf	___lwdiv@divisor+1
  2137  0308  0846               	movf	adcToString@value+1,w
  2138  0309  00F3               	movwf	___lwdiv@dividend+1
  2139  030A  0845               	movf	adcToString@value,w
  2140  030B  00F2               	movwf	___lwdiv@dividend
  2141  030C  120A  158A  2705  120A  118A  	fcall	___lwdiv
  2142  0311  0871               	movf	?___lwdiv+1,w
  2143  0312  1283               	bcf	3,5	;RP0=0, select bank0
  2144  0313  1303               	bcf	3,6	;RP1=0, select bank0
  2145  0314  00CE               	movwf	adcToString@digito+1
  2146  0315  0870               	movf	?___lwdiv,w
  2147  0316  00CD               	movwf	adcToString@digito
  2148  0317                     l1991:
  2149                           
  2150                           ;main.c: 105:     salida[2] = digito +48;
  2151  0317  084D               	movf	adcToString@digito,w
  2152  0318  3E30               	addlw	48
  2153  0319  00C7               	movwf	??_adcToString
  2154  031A  0847               	movf	??_adcToString,w
  2155  031B  00CA               	movwf	adcToString@salida+2
  2156  031C                     l1993:
  2157                           
  2158                           ;main.c: 106:     digito = value % 10;
  2159  031C  300A               	movlw	10
  2160  031D  00F0               	movwf	___lwmod@divisor
  2161  031E  3000               	movlw	0
  2162  031F  00F1               	movwf	___lwmod@divisor+1
  2163  0320  0846               	movf	adcToString@value+1,w
  2164  0321  00F3               	movwf	___lwmod@dividend+1
  2165  0322  0845               	movf	adcToString@value,w
  2166  0323  00F2               	movwf	___lwmod@dividend
  2167  0324  120A  158A  2689  120A  118A  	fcall	___lwmod
  2168  0329  0871               	movf	?___lwmod+1,w
  2169  032A  1283               	bcf	3,5	;RP0=0, select bank0
  2170  032B  1303               	bcf	3,6	;RP1=0, select bank0
  2171  032C  00CE               	movwf	adcToString@digito+1
  2172  032D  0870               	movf	?___lwmod,w
  2173  032E  00CD               	movwf	adcToString@digito
  2174  032F                     l1995:
  2175                           
  2176                           ;main.c: 107:     salida[3] = digito +48;
  2177  032F  084D               	movf	adcToString@digito,w
  2178  0330  3E30               	addlw	48
  2179  0331  00C7               	movwf	??_adcToString
  2180  0332  0847               	movf	??_adcToString,w
  2181  0333  00CB               	movwf	adcToString@salida+3
  2182  0334                     l1997:
  2183                           
  2184                           ;main.c: 108:     salida[4] = '\0';
  2185  0334  01CC               	clrf	adcToString@salida+4
  2186  0335                     l1999:
  2187                           
  2188                           ;main.c: 109:     return salida;
  2189  0335  3048               	movlw	(low (adcToString@salida| 0))& (0+255)
  2190  0336                     l49:
  2191  0336  0008               	return
  2192  0337                     __end_of_adcToString:
  2193                           
  2194                           	psect	text10
  2195  03DB                     __ptext10:	
  2196 ;; *************** function ___xxtofl *****************
  2197 ;; Defined at:
  2198 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\xxtofl.c"
  2199 ;; Parameters:    Size  Location     Type
  2200 ;;  sign            1    wreg     unsigned char 
  2201 ;;  val             4    0[COMMON] long 
  2202 ;; Auto vars:     Size  Location     Type
  2203 ;;  sign            1    8[COMMON] unsigned char 
  2204 ;;  arg             4   10[COMMON] unsigned long 
  2205 ;;  exp             1    9[COMMON] unsigned char 
  2206 ;; Return value:  Size  Location     Type
  2207 ;;                  4    0[COMMON] unsigned char 
  2208 ;; Registers used:
  2209 ;;		wreg, status,2, status,0
  2210 ;; Tracked objects:
  2211 ;;		On entry : 0/0
  2212 ;;		On exit  : 0/0
  2213 ;;		Unchanged: 0/0
  2214 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2215 ;;      Params:         4       0       0       0       0
  2216 ;;      Locals:         6       0       0       0       0
  2217 ;;      Temps:          4       0       0       0       0
  2218 ;;      Totals:        14       0       0       0       0
  2219 ;;Total ram usage:       14 bytes
  2220 ;; Hardware stack levels used:    1
  2221 ;; This function calls:
  2222 ;;		Nothing
  2223 ;; This function is called by:
  2224 ;;		_adcToString
  2225 ;; This function uses a non-reentrant model
  2226 ;;
  2227                           
  2228                           
  2229                           ;psect for function ___xxtofl
  2230  03DB                     ___xxtofl:
  2231                           
  2232                           ;incstack = 0
  2233                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  2234                           ;___xxtofl@sign stored from wreg
  2235  03DB  00F8               	movwf	___xxtofl@sign
  2236  03DC                     l1855:
  2237  03DC  0878               	movf	___xxtofl@sign,w
  2238  03DD  1903               	btfsc	3,2
  2239  03DE  2BE0               	goto	u2681
  2240  03DF  2BE1               	goto	u2680
  2241  03E0                     u2681:
  2242  03E0  2BF5               	goto	l1861
  2243  03E1                     u2680:
  2244  03E1                     l1857:
  2245  03E1  1FF3               	btfss	___xxtofl@val+3,7
  2246  03E2  2BE4               	goto	u2691
  2247  03E3  2BE5               	goto	u2690
  2248  03E4                     u2691:
  2249  03E4  2BF5               	goto	l1861
  2250  03E5                     u2690:
  2251  03E5                     l1859:
  2252  03E5  0970               	comf	___xxtofl@val,w
  2253  03E6  00FA               	movwf	___xxtofl@arg
  2254  03E7  0971               	comf	___xxtofl@val+1,w
  2255  03E8  00FB               	movwf	___xxtofl@arg+1
  2256  03E9  0972               	comf	___xxtofl@val+2,w
  2257  03EA  00FC               	movwf	___xxtofl@arg+2
  2258  03EB  0973               	comf	___xxtofl@val+3,w
  2259  03EC  00FD               	movwf	___xxtofl@arg+3
  2260  03ED  0AFA               	incf	___xxtofl@arg,f
  2261  03EE  1903               	skipnz
  2262  03EF  0AFB               	incf	___xxtofl@arg+1,f
  2263  03F0  1903               	skipnz
  2264  03F1  0AFC               	incf	___xxtofl@arg+2,f
  2265  03F2  1903               	skipnz
  2266  03F3  0AFD               	incf	___xxtofl@arg+3,f
  2267  03F4  2BFD               	goto	l712
  2268  03F5                     l1861:
  2269  03F5  0873               	movf	___xxtofl@val+3,w
  2270  03F6  00FD               	movwf	___xxtofl@arg+3
  2271  03F7  0872               	movf	___xxtofl@val+2,w
  2272  03F8  00FC               	movwf	___xxtofl@arg+2
  2273  03F9  0871               	movf	___xxtofl@val+1,w
  2274  03FA  00FB               	movwf	___xxtofl@arg+1
  2275  03FB  0870               	movf	___xxtofl@val,w
  2276  03FC  00FA               	movwf	___xxtofl@arg
  2277  03FD                     l712:
  2278  03FD  0873               	movf	___xxtofl@val+3,w
  2279  03FE  0472               	iorwf	___xxtofl@val+2,w
  2280  03FF  0471               	iorwf	___xxtofl@val+1,w
  2281  0400  0470               	iorwf	___xxtofl@val,w
  2282  0401  1D03               	skipz
  2283  0402  2C04               	goto	u2701
  2284  0403  2C05               	goto	u2700
  2285  0404                     u2701:
  2286  0404  2C0E               	goto	l1867
  2287  0405                     u2700:
  2288  0405                     l1863:
  2289  0405  3000               	movlw	0
  2290  0406  00F3               	movwf	?___xxtofl+3
  2291  0407  3000               	movlw	0
  2292  0408  00F2               	movwf	?___xxtofl+2
  2293  0409  3000               	movlw	0
  2294  040A  00F1               	movwf	?___xxtofl+1
  2295  040B  3000               	movlw	0
  2296  040C  00F0               	movwf	?___xxtofl
  2297  040D  2C94               	goto	l714
  2298  040E                     l1867:
  2299  040E  3096               	movlw	150
  2300  040F  00F4               	movwf	??___xxtofl
  2301  0410  0874               	movf	??___xxtofl,w
  2302  0411  00F9               	movwf	___xxtofl@exp
  2303  0412  2C20               	goto	l1871
  2304  0413                     l1869:
  2305  0413  3001               	movlw	1
  2306  0414  00F4               	movwf	??___xxtofl
  2307  0415  0874               	movf	??___xxtofl,w
  2308  0416  07F9               	addwf	___xxtofl@exp,f
  2309  0417  3001               	movlw	1
  2310  0418                     u2715:
  2311  0418  1003               	clrc
  2312  0419  0CFD               	rrf	___xxtofl@arg+3,f
  2313  041A  0CFC               	rrf	___xxtofl@arg+2,f
  2314  041B  0CFB               	rrf	___xxtofl@arg+1,f
  2315  041C  0CFA               	rrf	___xxtofl@arg,f
  2316  041D  3EFF               	addlw	-1
  2317  041E  1D03               	skipz
  2318  041F  2C18               	goto	u2715
  2319  0420                     l1871:
  2320  0420  30FE               	movlw	254
  2321  0421  057D               	andwf	___xxtofl@arg+3,w
  2322  0422  1D03               	btfss	3,2
  2323  0423  2C25               	goto	u2721
  2324  0424  2C26               	goto	u2720
  2325  0425                     u2721:
  2326  0425  2C13               	goto	l1869
  2327  0426                     u2720:
  2328  0426  2C42               	goto	l718
  2329  0427                     l1873:
  2330  0427  3001               	movlw	1
  2331  0428  00F4               	movwf	??___xxtofl
  2332  0429  0874               	movf	??___xxtofl,w
  2333  042A  07F9               	addwf	___xxtofl@exp,f
  2334  042B                     l1875:
  2335  042B  3001               	movlw	1
  2336  042C  07FA               	addwf	___xxtofl@arg,f
  2337  042D  3000               	movlw	0
  2338  042E  1803               	skipnc
  2339  042F  3001               	movlw	1
  2340  0430  07FB               	addwf	___xxtofl@arg+1,f
  2341  0431  3000               	movlw	0
  2342  0432  1803               	skipnc
  2343  0433  3001               	movlw	1
  2344  0434  07FC               	addwf	___xxtofl@arg+2,f
  2345  0435  3000               	movlw	0
  2346  0436  1803               	skipnc
  2347  0437  3001               	movlw	1
  2348  0438  07FD               	addwf	___xxtofl@arg+3,f
  2349  0439                     l1877:
  2350  0439  3001               	movlw	1
  2351  043A                     u2735:
  2352  043A  1003               	clrc
  2353  043B  0CFD               	rrf	___xxtofl@arg+3,f
  2354  043C  0CFC               	rrf	___xxtofl@arg+2,f
  2355  043D  0CFB               	rrf	___xxtofl@arg+1,f
  2356  043E  0CFA               	rrf	___xxtofl@arg,f
  2357  043F  3EFF               	addlw	-1
  2358  0440  1D03               	skipz
  2359  0441  2C3A               	goto	u2735
  2360  0442                     l718:
  2361  0442  30FF               	movlw	255
  2362  0443  057D               	andwf	___xxtofl@arg+3,w
  2363  0444  1D03               	btfss	3,2
  2364  0445  2C47               	goto	u2741
  2365  0446  2C48               	goto	u2740
  2366  0447                     u2741:
  2367  0447  2C27               	goto	l1873
  2368  0448                     u2740:
  2369  0448  2C54               	goto	l1881
  2370  0449                     l1879:
  2371  0449  3001               	movlw	1
  2372  044A  02F9               	subwf	___xxtofl@exp,f
  2373  044B  3001               	movlw	1
  2374  044C  00F4               	movwf	??___xxtofl
  2375  044D                     u2755:
  2376  044D  1003               	clrc
  2377  044E  0DFA               	rlf	___xxtofl@arg,f
  2378  044F  0DFB               	rlf	___xxtofl@arg+1,f
  2379  0450  0DFC               	rlf	___xxtofl@arg+2,f
  2380  0451  0DFD               	rlf	___xxtofl@arg+3,f
  2381  0452  0BF4               	decfsz	??___xxtofl,f
  2382  0453  2C4D               	goto	u2755
  2383  0454                     l1881:
  2384  0454  1BFC               	btfsc	___xxtofl@arg+2,7
  2385  0455  2C57               	goto	u2761
  2386  0456  2C58               	goto	u2760
  2387  0457                     u2761:
  2388  0457  2C5E               	goto	l725
  2389  0458                     u2760:
  2390  0458                     l1883:
  2391  0458  3002               	movlw	2
  2392  0459  0279               	subwf	___xxtofl@exp,w
  2393  045A  1803               	skipnc
  2394  045B  2C5D               	goto	u2771
  2395  045C  2C5E               	goto	u2770
  2396  045D                     u2771:
  2397  045D  2C49               	goto	l1879
  2398  045E                     u2770:
  2399  045E                     l725:
  2400  045E  1879               	btfsc	___xxtofl@exp,0
  2401  045F  2C61               	goto	u2781
  2402  0460  2C62               	goto	u2780
  2403  0461                     u2781:
  2404  0461  2C6A               	goto	l726
  2405  0462                     u2780:
  2406  0462                     l1885:
  2407  0462  30FF               	movlw	255
  2408  0463  05FA               	andwf	___xxtofl@arg,f
  2409  0464  30FF               	movlw	255
  2410  0465  05FB               	andwf	___xxtofl@arg+1,f
  2411  0466  307F               	movlw	127
  2412  0467  05FC               	andwf	___xxtofl@arg+2,f
  2413  0468  30FF               	movlw	255
  2414  0469  05FD               	andwf	___xxtofl@arg+3,f
  2415  046A                     l726:
  2416  046A  1003               	clrc
  2417  046B  0CF9               	rrf	___xxtofl@exp,f
  2418  046C                     l1887:
  2419  046C  0879               	movf	___xxtofl@exp,w
  2420  046D  00F4               	movwf	??___xxtofl
  2421  046E  01F5               	clrf	??___xxtofl+1
  2422  046F  01F6               	clrf	??___xxtofl+2
  2423  0470  01F7               	clrf	??___xxtofl+3
  2424  0471  3018               	movlw	24
  2425  0472                     u2795:
  2426  0472  1003               	clrc
  2427  0473  0DF4               	rlf	??___xxtofl,f
  2428  0474  0DF5               	rlf	??___xxtofl+1,f
  2429  0475  0DF6               	rlf	??___xxtofl+2,f
  2430  0476  0DF7               	rlf	??___xxtofl+3,f
  2431  0477                     u2790:
  2432  0477  3EFF               	addlw	-1
  2433  0478  1D03               	skipz
  2434  0479  2C72               	goto	u2795
  2435  047A  0874               	movf	??___xxtofl,w
  2436  047B  04FA               	iorwf	___xxtofl@arg,f
  2437  047C  0875               	movf	??___xxtofl+1,w
  2438  047D  04FB               	iorwf	___xxtofl@arg+1,f
  2439  047E  0876               	movf	??___xxtofl+2,w
  2440  047F  04FC               	iorwf	___xxtofl@arg+2,f
  2441  0480  0877               	movf	??___xxtofl+3,w
  2442  0481  04FD               	iorwf	___xxtofl@arg+3,f
  2443  0482                     l1889:
  2444  0482  0878               	movf	___xxtofl@sign,w
  2445  0483  1903               	btfsc	3,2
  2446  0484  2C86               	goto	u2801
  2447  0485  2C87               	goto	u2800
  2448  0486                     u2801:
  2449  0486  2C8C               	goto	l1895
  2450  0487                     u2800:
  2451  0487                     l1891:
  2452  0487  1FF3               	btfss	___xxtofl@val+3,7
  2453  0488  2C8A               	goto	u2811
  2454  0489  2C8B               	goto	u2810
  2455  048A                     u2811:
  2456  048A  2C8C               	goto	l1895
  2457  048B                     u2810:
  2458  048B                     l1893:
  2459  048B  17FD               	bsf	___xxtofl@arg+3,7
  2460  048C                     l1895:
  2461  048C  087D               	movf	___xxtofl@arg+3,w
  2462  048D  00F3               	movwf	?___xxtofl+3
  2463  048E  087C               	movf	___xxtofl@arg+2,w
  2464  048F  00F2               	movwf	?___xxtofl+2
  2465  0490  087B               	movf	___xxtofl@arg+1,w
  2466  0491  00F1               	movwf	?___xxtofl+1
  2467  0492  087A               	movf	___xxtofl@arg,w
  2468  0493  00F0               	movwf	?___xxtofl
  2469  0494                     l714:
  2470  0494  0008               	return
  2471  0495                     __end_of___xxtofl:
  2472                           
  2473                           	psect	text11
  2474  0E3D                     __ptext11:	
  2475 ;; *************** function ___wmul *****************
  2476 ;; Defined at:
  2477 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul16.c"
  2478 ;; Parameters:    Size  Location     Type
  2479 ;;  multiplier      2    0[COMMON] unsigned int 
  2480 ;;  multiplicand    2    2[COMMON] unsigned int 
  2481 ;; Auto vars:     Size  Location     Type
  2482 ;;  product         2    4[COMMON] unsigned int 
  2483 ;; Return value:  Size  Location     Type
  2484 ;;                  2    0[COMMON] unsigned int 
  2485 ;; Registers used:
  2486 ;;		wreg, status,2, status,0
  2487 ;; Tracked objects:
  2488 ;;		On entry : 0/0
  2489 ;;		On exit  : 0/0
  2490 ;;		Unchanged: 0/0
  2491 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2492 ;;      Params:         4       0       0       0       0
  2493 ;;      Locals:         2       0       0       0       0
  2494 ;;      Temps:          0       0       0       0       0
  2495 ;;      Totals:         6       0       0       0       0
  2496 ;;Total ram usage:        6 bytes
  2497 ;; Hardware stack levels used:    1
  2498 ;; This function calls:
  2499 ;;		Nothing
  2500 ;; This function is called by:
  2501 ;;		_adcToString
  2502 ;; This function uses a non-reentrant model
  2503 ;;
  2504                           
  2505                           
  2506                           ;psect for function ___wmul
  2507  0E3D                     ___wmul:
  2508  0E3D                     l1497:	
  2509                           ;incstack = 0
  2510                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  2511                           
  2512  0E3D  01F4               	clrf	___wmul@product
  2513  0E3E  01F5               	clrf	___wmul@product+1
  2514  0E3F                     l1499:
  2515  0E3F  1C70               	btfss	___wmul@multiplier,0
  2516  0E40  2E42               	goto	u1761
  2517  0E41  2E43               	goto	u1760
  2518  0E42                     u1761:
  2519  0E42  2E49               	goto	l279
  2520  0E43                     u1760:
  2521  0E43                     l1501:
  2522  0E43  0872               	movf	___wmul@multiplicand,w
  2523  0E44  07F4               	addwf	___wmul@product,f
  2524  0E45  1803               	skipnc
  2525  0E46  0AF5               	incf	___wmul@product+1,f
  2526  0E47  0873               	movf	___wmul@multiplicand+1,w
  2527  0E48  07F5               	addwf	___wmul@product+1,f
  2528  0E49                     l279:
  2529  0E49  3001               	movlw	1
  2530  0E4A                     u1775:
  2531  0E4A  1003               	clrc
  2532  0E4B  0DF2               	rlf	___wmul@multiplicand,f
  2533  0E4C  0DF3               	rlf	___wmul@multiplicand+1,f
  2534  0E4D  3EFF               	addlw	-1
  2535  0E4E  1D03               	skipz
  2536  0E4F  2E4A               	goto	u1775
  2537  0E50                     l1503:
  2538  0E50  3001               	movlw	1
  2539  0E51                     u1785:
  2540  0E51  1003               	clrc
  2541  0E52  0CF1               	rrf	___wmul@multiplier+1,f
  2542  0E53  0CF0               	rrf	___wmul@multiplier,f
  2543  0E54  3EFF               	addlw	-1
  2544  0E55  1D03               	skipz
  2545  0E56  2E51               	goto	u1785
  2546  0E57                     l1505:
  2547  0E57  0870               	movf	___wmul@multiplier,w
  2548  0E58  0471               	iorwf	___wmul@multiplier+1,w
  2549  0E59  1D03               	btfss	3,2
  2550  0E5A  2E5C               	goto	u1791
  2551  0E5B  2E5D               	goto	u1790
  2552  0E5C                     u1791:
  2553  0E5C  2E3F               	goto	l1499
  2554  0E5D                     u1790:
  2555  0E5D                     l1507:
  2556  0E5D  0875               	movf	___wmul@product+1,w
  2557  0E5E  00F1               	movwf	?___wmul+1
  2558  0E5F  0874               	movf	___wmul@product,w
  2559  0E60  00F0               	movwf	?___wmul
  2560  0E61                     l281:
  2561  0E61  0008               	return
  2562  0E62                     __end_of___wmul:
  2563                           
  2564                           	psect	text12
  2565  0E89                     __ptext12:	
  2566 ;; *************** function ___lwmod *****************
  2567 ;; Defined at:
  2568 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwmod.c"
  2569 ;; Parameters:    Size  Location     Type
  2570 ;;  divisor         2    0[COMMON] unsigned int 
  2571 ;;  dividend        2    2[COMMON] unsigned int 
  2572 ;; Auto vars:     Size  Location     Type
  2573 ;;  counter         1    5[COMMON] unsigned char 
  2574 ;; Return value:  Size  Location     Type
  2575 ;;                  2    0[COMMON] unsigned int 
  2576 ;; Registers used:
  2577 ;;		wreg, status,2, status,0
  2578 ;; Tracked objects:
  2579 ;;		On entry : 0/0
  2580 ;;		On exit  : 0/0
  2581 ;;		Unchanged: 0/0
  2582 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2583 ;;      Params:         4       0       0       0       0
  2584 ;;      Locals:         1       0       0       0       0
  2585 ;;      Temps:          1       0       0       0       0
  2586 ;;      Totals:         6       0       0       0       0
  2587 ;;Total ram usage:        6 bytes
  2588 ;; Hardware stack levels used:    1
  2589 ;; This function calls:
  2590 ;;		Nothing
  2591 ;; This function is called by:
  2592 ;;		_adcToString
  2593 ;; This function uses a non-reentrant model
  2594 ;;
  2595                           
  2596                           
  2597                           ;psect for function ___lwmod
  2598  0E89                     ___lwmod:
  2599  0E89                     l1693:	
  2600                           ;incstack = 0
  2601                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  2602                           
  2603  0E89  0870               	movf	___lwmod@divisor,w
  2604  0E8A  0471               	iorwf	___lwmod@divisor+1,w
  2605  0E8B  1903               	btfsc	3,2
  2606  0E8C  2E8E               	goto	u2251
  2607  0E8D  2E8F               	goto	u2250
  2608  0E8E                     u2251:
  2609  0E8E  2EBE               	goto	l1711
  2610  0E8F                     u2250:
  2611  0E8F                     l1695:
  2612  0E8F  01F5               	clrf	___lwmod@counter
  2613  0E90  0AF5               	incf	___lwmod@counter,f
  2614  0E91  2E9D               	goto	l1701
  2615  0E92                     l1697:
  2616  0E92  3001               	movlw	1
  2617  0E93                     u2265:
  2618  0E93  1003               	clrc
  2619  0E94  0DF0               	rlf	___lwmod@divisor,f
  2620  0E95  0DF1               	rlf	___lwmod@divisor+1,f
  2621  0E96  3EFF               	addlw	-1
  2622  0E97  1D03               	skipz
  2623  0E98  2E93               	goto	u2265
  2624  0E99                     l1699:
  2625  0E99  3001               	movlw	1
  2626  0E9A  00F4               	movwf	??___lwmod
  2627  0E9B  0874               	movf	??___lwmod,w
  2628  0E9C  07F5               	addwf	___lwmod@counter,f
  2629  0E9D                     l1701:
  2630  0E9D  1FF1               	btfss	___lwmod@divisor+1,7
  2631  0E9E  2EA0               	goto	u2271
  2632  0E9F  2EA1               	goto	u2270
  2633  0EA0                     u2271:
  2634  0EA0  2E92               	goto	l1697
  2635  0EA1                     u2270:
  2636  0EA1                     l1703:
  2637  0EA1  0871               	movf	___lwmod@divisor+1,w
  2638  0EA2  0273               	subwf	___lwmod@dividend+1,w
  2639  0EA3  1D03               	skipz
  2640  0EA4  2EA7               	goto	u2285
  2641  0EA5  0870               	movf	___lwmod@divisor,w
  2642  0EA6  0272               	subwf	___lwmod@dividend,w
  2643  0EA7                     u2285:
  2644  0EA7  1C03               	skipc
  2645  0EA8  2EAA               	goto	u2281
  2646  0EA9  2EAB               	goto	u2280
  2647  0EAA                     u2281:
  2648  0EAA  2EB1               	goto	l1707
  2649  0EAB                     u2280:
  2650  0EAB                     l1705:
  2651  0EAB  0870               	movf	___lwmod@divisor,w
  2652  0EAC  02F2               	subwf	___lwmod@dividend,f
  2653  0EAD  0871               	movf	___lwmod@divisor+1,w
  2654  0EAE  1C03               	skipc
  2655  0EAF  03F3               	decf	___lwmod@dividend+1,f
  2656  0EB0  02F3               	subwf	___lwmod@dividend+1,f
  2657  0EB1                     l1707:
  2658  0EB1  3001               	movlw	1
  2659  0EB2                     u2295:
  2660  0EB2  1003               	clrc
  2661  0EB3  0CF1               	rrf	___lwmod@divisor+1,f
  2662  0EB4  0CF0               	rrf	___lwmod@divisor,f
  2663  0EB5  3EFF               	addlw	-1
  2664  0EB6  1D03               	skipz
  2665  0EB7  2EB2               	goto	u2295
  2666  0EB8                     l1709:
  2667  0EB8  3001               	movlw	1
  2668  0EB9  02F5               	subwf	___lwmod@counter,f
  2669  0EBA  1D03               	btfss	3,2
  2670  0EBB  2EBD               	goto	u2301
  2671  0EBC  2EBE               	goto	u2300
  2672  0EBD                     u2301:
  2673  0EBD  2EA1               	goto	l1703
  2674  0EBE                     u2300:
  2675  0EBE                     l1711:
  2676  0EBE  0873               	movf	___lwmod@dividend+1,w
  2677  0EBF  00F1               	movwf	?___lwmod+1
  2678  0EC0  0872               	movf	___lwmod@dividend,w
  2679  0EC1  00F0               	movwf	?___lwmod
  2680  0EC2                     l561:
  2681  0EC2  0008               	return
  2682  0EC3                     __end_of___lwmod:
  2683                           
  2684                           	psect	text13
  2685  0F05                     __ptext13:	
  2686 ;; *************** function ___lwdiv *****************
  2687 ;; Defined at:
  2688 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwdiv.c"
  2689 ;; Parameters:    Size  Location     Type
  2690 ;;  divisor         2    0[COMMON] unsigned int 
  2691 ;;  dividend        2    2[COMMON] unsigned int 
  2692 ;; Auto vars:     Size  Location     Type
  2693 ;;  quotient        2    5[COMMON] unsigned int 
  2694 ;;  counter         1    7[COMMON] unsigned char 
  2695 ;; Return value:  Size  Location     Type
  2696 ;;                  2    0[COMMON] unsigned int 
  2697 ;; Registers used:
  2698 ;;		wreg, status,2, status,0
  2699 ;; Tracked objects:
  2700 ;;		On entry : 0/0
  2701 ;;		On exit  : 0/0
  2702 ;;		Unchanged: 0/0
  2703 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2704 ;;      Params:         4       0       0       0       0
  2705 ;;      Locals:         3       0       0       0       0
  2706 ;;      Temps:          1       0       0       0       0
  2707 ;;      Totals:         8       0       0       0       0
  2708 ;;Total ram usage:        8 bytes
  2709 ;; Hardware stack levels used:    1
  2710 ;; This function calls:
  2711 ;;		Nothing
  2712 ;; This function is called by:
  2713 ;;		_adcToString
  2714 ;; This function uses a non-reentrant model
  2715 ;;
  2716                           
  2717                           
  2718                           ;psect for function ___lwdiv
  2719  0F05                     ___lwdiv:
  2720  0F05                     l1667:	
  2721                           ;incstack = 0
  2722                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  2723                           
  2724  0F05  01F5               	clrf	___lwdiv@quotient
  2725  0F06  01F6               	clrf	___lwdiv@quotient+1
  2726  0F07                     l1669:
  2727  0F07  0870               	movf	___lwdiv@divisor,w
  2728  0F08  0471               	iorwf	___lwdiv@divisor+1,w
  2729  0F09  1903               	btfsc	3,2
  2730  0F0A  2F0C               	goto	u2181
  2731  0F0B  2F0D               	goto	u2180
  2732  0F0C                     u2181:
  2733  0F0C  2F44               	goto	l1689
  2734  0F0D                     u2180:
  2735  0F0D                     l1671:
  2736  0F0D  01F7               	clrf	___lwdiv@counter
  2737  0F0E  0AF7               	incf	___lwdiv@counter,f
  2738  0F0F  2F1B               	goto	l1677
  2739  0F10                     l1673:
  2740  0F10  3001               	movlw	1
  2741  0F11                     u2195:
  2742  0F11  1003               	clrc
  2743  0F12  0DF0               	rlf	___lwdiv@divisor,f
  2744  0F13  0DF1               	rlf	___lwdiv@divisor+1,f
  2745  0F14  3EFF               	addlw	-1
  2746  0F15  1D03               	skipz
  2747  0F16  2F11               	goto	u2195
  2748  0F17                     l1675:
  2749  0F17  3001               	movlw	1
  2750  0F18  00F4               	movwf	??___lwdiv
  2751  0F19  0874               	movf	??___lwdiv,w
  2752  0F1A  07F7               	addwf	___lwdiv@counter,f
  2753  0F1B                     l1677:
  2754  0F1B  1FF1               	btfss	___lwdiv@divisor+1,7
  2755  0F1C  2F1E               	goto	u2201
  2756  0F1D  2F1F               	goto	u2200
  2757  0F1E                     u2201:
  2758  0F1E  2F10               	goto	l1673
  2759  0F1F                     u2200:
  2760  0F1F                     l1679:
  2761  0F1F  3001               	movlw	1
  2762  0F20                     u2215:
  2763  0F20  1003               	clrc
  2764  0F21  0DF5               	rlf	___lwdiv@quotient,f
  2765  0F22  0DF6               	rlf	___lwdiv@quotient+1,f
  2766  0F23  3EFF               	addlw	-1
  2767  0F24  1D03               	skipz
  2768  0F25  2F20               	goto	u2215
  2769  0F26  0871               	movf	___lwdiv@divisor+1,w
  2770  0F27  0273               	subwf	___lwdiv@dividend+1,w
  2771  0F28  1D03               	skipz
  2772  0F29  2F2C               	goto	u2225
  2773  0F2A  0870               	movf	___lwdiv@divisor,w
  2774  0F2B  0272               	subwf	___lwdiv@dividend,w
  2775  0F2C                     u2225:
  2776  0F2C  1C03               	skipc
  2777  0F2D  2F2F               	goto	u2221
  2778  0F2E  2F30               	goto	u2220
  2779  0F2F                     u2221:
  2780  0F2F  2F37               	goto	l1685
  2781  0F30                     u2220:
  2782  0F30                     l1681:
  2783  0F30  0870               	movf	___lwdiv@divisor,w
  2784  0F31  02F2               	subwf	___lwdiv@dividend,f
  2785  0F32  0871               	movf	___lwdiv@divisor+1,w
  2786  0F33  1C03               	skipc
  2787  0F34  03F3               	decf	___lwdiv@dividend+1,f
  2788  0F35  02F3               	subwf	___lwdiv@dividend+1,f
  2789  0F36                     l1683:
  2790  0F36  1475               	bsf	___lwdiv@quotient,0
  2791  0F37                     l1685:
  2792  0F37  3001               	movlw	1
  2793  0F38                     u2235:
  2794  0F38  1003               	clrc
  2795  0F39  0CF1               	rrf	___lwdiv@divisor+1,f
  2796  0F3A  0CF0               	rrf	___lwdiv@divisor,f
  2797  0F3B  3EFF               	addlw	-1
  2798  0F3C  1D03               	skipz
  2799  0F3D  2F38               	goto	u2235
  2800  0F3E                     l1687:
  2801  0F3E  3001               	movlw	1
  2802  0F3F  02F7               	subwf	___lwdiv@counter,f
  2803  0F40  1D03               	btfss	3,2
  2804  0F41  2F43               	goto	u2241
  2805  0F42  2F44               	goto	u2240
  2806  0F43                     u2241:
  2807  0F43  2F1F               	goto	l1679
  2808  0F44                     u2240:
  2809  0F44                     l1689:
  2810  0F44  0876               	movf	___lwdiv@quotient+1,w
  2811  0F45  00F1               	movwf	?___lwdiv+1
  2812  0F46  0875               	movf	___lwdiv@quotient,w
  2813  0F47  00F0               	movwf	?___lwdiv
  2814  0F48                     l551:
  2815  0F48  0008               	return
  2816  0F49                     __end_of___lwdiv:
  2817                           
  2818                           	psect	text14
  2819  0193                     __ptext14:	
  2820 ;; *************** function ___fltol *****************
  2821 ;; Defined at:
  2822 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\fltol.c"
  2823 ;; Parameters:    Size  Location     Type
  2824 ;;  f1              4   26[BANK0 ] unsigned int 
  2825 ;; Auto vars:     Size  Location     Type
  2826 ;;  exp1            1   36[BANK0 ] unsigned char 
  2827 ;;  sign1           1   35[BANK0 ] unsigned char 
  2828 ;; Return value:  Size  Location     Type
  2829 ;;                  4   26[BANK0 ] long 
  2830 ;; Registers used:
  2831 ;;		wreg, status,2, status,0
  2832 ;; Tracked objects:
  2833 ;;		On entry : 0/0
  2834 ;;		On exit  : 0/0
  2835 ;;		Unchanged: 0/0
  2836 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2837 ;;      Params:         0       4       0       0       0
  2838 ;;      Locals:         0       2       0       0       0
  2839 ;;      Temps:          0       5       0       0       0
  2840 ;;      Totals:         0      11       0       0       0
  2841 ;;Total ram usage:       11 bytes
  2842 ;; Hardware stack levels used:    1
  2843 ;; This function calls:
  2844 ;;		Nothing
  2845 ;; This function is called by:
  2846 ;;		_adcToString
  2847 ;; This function uses a non-reentrant model
  2848 ;;
  2849                           
  2850                           
  2851                           ;psect for function ___fltol
  2852  0193                     ___fltol:
  2853  0193                     l1631:	
  2854                           ;incstack = 0
  2855                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  2856                           
  2857  0193  1003               	clrc
  2858  0194  1283               	bcf	3,5	;RP0=0, select bank0
  2859  0195  1303               	bcf	3,6	;RP1=0, select bank0
  2860  0196  0D3C               	rlf	___fltol@f1+2,w
  2861  0197  0D3D               	rlf	___fltol@f1+3,w
  2862  0198  00BE               	movwf	??___fltol
  2863  0199  083E               	movf	??___fltol,w
  2864  019A  00C4               	movwf	___fltol@exp1
  2865  019B  0844               	movf	___fltol@exp1,w
  2866  019C  1D03               	btfss	3,2
  2867  019D  299F               	goto	u2081
  2868  019E  29A0               	goto	u2080
  2869  019F                     u2081:
  2870  019F  29A9               	goto	l1637
  2871  01A0                     u2080:
  2872  01A0                     l1633:
  2873  01A0  3000               	movlw	0
  2874  01A1  00BD               	movwf	?___fltol+3
  2875  01A2  3000               	movlw	0
  2876  01A3  00BC               	movwf	?___fltol+2
  2877  01A4  3000               	movlw	0
  2878  01A5  00BB               	movwf	?___fltol+1
  2879  01A6  3000               	movlw	0
  2880  01A7  00BA               	movwf	?___fltol
  2881  01A8  2A0E               	goto	l465
  2882  01A9                     l1637:
  2883  01A9  083A               	movf	___fltol@f1,w
  2884  01AA  00BE               	movwf	??___fltol
  2885  01AB  083B               	movf	___fltol@f1+1,w
  2886  01AC  00BF               	movwf	??___fltol+1
  2887  01AD  083C               	movf	___fltol@f1+2,w
  2888  01AE  00C0               	movwf	??___fltol+2
  2889  01AF  083D               	movf	___fltol@f1+3,w
  2890  01B0  00C1               	movwf	??___fltol+3
  2891  01B1  301F               	movlw	31
  2892  01B2                     u2095:
  2893  01B2  1003               	clrc
  2894  01B3  0CC1               	rrf	??___fltol+3,f
  2895  01B4  0CC0               	rrf	??___fltol+2,f
  2896  01B5  0CBF               	rrf	??___fltol+1,f
  2897  01B6  0CBE               	rrf	??___fltol,f
  2898  01B7                     u2090:
  2899  01B7  3EFF               	addlw	-1
  2900  01B8  1D03               	skipz
  2901  01B9  29B2               	goto	u2095
  2902  01BA  083E               	movf	??___fltol,w
  2903  01BB  00C2               	movwf	??___fltol+4
  2904  01BC  0842               	movf	??___fltol+4,w
  2905  01BD  00C3               	movwf	___fltol@sign1
  2906  01BE                     l1639:
  2907  01BE  17BC               	bsf	___fltol@f1+2,7
  2908  01BF                     l1641:
  2909  01BF  30FF               	movlw	255
  2910  01C0  05BA               	andwf	___fltol@f1,f
  2911  01C1  30FF               	movlw	255
  2912  01C2  05BB               	andwf	___fltol@f1+1,f
  2913  01C3  30FF               	movlw	255
  2914  01C4  05BC               	andwf	___fltol@f1+2,f
  2915  01C5  3000               	movlw	0
  2916  01C6  05BD               	andwf	___fltol@f1+3,f
  2917  01C7                     l1643:
  2918  01C7  3096               	movlw	150
  2919  01C8  02C4               	subwf	___fltol@exp1,f
  2920  01C9                     l1645:
  2921  01C9  1FC4               	btfss	___fltol@exp1,7
  2922  01CA  29CC               	goto	u2101
  2923  01CB  29CD               	goto	u2100
  2924  01CC                     u2101:
  2925  01CC  29E7               	goto	l1655
  2926  01CD                     u2100:
  2927  01CD                     l1647:
  2928  01CD  0844               	movf	___fltol@exp1,w
  2929  01CE  3A80               	xorlw	128
  2930  01CF  3E97               	addlw	151
  2931  01D0  1803               	skipnc
  2932  01D1  29D3               	goto	u2111
  2933  01D2  29D4               	goto	u2110
  2934  01D3                     u2111:
  2935  01D3  29D5               	goto	l1653
  2936  01D4                     u2110:
  2937  01D4  29A0               	goto	l1633
  2938  01D5                     l1653:
  2939  01D5  3001               	movlw	1
  2940  01D6                     u2125:
  2941  01D6  1003               	clrc
  2942  01D7  0CBD               	rrf	___fltol@f1+3,f
  2943  01D8  0CBC               	rrf	___fltol@f1+2,f
  2944  01D9  0CBB               	rrf	___fltol@f1+1,f
  2945  01DA  0CBA               	rrf	___fltol@f1,f
  2946  01DB  3EFF               	addlw	-1
  2947  01DC  1D03               	skipz
  2948  01DD  29D6               	goto	u2125
  2949  01DE  3001               	movlw	1
  2950  01DF  00BE               	movwf	??___fltol
  2951  01E0  083E               	movf	??___fltol,w
  2952  01E1  07C4               	addwf	___fltol@exp1,f
  2953  01E2  1D03               	btfss	3,2
  2954  01E3  29E5               	goto	u2131
  2955  01E4  29E6               	goto	u2130
  2956  01E5                     u2131:
  2957  01E5  29D5               	goto	l1653
  2958  01E6                     u2130:
  2959  01E6  29FE               	goto	l1663
  2960  01E7                     l1655:
  2961  01E7  3020               	movlw	32
  2962  01E8  0244               	subwf	___fltol@exp1,w
  2963  01E9  1C03               	skipc
  2964  01EA  29EC               	goto	u2141
  2965  01EB  29ED               	goto	u2140
  2966  01EC                     u2141:
  2967  01EC  29F9               	goto	l472
  2968  01ED                     u2140:
  2969  01ED  29A0               	goto	l1633
  2970  01EE                     l1661:
  2971  01EE  3001               	movlw	1
  2972  01EF  00BE               	movwf	??___fltol
  2973  01F0                     u2155:
  2974  01F0  1003               	clrc
  2975  01F1  0DBA               	rlf	___fltol@f1,f
  2976  01F2  0DBB               	rlf	___fltol@f1+1,f
  2977  01F3  0DBC               	rlf	___fltol@f1+2,f
  2978  01F4  0DBD               	rlf	___fltol@f1+3,f
  2979  01F5  0BBE               	decfsz	??___fltol,f
  2980  01F6  29F0               	goto	u2155
  2981  01F7  3001               	movlw	1
  2982  01F8  02C4               	subwf	___fltol@exp1,f
  2983  01F9                     l472:
  2984  01F9  0844               	movf	___fltol@exp1,w
  2985  01FA  1D03               	btfss	3,2
  2986  01FB  29FD               	goto	u2161
  2987  01FC  29FE               	goto	u2160
  2988  01FD                     u2161:
  2989  01FD  29EE               	goto	l1661
  2990  01FE                     u2160:
  2991  01FE                     l1663:
  2992  01FE  0843               	movf	___fltol@sign1,w
  2993  01FF  1903               	btfsc	3,2
  2994  0200  2A02               	goto	u2171
  2995  0201  2A03               	goto	u2170
  2996  0202                     u2171:
  2997  0202  2A0E               	goto	l475
  2998  0203                     u2170:
  2999  0203                     l1665:
  3000  0203  09BA               	comf	___fltol@f1,f
  3001  0204  09BB               	comf	___fltol@f1+1,f
  3002  0205  09BC               	comf	___fltol@f1+2,f
  3003  0206  09BD               	comf	___fltol@f1+3,f
  3004  0207  0ABA               	incf	___fltol@f1,f
  3005  0208  1903               	skipnz
  3006  0209  0ABB               	incf	___fltol@f1+1,f
  3007  020A  1903               	skipnz
  3008  020B  0ABC               	incf	___fltol@f1+2,f
  3009  020C  1903               	skipnz
  3010  020D  0ABD               	incf	___fltol@f1+3,f
  3011  020E                     l475:
  3012  020E                     l465:
  3013  020E  0008               	return
  3014  020F                     __end_of___fltol:
  3015                           
  3016                           	psect	text15
  3017  0495                     __ptext15:	
  3018 ;; *************** function ___flmul *****************
  3019 ;; Defined at:
  3020 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcmul.c"
  3021 ;; Parameters:    Size  Location     Type
  3022 ;;  b               4    0[BANK0 ] long 
  3023 ;;  a               4    4[BANK0 ] long 
  3024 ;; Auto vars:     Size  Location     Type
  3025 ;;  prod            4   20[BANK0 ] struct .
  3026 ;;  grs             4   14[BANK0 ] unsigned long 
  3027 ;;  temp            2   24[BANK0 ] struct .
  3028 ;;  bexp            1   19[BANK0 ] unsigned char 
  3029 ;;  aexp            1   18[BANK0 ] unsigned char 
  3030 ;;  sign            1   13[BANK0 ] unsigned char 
  3031 ;; Return value:  Size  Location     Type
  3032 ;;                  4    0[BANK0 ] unsigned char 
  3033 ;; Registers used:
  3034 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  3035 ;; Tracked objects:
  3036 ;;		On entry : 0/0
  3037 ;;		On exit  : 0/0
  3038 ;;		Unchanged: 0/0
  3039 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3040 ;;      Params:         0       8       0       0       0
  3041 ;;      Locals:         0      13       0       0       0
  3042 ;;      Temps:          0       5       0       0       0
  3043 ;;      Totals:         0      26       0       0       0
  3044 ;;Total ram usage:       26 bytes
  3045 ;; Hardware stack levels used:    1
  3046 ;; Hardware stack levels required when called:    1
  3047 ;; This function calls:
  3048 ;;		__Umul8_16
  3049 ;; This function is called by:
  3050 ;;		_adcToString
  3051 ;; This function uses a non-reentrant model
  3052 ;;
  3053                           
  3054                           
  3055                           ;psect for function ___flmul
  3056  0495                     ___flmul:
  3057  0495                     l1715:	
  3058                           ;incstack = 0
  3059                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  3060                           
  3061  0495  1283               	bcf	3,5	;RP0=0, select bank0
  3062  0496  1303               	bcf	3,6	;RP1=0, select bank0
  3063  0497  0823               	movf	___flmul@b+3,w
  3064  0498  3980               	andlw	128
  3065  0499  00A8               	movwf	??___flmul
  3066  049A  0828               	movf	??___flmul,w
  3067  049B  00AD               	movwf	___flmul@sign
  3068  049C                     l1717:
  3069  049C  0823               	movf	___flmul@b+3,w
  3070  049D  00A8               	movwf	??___flmul
  3071  049E  0728               	addwf	??___flmul,w
  3072  049F  00A9               	movwf	??___flmul+1
  3073  04A0  0829               	movf	??___flmul+1,w
  3074  04A1  00B3               	movwf	___flmul@bexp
  3075  04A2                     l1719:
  3076  04A2  1FA2               	btfss	___flmul@b+2,7
  3077  04A3  2CA5               	goto	u2311
  3078  04A4  2CA6               	goto	u2310
  3079  04A5                     u2311:
  3080  04A5  2CA7               	goto	l1723
  3081  04A6                     u2310:
  3082  04A6                     l1721:
  3083  04A6  1433               	bsf	___flmul@bexp,0
  3084  04A7                     l1723:
  3085  04A7  0833               	movf	___flmul@bexp,w
  3086  04A8  1903               	btfsc	3,2
  3087  04A9  2CAB               	goto	u2321
  3088  04AA  2CAC               	goto	u2320
  3089  04AB                     u2321:
  3090  04AB  2CBB               	goto	l1731
  3091  04AC                     u2320:
  3092  04AC                     l1725:
  3093  04AC  0A33               	incf	___flmul@bexp,w
  3094  04AD  1D03               	btfss	3,2
  3095  04AE  2CB0               	goto	u2331
  3096  04AF  2CB1               	goto	u2330
  3097  04B0                     u2331:
  3098  04B0  2CB9               	goto	l1729
  3099  04B1                     u2330:
  3100  04B1                     l1727:
  3101  04B1  3000               	movlw	0
  3102  04B2  00A3               	movwf	___flmul@b+3
  3103  04B3  3000               	movlw	0
  3104  04B4  00A2               	movwf	___flmul@b+2
  3105  04B5  3000               	movlw	0
  3106  04B6  00A1               	movwf	___flmul@b+1
  3107  04B7  3000               	movlw	0
  3108  04B8  00A0               	movwf	___flmul@b
  3109  04B9                     l1729:
  3110  04B9  17A2               	bsf	___flmul@b+2,7
  3111  04BA  2CC3               	goto	l1733
  3112  04BB                     l1731:
  3113  04BB  3000               	movlw	0
  3114  04BC  00A3               	movwf	___flmul@b+3
  3115  04BD  3000               	movlw	0
  3116  04BE  00A2               	movwf	___flmul@b+2
  3117  04BF  3000               	movlw	0
  3118  04C0  00A1               	movwf	___flmul@b+1
  3119  04C1  3000               	movlw	0
  3120  04C2  00A0               	movwf	___flmul@b
  3121  04C3                     l1733:
  3122  04C3  0827               	movf	___flmul@a+3,w
  3123  04C4  3980               	andlw	128
  3124  04C5  00A8               	movwf	??___flmul
  3125  04C6  0828               	movf	??___flmul,w
  3126  04C7  06AD               	xorwf	___flmul@sign,f
  3127  04C8                     l1735:
  3128  04C8  0827               	movf	___flmul@a+3,w
  3129  04C9  00A8               	movwf	??___flmul
  3130  04CA  0728               	addwf	??___flmul,w
  3131  04CB  00A9               	movwf	??___flmul+1
  3132  04CC  0829               	movf	??___flmul+1,w
  3133  04CD  00B2               	movwf	___flmul@aexp
  3134  04CE                     l1737:
  3135  04CE  1FA6               	btfss	___flmul@a+2,7
  3136  04CF  2CD1               	goto	u2341
  3137  04D0  2CD2               	goto	u2340
  3138  04D1                     u2341:
  3139  04D1  2CD3               	goto	l1741
  3140  04D2                     u2340:
  3141  04D2                     l1739:
  3142  04D2  1432               	bsf	___flmul@aexp,0
  3143  04D3                     l1741:
  3144  04D3  0832               	movf	___flmul@aexp,w
  3145  04D4  1903               	btfsc	3,2
  3146  04D5  2CD7               	goto	u2351
  3147  04D6  2CD8               	goto	u2350
  3148  04D7                     u2351:
  3149  04D7  2CE7               	goto	l1749
  3150  04D8                     u2350:
  3151  04D8                     l1743:
  3152  04D8  0A32               	incf	___flmul@aexp,w
  3153  04D9  1D03               	btfss	3,2
  3154  04DA  2CDC               	goto	u2361
  3155  04DB  2CDD               	goto	u2360
  3156  04DC                     u2361:
  3157  04DC  2CE5               	goto	l1747
  3158  04DD                     u2360:
  3159  04DD                     l1745:
  3160  04DD  3000               	movlw	0
  3161  04DE  00A7               	movwf	___flmul@a+3
  3162  04DF  3000               	movlw	0
  3163  04E0  00A6               	movwf	___flmul@a+2
  3164  04E1  3000               	movlw	0
  3165  04E2  00A5               	movwf	___flmul@a+1
  3166  04E3  3000               	movlw	0
  3167  04E4  00A4               	movwf	___flmul@a
  3168  04E5                     l1747:
  3169  04E5  17A6               	bsf	___flmul@a+2,7
  3170  04E6  2CEF               	goto	l1751
  3171  04E7                     l1749:
  3172  04E7  3000               	movlw	0
  3173  04E8  00A7               	movwf	___flmul@a+3
  3174  04E9  3000               	movlw	0
  3175  04EA  00A6               	movwf	___flmul@a+2
  3176  04EB  3000               	movlw	0
  3177  04EC  00A5               	movwf	___flmul@a+1
  3178  04ED  3000               	movlw	0
  3179  04EE  00A4               	movwf	___flmul@a
  3180  04EF                     l1751:
  3181  04EF  0832               	movf	___flmul@aexp,w
  3182  04F0  1903               	btfsc	3,2
  3183  04F1  2CF3               	goto	u2371
  3184  04F2  2CF4               	goto	u2370
  3185  04F3                     u2371:
  3186  04F3  2CF9               	goto	l1755
  3187  04F4                     u2370:
  3188  04F4                     l1753:
  3189  04F4  0833               	movf	___flmul@bexp,w
  3190  04F5  1D03               	btfss	3,2
  3191  04F6  2CF8               	goto	u2381
  3192  04F7  2CF9               	goto	u2380
  3193  04F8                     u2381:
  3194  04F8  2D02               	goto	l1759
  3195  04F9                     u2380:
  3196  04F9                     l1755:
  3197  04F9  3000               	movlw	0
  3198  04FA  00A3               	movwf	?___flmul+3
  3199  04FB  3000               	movlw	0
  3200  04FC  00A2               	movwf	?___flmul+2
  3201  04FD  3000               	movlw	0
  3202  04FE  00A1               	movwf	?___flmul+1
  3203  04FF  3000               	movlw	0
  3204  0500  00A0               	movwf	?___flmul
  3205  0501  2FF5               	goto	l668
  3206  0502                     l1759:
  3207  0502  0820               	movf	___flmul@b,w
  3208  0503  00A8               	movwf	??___flmul
  3209  0504  0828               	movf	??___flmul,w
  3210  0505  00F0               	movwf	__Umul8_16@multiplicand
  3211  0506  0826               	movf	___flmul@a+2,w
  3212  0507  120A  158A  2662  120A  118A  	fcall	__Umul8_16
  3213  050C  0871               	movf	?__Umul8_16+1,w
  3214  050D  1283               	bcf	3,5	;RP0=0, select bank0
  3215  050E  1303               	bcf	3,6	;RP1=0, select bank0
  3216  050F  00B9               	movwf	___flmul@temp+1
  3217  0510  0870               	movf	?__Umul8_16,w
  3218  0511  00B8               	movwf	___flmul@temp
  3219  0512                     l1761:
  3220  0512  0838               	movf	___flmul@temp,w
  3221  0513  00A8               	movwf	??___flmul
  3222  0514  01A9               	clrf	??___flmul+1
  3223  0515  01AA               	clrf	??___flmul+2
  3224  0516  01AB               	clrf	??___flmul+3
  3225  0517  082B               	movf	??___flmul+3,w
  3226  0518  00B1               	movwf	___flmul@grs+3
  3227  0519  082A               	movf	??___flmul+2,w
  3228  051A  00B0               	movwf	___flmul@grs+2
  3229  051B  0829               	movf	??___flmul+1,w
  3230  051C  00AF               	movwf	___flmul@grs+1
  3231  051D  0828               	movf	??___flmul,w
  3232  051E  00AE               	movwf	___flmul@grs
  3233  051F                     l1763:
  3234  051F  0839               	movf	___flmul@temp+1,w
  3235  0520  00A8               	movwf	??___flmul
  3236  0521  01A9               	clrf	??___flmul+1
  3237  0522  01AA               	clrf	??___flmul+2
  3238  0523  01AB               	clrf	??___flmul+3
  3239  0524  082B               	movf	??___flmul+3,w
  3240  0525  00B7               	movwf	___flmul@prod+3
  3241  0526  082A               	movf	??___flmul+2,w
  3242  0527  00B6               	movwf	___flmul@prod+2
  3243  0528  0829               	movf	??___flmul+1,w
  3244  0529  00B5               	movwf	___flmul@prod+1
  3245  052A  0828               	movf	??___flmul,w
  3246  052B  00B4               	movwf	___flmul@prod
  3247  052C  0821               	movf	___flmul@b+1,w
  3248  052D  00A8               	movwf	??___flmul
  3249  052E  0828               	movf	??___flmul,w
  3250  052F  00F0               	movwf	__Umul8_16@multiplicand
  3251  0530  0825               	movf	___flmul@a+1,w
  3252  0531  120A  158A  2662  120A  118A  	fcall	__Umul8_16
  3253  0536  0871               	movf	?__Umul8_16+1,w
  3254  0537  1283               	bcf	3,5	;RP0=0, select bank0
  3255  0538  1303               	bcf	3,6	;RP1=0, select bank0
  3256  0539  00B9               	movwf	___flmul@temp+1
  3257  053A  0870               	movf	?__Umul8_16,w
  3258  053B  00B8               	movwf	___flmul@temp
  3259  053C                     l1765:
  3260  053C  0838               	movf	___flmul@temp,w
  3261  053D  00A8               	movwf	??___flmul
  3262  053E  01A9               	clrf	??___flmul+1
  3263  053F  01AA               	clrf	??___flmul+2
  3264  0540  01AB               	clrf	??___flmul+3
  3265  0541  0828               	movf	??___flmul,w
  3266  0542  07AE               	addwf	___flmul@grs,f
  3267  0543  0829               	movf	??___flmul+1,w
  3268  0544  1103               	clrz
  3269  0545  1803               	skipnc
  3270  0546  3E01               	addlw	1
  3271  0547  1903               	skipnz
  3272  0548  2D4A               	goto	u2391
  3273  0549  07AF               	addwf	___flmul@grs+1,f
  3274  054A                     u2391:
  3275  054A  082A               	movf	??___flmul+2,w
  3276  054B  1103               	clrz
  3277  054C  1803               	skipnc
  3278  054D  3E01               	addlw	1
  3279  054E  1903               	skipnz
  3280  054F  2D51               	goto	u2392
  3281  0550  07B0               	addwf	___flmul@grs+2,f
  3282  0551                     u2392:
  3283  0551  082B               	movf	??___flmul+3,w
  3284  0552  1103               	clrz
  3285  0553  1803               	skipnc
  3286  0554  3E01               	addlw	1
  3287  0555  1903               	skipnz
  3288  0556  2D58               	goto	u2393
  3289  0557  07B1               	addwf	___flmul@grs+3,f
  3290  0558                     u2393:
  3291  0558                     l1767:
  3292  0558  0839               	movf	___flmul@temp+1,w
  3293  0559  00A8               	movwf	??___flmul
  3294  055A  01A9               	clrf	??___flmul+1
  3295  055B  01AA               	clrf	??___flmul+2
  3296  055C  01AB               	clrf	??___flmul+3
  3297  055D  0828               	movf	??___flmul,w
  3298  055E  07B4               	addwf	___flmul@prod,f
  3299  055F  0829               	movf	??___flmul+1,w
  3300  0560  1103               	clrz
  3301  0561  1803               	skipnc
  3302  0562  3E01               	addlw	1
  3303  0563  1903               	skipnz
  3304  0564  2D66               	goto	u2401
  3305  0565  07B5               	addwf	___flmul@prod+1,f
  3306  0566                     u2401:
  3307  0566  082A               	movf	??___flmul+2,w
  3308  0567  1103               	clrz
  3309  0568  1803               	skipnc
  3310  0569  3E01               	addlw	1
  3311  056A  1903               	skipnz
  3312  056B  2D6D               	goto	u2402
  3313  056C  07B6               	addwf	___flmul@prod+2,f
  3314  056D                     u2402:
  3315  056D  082B               	movf	??___flmul+3,w
  3316  056E  1103               	clrz
  3317  056F  1803               	skipnc
  3318  0570  3E01               	addlw	1
  3319  0571  1903               	skipnz
  3320  0572  2D74               	goto	u2403
  3321  0573  07B7               	addwf	___flmul@prod+3,f
  3322  0574                     u2403:
  3323  0574  0822               	movf	___flmul@b+2,w
  3324  0575  00A8               	movwf	??___flmul
  3325  0576  0828               	movf	??___flmul,w
  3326  0577  00F0               	movwf	__Umul8_16@multiplicand
  3327  0578  0824               	movf	___flmul@a,w
  3328  0579  120A  158A  2662  120A  118A  	fcall	__Umul8_16
  3329  057E  0871               	movf	?__Umul8_16+1,w
  3330  057F  1283               	bcf	3,5	;RP0=0, select bank0
  3331  0580  1303               	bcf	3,6	;RP1=0, select bank0
  3332  0581  00B9               	movwf	___flmul@temp+1
  3333  0582  0870               	movf	?__Umul8_16,w
  3334  0583  00B8               	movwf	___flmul@temp
  3335  0584                     l1769:
  3336  0584  0838               	movf	___flmul@temp,w
  3337  0585  00A8               	movwf	??___flmul
  3338  0586  01A9               	clrf	??___flmul+1
  3339  0587  01AA               	clrf	??___flmul+2
  3340  0588  01AB               	clrf	??___flmul+3
  3341  0589  0828               	movf	??___flmul,w
  3342  058A  07AE               	addwf	___flmul@grs,f
  3343  058B  0829               	movf	??___flmul+1,w
  3344  058C  1103               	clrz
  3345  058D  1803               	skipnc
  3346  058E  3E01               	addlw	1
  3347  058F  1903               	skipnz
  3348  0590  2D92               	goto	u2411
  3349  0591  07AF               	addwf	___flmul@grs+1,f
  3350  0592                     u2411:
  3351  0592  082A               	movf	??___flmul+2,w
  3352  0593  1103               	clrz
  3353  0594  1803               	skipnc
  3354  0595  3E01               	addlw	1
  3355  0596  1903               	skipnz
  3356  0597  2D99               	goto	u2412
  3357  0598  07B0               	addwf	___flmul@grs+2,f
  3358  0599                     u2412:
  3359  0599  082B               	movf	??___flmul+3,w
  3360  059A  1103               	clrz
  3361  059B  1803               	skipnc
  3362  059C  3E01               	addlw	1
  3363  059D  1903               	skipnz
  3364  059E  2DA0               	goto	u2413
  3365  059F  07B1               	addwf	___flmul@grs+3,f
  3366  05A0                     u2413:
  3367  05A0                     l1771:
  3368  05A0  0839               	movf	___flmul@temp+1,w
  3369  05A1  00A8               	movwf	??___flmul
  3370  05A2  01A9               	clrf	??___flmul+1
  3371  05A3  01AA               	clrf	??___flmul+2
  3372  05A4  01AB               	clrf	??___flmul+3
  3373  05A5  0828               	movf	??___flmul,w
  3374  05A6  07B4               	addwf	___flmul@prod,f
  3375  05A7  0829               	movf	??___flmul+1,w
  3376  05A8  1103               	clrz
  3377  05A9  1803               	skipnc
  3378  05AA  3E01               	addlw	1
  3379  05AB  1903               	skipnz
  3380  05AC  2DAE               	goto	u2421
  3381  05AD  07B5               	addwf	___flmul@prod+1,f
  3382  05AE                     u2421:
  3383  05AE  082A               	movf	??___flmul+2,w
  3384  05AF  1103               	clrz
  3385  05B0  1803               	skipnc
  3386  05B1  3E01               	addlw	1
  3387  05B2  1903               	skipnz
  3388  05B3  2DB5               	goto	u2422
  3389  05B4  07B6               	addwf	___flmul@prod+2,f
  3390  05B5                     u2422:
  3391  05B5  082B               	movf	??___flmul+3,w
  3392  05B6  1103               	clrz
  3393  05B7  1803               	skipnc
  3394  05B8  3E01               	addlw	1
  3395  05B9  1903               	skipnz
  3396  05BA  2DBC               	goto	u2423
  3397  05BB  07B7               	addwf	___flmul@prod+3,f
  3398  05BC                     u2423:
  3399  05BC                     l1773:
  3400  05BC  3008               	movlw	8
  3401  05BD  00A8               	movwf	??___flmul
  3402  05BE                     u2435:
  3403  05BE  1003               	clrc
  3404  05BF  0DAE               	rlf	___flmul@grs,f
  3405  05C0  0DAF               	rlf	___flmul@grs+1,f
  3406  05C1  0DB0               	rlf	___flmul@grs+2,f
  3407  05C2  0DB1               	rlf	___flmul@grs+3,f
  3408  05C3  0BA8               	decfsz	??___flmul,f
  3409  05C4  2DBE               	goto	u2435
  3410  05C5                     l1775:
  3411  05C5  0821               	movf	___flmul@b+1,w
  3412  05C6  00A8               	movwf	??___flmul
  3413  05C7  0828               	movf	??___flmul,w
  3414  05C8  00F0               	movwf	__Umul8_16@multiplicand
  3415  05C9  0824               	movf	___flmul@a,w
  3416  05CA  120A  158A  2662  120A  118A  	fcall	__Umul8_16
  3417  05CF  0871               	movf	?__Umul8_16+1,w
  3418  05D0  1283               	bcf	3,5	;RP0=0, select bank0
  3419  05D1  1303               	bcf	3,6	;RP1=0, select bank0
  3420  05D2  00B9               	movwf	___flmul@temp+1
  3421  05D3  0870               	movf	?__Umul8_16,w
  3422  05D4  00B8               	movwf	___flmul@temp
  3423  05D5                     l1777:
  3424  05D5  0838               	movf	___flmul@temp,w
  3425  05D6  00A8               	movwf	??___flmul
  3426  05D7  0839               	movf	___flmul@temp+1,w
  3427  05D8  00A9               	movwf	??___flmul+1
  3428  05D9  01AA               	clrf	??___flmul+2
  3429  05DA  01AB               	clrf	??___flmul+3
  3430  05DB  0828               	movf	??___flmul,w
  3431  05DC  07AE               	addwf	___flmul@grs,f
  3432  05DD  0829               	movf	??___flmul+1,w
  3433  05DE  1103               	clrz
  3434  05DF  1803               	skipnc
  3435  05E0  3E01               	addlw	1
  3436  05E1  1903               	skipnz
  3437  05E2  2DE4               	goto	u2441
  3438  05E3  07AF               	addwf	___flmul@grs+1,f
  3439  05E4                     u2441:
  3440  05E4  082A               	movf	??___flmul+2,w
  3441  05E5  1103               	clrz
  3442  05E6  1803               	skipnc
  3443  05E7  3E01               	addlw	1
  3444  05E8  1903               	skipnz
  3445  05E9  2DEB               	goto	u2442
  3446  05EA  07B0               	addwf	___flmul@grs+2,f
  3447  05EB                     u2442:
  3448  05EB  082B               	movf	??___flmul+3,w
  3449  05EC  1103               	clrz
  3450  05ED  1803               	skipnc
  3451  05EE  3E01               	addlw	1
  3452  05EF  1903               	skipnz
  3453  05F0  2DF2               	goto	u2443
  3454  05F1  07B1               	addwf	___flmul@grs+3,f
  3455  05F2                     u2443:
  3456  05F2                     l1779:
  3457  05F2  0820               	movf	___flmul@b,w
  3458  05F3  00A8               	movwf	??___flmul
  3459  05F4  0828               	movf	??___flmul,w
  3460  05F5  00F0               	movwf	__Umul8_16@multiplicand
  3461  05F6  0825               	movf	___flmul@a+1,w
  3462  05F7  120A  158A  2662  120A  118A  	fcall	__Umul8_16
  3463  05FC  0871               	movf	?__Umul8_16+1,w
  3464  05FD  1283               	bcf	3,5	;RP0=0, select bank0
  3465  05FE  1303               	bcf	3,6	;RP1=0, select bank0
  3466  05FF  00B9               	movwf	___flmul@temp+1
  3467  0600  0870               	movf	?__Umul8_16,w
  3468  0601  00B8               	movwf	___flmul@temp
  3469  0602                     l1781:
  3470  0602  0838               	movf	___flmul@temp,w
  3471  0603  00A8               	movwf	??___flmul
  3472  0604  0839               	movf	___flmul@temp+1,w
  3473  0605  00A9               	movwf	??___flmul+1
  3474  0606  01AA               	clrf	??___flmul+2
  3475  0607  01AB               	clrf	??___flmul+3
  3476  0608  0828               	movf	??___flmul,w
  3477  0609  07AE               	addwf	___flmul@grs,f
  3478  060A  0829               	movf	??___flmul+1,w
  3479  060B  1103               	clrz
  3480  060C  1803               	skipnc
  3481  060D  3E01               	addlw	1
  3482  060E  1903               	skipnz
  3483  060F  2E11               	goto	u2451
  3484  0610  07AF               	addwf	___flmul@grs+1,f
  3485  0611                     u2451:
  3486  0611  082A               	movf	??___flmul+2,w
  3487  0612  1103               	clrz
  3488  0613  1803               	skipnc
  3489  0614  3E01               	addlw	1
  3490  0615  1903               	skipnz
  3491  0616  2E18               	goto	u2452
  3492  0617  07B0               	addwf	___flmul@grs+2,f
  3493  0618                     u2452:
  3494  0618  082B               	movf	??___flmul+3,w
  3495  0619  1103               	clrz
  3496  061A  1803               	skipnc
  3497  061B  3E01               	addlw	1
  3498  061C  1903               	skipnz
  3499  061D  2E1F               	goto	u2453
  3500  061E  07B1               	addwf	___flmul@grs+3,f
  3501  061F                     u2453:
  3502  061F                     l1783:
  3503  061F  3008               	movlw	8
  3504  0620  00A8               	movwf	??___flmul
  3505  0621                     u2465:
  3506  0621  1003               	clrc
  3507  0622  0DAE               	rlf	___flmul@grs,f
  3508  0623  0DAF               	rlf	___flmul@grs+1,f
  3509  0624  0DB0               	rlf	___flmul@grs+2,f
  3510  0625  0DB1               	rlf	___flmul@grs+3,f
  3511  0626  0BA8               	decfsz	??___flmul,f
  3512  0627  2E21               	goto	u2465
  3513  0628  0820               	movf	___flmul@b,w
  3514  0629  00A8               	movwf	??___flmul
  3515  062A  0828               	movf	??___flmul,w
  3516  062B  00F0               	movwf	__Umul8_16@multiplicand
  3517  062C  0824               	movf	___flmul@a,w
  3518  062D  120A  158A  2662  120A  118A  	fcall	__Umul8_16
  3519  0632  0871               	movf	?__Umul8_16+1,w
  3520  0633  1283               	bcf	3,5	;RP0=0, select bank0
  3521  0634  1303               	bcf	3,6	;RP1=0, select bank0
  3522  0635  00B9               	movwf	___flmul@temp+1
  3523  0636  0870               	movf	?__Umul8_16,w
  3524  0637  00B8               	movwf	___flmul@temp
  3525  0638                     l1785:
  3526  0638  0838               	movf	___flmul@temp,w
  3527  0639  00A8               	movwf	??___flmul
  3528  063A  0839               	movf	___flmul@temp+1,w
  3529  063B  00A9               	movwf	??___flmul+1
  3530  063C  01AA               	clrf	??___flmul+2
  3531  063D  01AB               	clrf	??___flmul+3
  3532  063E  0828               	movf	??___flmul,w
  3533  063F  07AE               	addwf	___flmul@grs,f
  3534  0640  0829               	movf	??___flmul+1,w
  3535  0641  1103               	clrz
  3536  0642  1803               	skipnc
  3537  0643  3E01               	addlw	1
  3538  0644  1903               	skipnz
  3539  0645  2E47               	goto	u2471
  3540  0646  07AF               	addwf	___flmul@grs+1,f
  3541  0647                     u2471:
  3542  0647  082A               	movf	??___flmul+2,w
  3543  0648  1103               	clrz
  3544  0649  1803               	skipnc
  3545  064A  3E01               	addlw	1
  3546  064B  1903               	skipnz
  3547  064C  2E4E               	goto	u2472
  3548  064D  07B0               	addwf	___flmul@grs+2,f
  3549  064E                     u2472:
  3550  064E  082B               	movf	??___flmul+3,w
  3551  064F  1103               	clrz
  3552  0650  1803               	skipnc
  3553  0651  3E01               	addlw	1
  3554  0652  1903               	skipnz
  3555  0653  2E55               	goto	u2473
  3556  0654  07B1               	addwf	___flmul@grs+3,f
  3557  0655                     u2473:
  3558  0655                     l1787:
  3559  0655  0821               	movf	___flmul@b+1,w
  3560  0656  00A8               	movwf	??___flmul
  3561  0657  0828               	movf	??___flmul,w
  3562  0658  00F0               	movwf	__Umul8_16@multiplicand
  3563  0659  0826               	movf	___flmul@a+2,w
  3564  065A  120A  158A  2662  120A  118A  	fcall	__Umul8_16
  3565  065F  0871               	movf	?__Umul8_16+1,w
  3566  0660  1283               	bcf	3,5	;RP0=0, select bank0
  3567  0661  1303               	bcf	3,6	;RP1=0, select bank0
  3568  0662  00B9               	movwf	___flmul@temp+1
  3569  0663  0870               	movf	?__Umul8_16,w
  3570  0664  00B8               	movwf	___flmul@temp
  3571  0665  0838               	movf	___flmul@temp,w
  3572  0666  00A8               	movwf	??___flmul
  3573  0667  0839               	movf	___flmul@temp+1,w
  3574  0668  00A9               	movwf	??___flmul+1
  3575  0669  01AA               	clrf	??___flmul+2
  3576  066A  01AB               	clrf	??___flmul+3
  3577  066B  0828               	movf	??___flmul,w
  3578  066C  07B4               	addwf	___flmul@prod,f
  3579  066D  0829               	movf	??___flmul+1,w
  3580  066E  1103               	clrz
  3581  066F  1803               	skipnc
  3582  0670  3E01               	addlw	1
  3583  0671  1903               	skipnz
  3584  0672  2E74               	goto	u2481
  3585  0673  07B5               	addwf	___flmul@prod+1,f
  3586  0674                     u2481:
  3587  0674  082A               	movf	??___flmul+2,w
  3588  0675  1103               	clrz
  3589  0676  1803               	skipnc
  3590  0677  3E01               	addlw	1
  3591  0678  1903               	skipnz
  3592  0679  2E7B               	goto	u2482
  3593  067A  07B6               	addwf	___flmul@prod+2,f
  3594  067B                     u2482:
  3595  067B  082B               	movf	??___flmul+3,w
  3596  067C  1103               	clrz
  3597  067D  1803               	skipnc
  3598  067E  3E01               	addlw	1
  3599  067F  1903               	skipnz
  3600  0680  2E82               	goto	u2483
  3601  0681  07B7               	addwf	___flmul@prod+3,f
  3602  0682                     u2483:
  3603  0682                     l1789:
  3604  0682  0822               	movf	___flmul@b+2,w
  3605  0683  00A8               	movwf	??___flmul
  3606  0684  0828               	movf	??___flmul,w
  3607  0685  00F0               	movwf	__Umul8_16@multiplicand
  3608  0686  0825               	movf	___flmul@a+1,w
  3609  0687  120A  158A  2662  120A  118A  	fcall	__Umul8_16
  3610  068C  0871               	movf	?__Umul8_16+1,w
  3611  068D  1283               	bcf	3,5	;RP0=0, select bank0
  3612  068E  1303               	bcf	3,6	;RP1=0, select bank0
  3613  068F  00B9               	movwf	___flmul@temp+1
  3614  0690  0870               	movf	?__Umul8_16,w
  3615  0691  00B8               	movwf	___flmul@temp
  3616  0692                     l1791:
  3617  0692  0838               	movf	___flmul@temp,w
  3618  0693  00A8               	movwf	??___flmul
  3619  0694  0839               	movf	___flmul@temp+1,w
  3620  0695  00A9               	movwf	??___flmul+1
  3621  0696  01AA               	clrf	??___flmul+2
  3622  0697  01AB               	clrf	??___flmul+3
  3623  0698  0828               	movf	??___flmul,w
  3624  0699  07B4               	addwf	___flmul@prod,f
  3625  069A  0829               	movf	??___flmul+1,w
  3626  069B  1103               	clrz
  3627  069C  1803               	skipnc
  3628  069D  3E01               	addlw	1
  3629  069E  1903               	skipnz
  3630  069F  2EA1               	goto	u2491
  3631  06A0  07B5               	addwf	___flmul@prod+1,f
  3632  06A1                     u2491:
  3633  06A1  082A               	movf	??___flmul+2,w
  3634  06A2  1103               	clrz
  3635  06A3  1803               	skipnc
  3636  06A4  3E01               	addlw	1
  3637  06A5  1903               	skipnz
  3638  06A6  2EA8               	goto	u2492
  3639  06A7  07B6               	addwf	___flmul@prod+2,f
  3640  06A8                     u2492:
  3641  06A8  082B               	movf	??___flmul+3,w
  3642  06A9  1103               	clrz
  3643  06AA  1803               	skipnc
  3644  06AB  3E01               	addlw	1
  3645  06AC  1903               	skipnz
  3646  06AD  2EAF               	goto	u2493
  3647  06AE  07B7               	addwf	___flmul@prod+3,f
  3648  06AF                     u2493:
  3649  06AF  0822               	movf	___flmul@b+2,w
  3650  06B0  00A8               	movwf	??___flmul
  3651  06B1  0828               	movf	??___flmul,w
  3652  06B2  00F0               	movwf	__Umul8_16@multiplicand
  3653  06B3  0826               	movf	___flmul@a+2,w
  3654  06B4  120A  158A  2662  120A  118A  	fcall	__Umul8_16
  3655  06B9  0871               	movf	?__Umul8_16+1,w
  3656  06BA  1283               	bcf	3,5	;RP0=0, select bank0
  3657  06BB  1303               	bcf	3,6	;RP1=0, select bank0
  3658  06BC  00B9               	movwf	___flmul@temp+1
  3659  06BD  0870               	movf	?__Umul8_16,w
  3660  06BE  00B8               	movwf	___flmul@temp
  3661  06BF                     l1793:
  3662  06BF  0838               	movf	___flmul@temp,w
  3663  06C0  00A8               	movwf	??___flmul
  3664  06C1  0839               	movf	___flmul@temp+1,w
  3665  06C2  00A9               	movwf	??___flmul+1
  3666  06C3  01AA               	clrf	??___flmul+2
  3667  06C4  01AB               	clrf	??___flmul+3
  3668  06C5  3008               	movlw	8
  3669  06C6                     u2505:
  3670  06C6  1003               	clrc
  3671  06C7  0DA8               	rlf	??___flmul,f
  3672  06C8  0DA9               	rlf	??___flmul+1,f
  3673  06C9  0DAA               	rlf	??___flmul+2,f
  3674  06CA  0DAB               	rlf	??___flmul+3,f
  3675  06CB                     u2500:
  3676  06CB  3EFF               	addlw	-1
  3677  06CC  1D03               	skipz
  3678  06CD  2EC6               	goto	u2505
  3679  06CE  0828               	movf	??___flmul,w
  3680  06CF  07B4               	addwf	___flmul@prod,f
  3681  06D0  0829               	movf	??___flmul+1,w
  3682  06D1  1103               	clrz
  3683  06D2  1803               	skipnc
  3684  06D3  3E01               	addlw	1
  3685  06D4  1903               	skipnz
  3686  06D5  2ED7               	goto	u2511
  3687  06D6  07B5               	addwf	___flmul@prod+1,f
  3688  06D7                     u2511:
  3689  06D7  082A               	movf	??___flmul+2,w
  3690  06D8  1103               	clrz
  3691  06D9  1803               	skipnc
  3692  06DA  3E01               	addlw	1
  3693  06DB  1903               	skipnz
  3694  06DC  2EDE               	goto	u2512
  3695  06DD  07B6               	addwf	___flmul@prod+2,f
  3696  06DE                     u2512:
  3697  06DE  082B               	movf	??___flmul+3,w
  3698  06DF  1103               	clrz
  3699  06E0  1803               	skipnc
  3700  06E1  3E01               	addlw	1
  3701  06E2  1903               	skipnz
  3702  06E3  2EE5               	goto	u2513
  3703  06E4  07B7               	addwf	___flmul@prod+3,f
  3704  06E5                     u2513:
  3705  06E5                     l1795:
  3706  06E5  082E               	movf	___flmul@grs,w
  3707  06E6  00A8               	movwf	??___flmul
  3708  06E7  082F               	movf	___flmul@grs+1,w
  3709  06E8  00A9               	movwf	??___flmul+1
  3710  06E9  0830               	movf	___flmul@grs+2,w
  3711  06EA  00AA               	movwf	??___flmul+2
  3712  06EB  0831               	movf	___flmul@grs+3,w
  3713  06EC  00AB               	movwf	??___flmul+3
  3714  06ED  3018               	movlw	24
  3715  06EE                     u2525:
  3716  06EE  1003               	clrc
  3717  06EF  0CAB               	rrf	??___flmul+3,f
  3718  06F0  0CAA               	rrf	??___flmul+2,f
  3719  06F1  0CA9               	rrf	??___flmul+1,f
  3720  06F2  0CA8               	rrf	??___flmul,f
  3721  06F3                     u2520:
  3722  06F3  3EFF               	addlw	-1
  3723  06F4  1D03               	skipz
  3724  06F5  2EEE               	goto	u2525
  3725  06F6  0828               	movf	??___flmul,w
  3726  06F7  07B4               	addwf	___flmul@prod,f
  3727  06F8  0829               	movf	??___flmul+1,w
  3728  06F9  1103               	clrz
  3729  06FA  1803               	skipnc
  3730  06FB  3E01               	addlw	1
  3731  06FC  1903               	skipnz
  3732  06FD  2EFF               	goto	u2531
  3733  06FE  07B5               	addwf	___flmul@prod+1,f
  3734  06FF                     u2531:
  3735  06FF  082A               	movf	??___flmul+2,w
  3736  0700  1103               	clrz
  3737  0701  1803               	skipnc
  3738  0702  3E01               	addlw	1
  3739  0703  1903               	skipnz
  3740  0704  2F06               	goto	u2532
  3741  0705  07B6               	addwf	___flmul@prod+2,f
  3742  0706                     u2532:
  3743  0706  082B               	movf	??___flmul+3,w
  3744  0707  1103               	clrz
  3745  0708  1803               	skipnc
  3746  0709  3E01               	addlw	1
  3747  070A  1903               	skipnz
  3748  070B  2F0D               	goto	u2533
  3749  070C  07B7               	addwf	___flmul@prod+3,f
  3750  070D                     u2533:
  3751  070D                     l1797:
  3752  070D  3008               	movlw	8
  3753  070E  00A8               	movwf	??___flmul
  3754  070F                     u2545:
  3755  070F  1003               	clrc
  3756  0710  0DAE               	rlf	___flmul@grs,f
  3757  0711  0DAF               	rlf	___flmul@grs+1,f
  3758  0712  0DB0               	rlf	___flmul@grs+2,f
  3759  0713  0DB1               	rlf	___flmul@grs+3,f
  3760  0714  0BA8               	decfsz	??___flmul,f
  3761  0715  2F0F               	goto	u2545
  3762  0716                     l1799:
  3763  0716  0833               	movf	___flmul@bexp,w
  3764  0717  0732               	addwf	___flmul@aexp,w
  3765  0718  00A8               	movwf	??___flmul
  3766  0719  01A9               	clrf	??___flmul+1
  3767  071A  0DA9               	rlf	??___flmul+1,f
  3768  071B  0828               	movf	??___flmul,w
  3769  071C  3E82               	addlw	130
  3770  071D  00B8               	movwf	___flmul@temp
  3771  071E  0829               	movf	??___flmul+1,w
  3772  071F  1803               	skipnc
  3773  0720  3E01               	addlw	1
  3774  0721  3EFF               	addlw	255
  3775  0722  00B9               	movwf	___flmul@temp+1
  3776  0723  2F41               	goto	l1811
  3777  0724                     l1801:
  3778  0724  3001               	movlw	1
  3779  0725  00A8               	movwf	??___flmul
  3780  0726                     u2555:
  3781  0726  1003               	clrc
  3782  0727  0DB4               	rlf	___flmul@prod,f
  3783  0728  0DB5               	rlf	___flmul@prod+1,f
  3784  0729  0DB6               	rlf	___flmul@prod+2,f
  3785  072A  0DB7               	rlf	___flmul@prod+3,f
  3786  072B  0BA8               	decfsz	??___flmul,f
  3787  072C  2F26               	goto	u2555
  3788  072D                     l1803:
  3789  072D  1FB1               	btfss	___flmul@grs+3,7
  3790  072E  2F30               	goto	u2561
  3791  072F  2F31               	goto	u2560
  3792  0730                     u2561:
  3793  0730  2F32               	goto	l1807
  3794  0731                     u2560:
  3795  0731                     l1805:
  3796  0731  1434               	bsf	___flmul@prod,0
  3797  0732                     l1807:
  3798  0732  3001               	movlw	1
  3799  0733  00A8               	movwf	??___flmul
  3800  0734                     u2575:
  3801  0734  1003               	clrc
  3802  0735  0DAE               	rlf	___flmul@grs,f
  3803  0736  0DAF               	rlf	___flmul@grs+1,f
  3804  0737  0DB0               	rlf	___flmul@grs+2,f
  3805  0738  0DB1               	rlf	___flmul@grs+3,f
  3806  0739  0BA8               	decfsz	??___flmul,f
  3807  073A  2F34               	goto	u2575
  3808  073B                     l1809:
  3809  073B  30FF               	movlw	255
  3810  073C  07B8               	addwf	___flmul@temp,f
  3811  073D  1803               	skipnc
  3812  073E  0AB9               	incf	___flmul@temp+1,f
  3813  073F  30FF               	movlw	255
  3814  0740  07B9               	addwf	___flmul@temp+1,f
  3815  0741                     l1811:
  3816  0741  1FB6               	btfss	___flmul@prod+2,7
  3817  0742  2F44               	goto	u2581
  3818  0743  2F45               	goto	u2580
  3819  0744                     u2581:
  3820  0744  2F24               	goto	l1801
  3821  0745                     u2580:
  3822  0745                     l1813:
  3823  0745  01B2               	clrf	___flmul@aexp
  3824  0746                     l1815:
  3825  0746  1FB1               	btfss	___flmul@grs+3,7
  3826  0747  2F49               	goto	u2591
  3827  0748  2F4A               	goto	u2590
  3828  0749                     u2591:
  3829  0749  2F66               	goto	l1823
  3830  074A                     u2590:
  3831  074A                     l1817:
  3832  074A  30FF               	movlw	255
  3833  074B  052E               	andwf	___flmul@grs,w
  3834  074C  00A8               	movwf	??___flmul
  3835  074D  30FF               	movlw	255
  3836  074E  052F               	andwf	___flmul@grs+1,w
  3837  074F  00A9               	movwf	??___flmul+1
  3838  0750  30FF               	movlw	255
  3839  0751  0530               	andwf	___flmul@grs+2,w
  3840  0752  00AA               	movwf	??___flmul+2
  3841  0753  307F               	movlw	127
  3842  0754  0531               	andwf	___flmul@grs+3,w
  3843  0755  00AB               	movwf	??___flmul+3
  3844  0756  082B               	movf	??___flmul+3,w
  3845  0757  042A               	iorwf	??___flmul+2,w
  3846  0758  0429               	iorwf	??___flmul+1,w
  3847  0759  0428               	iorwf	??___flmul,w
  3848  075A  1903               	skipnz
  3849  075B  2F5D               	goto	u2601
  3850  075C  2F5E               	goto	u2600
  3851  075D                     u2601:
  3852  075D  2F61               	goto	l674
  3853  075E                     u2600:
  3854  075E                     l1819:
  3855  075E  01B2               	clrf	___flmul@aexp
  3856  075F  0AB2               	incf	___flmul@aexp,f
  3857  0760  2F66               	goto	l1823
  3858  0761                     l674:
  3859  0761  1C34               	btfss	___flmul@prod,0
  3860  0762  2F64               	goto	u2611
  3861  0763  2F65               	goto	u2610
  3862  0764                     u2611:
  3863  0764  2F66               	goto	l1823
  3864  0765                     u2610:
  3865  0765  2F5E               	goto	l1819
  3866  0766                     l1823:
  3867  0766  0832               	movf	___flmul@aexp,w
  3868  0767  1903               	btfsc	3,2
  3869  0768  2F6A               	goto	u2621
  3870  0769  2F6B               	goto	u2620
  3871  076A                     u2621:
  3872  076A  2F9C               	goto	l1833
  3873  076B                     u2620:
  3874  076B                     l1825:
  3875  076B  3001               	movlw	1
  3876  076C  07B4               	addwf	___flmul@prod,f
  3877  076D  3000               	movlw	0
  3878  076E  1803               	skipnc
  3879  076F  3001               	movlw	1
  3880  0770  07B5               	addwf	___flmul@prod+1,f
  3881  0771  3000               	movlw	0
  3882  0772  1803               	skipnc
  3883  0773  3001               	movlw	1
  3884  0774  07B6               	addwf	___flmul@prod+2,f
  3885  0775  3000               	movlw	0
  3886  0776  1803               	skipnc
  3887  0777  3001               	movlw	1
  3888  0778  07B7               	addwf	___flmul@prod+3,f
  3889  0779                     l1827:
  3890  0779  1C37               	btfss	___flmul@prod+3,0
  3891  077A  2F7C               	goto	u2631
  3892  077B  2F7D               	goto	u2630
  3893  077C                     u2631:
  3894  077C  2F9C               	goto	l1833
  3895  077D                     u2630:
  3896  077D                     l1829:
  3897  077D  0834               	movf	___flmul@prod,w
  3898  077E  00A8               	movwf	??___flmul
  3899  077F  0835               	movf	___flmul@prod+1,w
  3900  0780  00A9               	movwf	??___flmul+1
  3901  0781  0836               	movf	___flmul@prod+2,w
  3902  0782  00AA               	movwf	??___flmul+2
  3903  0783  0837               	movf	___flmul@prod+3,w
  3904  0784  00AB               	movwf	??___flmul+3
  3905  0785  3001               	movlw	1
  3906  0786  00AC               	movwf	??___flmul+4
  3907  0787                     u2645:
  3908  0787  0D2B               	rlf	??___flmul+3,w
  3909  0788  0CAB               	rrf	??___flmul+3,f
  3910  0789  0CAA               	rrf	??___flmul+2,f
  3911  078A  0CA9               	rrf	??___flmul+1,f
  3912  078B  0CA8               	rrf	??___flmul,f
  3913  078C                     u2640:
  3914  078C  0BAC               	decfsz	??___flmul+4,f
  3915  078D  2F87               	goto	u2645
  3916  078E  082B               	movf	??___flmul+3,w
  3917  078F  00B7               	movwf	___flmul@prod+3
  3918  0790  082A               	movf	??___flmul+2,w
  3919  0791  00B6               	movwf	___flmul@prod+2
  3920  0792  0829               	movf	??___flmul+1,w
  3921  0793  00B5               	movwf	___flmul@prod+1
  3922  0794  0828               	movf	??___flmul,w
  3923  0795  00B4               	movwf	___flmul@prod
  3924  0796                     l1831:
  3925  0796  3001               	movlw	1
  3926  0797  07B8               	addwf	___flmul@temp,f
  3927  0798  1803               	skipnc
  3928  0799  0AB9               	incf	___flmul@temp+1,f
  3929  079A  3000               	movlw	0
  3930  079B  07B9               	addwf	___flmul@temp+1,f
  3931  079C                     l1833:
  3932  079C  0839               	movf	___flmul@temp+1,w
  3933  079D  3A80               	xorlw	128
  3934  079E  00FF               	movwf	btemp+1
  3935  079F  3080               	movlw	128
  3936  07A0  027F               	subwf	btemp+1,w
  3937  07A1  1D03               	skipz
  3938  07A2  2FA5               	goto	u2655
  3939  07A3  30FF               	movlw	255
  3940  07A4  0238               	subwf	___flmul@temp,w
  3941  07A5                     u2655:
  3942  07A5  1C03               	skipc
  3943  07A6  2FA8               	goto	u2651
  3944  07A7  2FA9               	goto	u2650
  3945  07A8                     u2651:
  3946  07A8  2FB4               	goto	l1837
  3947  07A9                     u2650:
  3948  07A9                     l1835:
  3949  07A9  307F               	movlw	127
  3950  07AA  1283               	bcf	3,5	;RP0=0, select bank0
  3951  07AB  1303               	bcf	3,6	;RP1=0, select bank0
  3952  07AC  00B7               	movwf	___flmul@prod+3
  3953  07AD  3080               	movlw	128
  3954  07AE  00B6               	movwf	___flmul@prod+2
  3955  07AF  3000               	movlw	0
  3956  07B0  00B5               	movwf	___flmul@prod+1
  3957  07B1  3000               	movlw	0
  3958  07B2  00B4               	movwf	___flmul@prod
  3959  07B3  2FE9               	goto	l680
  3960  07B4                     l1837:
  3961  07B4  1283               	bcf	3,5	;RP0=0, select bank0
  3962  07B5  1303               	bcf	3,6	;RP1=0, select bank0
  3963  07B6  0839               	movf	___flmul@temp+1,w
  3964  07B7  3A80               	xorlw	128
  3965  07B8  00FF               	movwf	btemp+1
  3966  07B9  3080               	movlw	128
  3967  07BA  027F               	subwf	btemp+1,w
  3968  07BB  1D03               	skipz
  3969  07BC  2FBF               	goto	u2665
  3970  07BD  3001               	movlw	1
  3971  07BE  0238               	subwf	___flmul@temp,w
  3972  07BF                     u2665:
  3973  07BF  1803               	skipnc
  3974  07C0  2FC2               	goto	u2661
  3975  07C1  2FC3               	goto	u2660
  3976  07C2                     u2661:
  3977  07C2  2FCF               	goto	l1843
  3978  07C3                     u2660:
  3979  07C3                     l1839:
  3980  07C3  3000               	movlw	0
  3981  07C4  1283               	bcf	3,5	;RP0=0, select bank0
  3982  07C5  1303               	bcf	3,6	;RP1=0, select bank0
  3983  07C6  00B7               	movwf	___flmul@prod+3
  3984  07C7  3000               	movlw	0
  3985  07C8  00B6               	movwf	___flmul@prod+2
  3986  07C9  3000               	movlw	0
  3987  07CA  00B5               	movwf	___flmul@prod+1
  3988  07CB  3000               	movlw	0
  3989  07CC  00B4               	movwf	___flmul@prod
  3990  07CD                     l1841:
  3991  07CD  01AD               	clrf	___flmul@sign
  3992  07CE  2FE9               	goto	l680
  3993  07CF                     l1843:
  3994  07CF  1283               	bcf	3,5	;RP0=0, select bank0
  3995  07D0  1303               	bcf	3,6	;RP1=0, select bank0
  3996  07D1  0838               	movf	___flmul@temp,w
  3997  07D2  00A8               	movwf	??___flmul
  3998  07D3  0828               	movf	??___flmul,w
  3999  07D4  00B3               	movwf	___flmul@bexp
  4000  07D5  30FF               	movlw	255
  4001  07D6  05B4               	andwf	___flmul@prod,f
  4002  07D7  30FF               	movlw	255
  4003  07D8  05B5               	andwf	___flmul@prod+1,f
  4004  07D9  307F               	movlw	127
  4005  07DA  05B6               	andwf	___flmul@prod+2,f
  4006  07DB  3000               	movlw	0
  4007  07DC  05B7               	andwf	___flmul@prod+3,f
  4008  07DD                     l1845:
  4009  07DD  1C33               	btfss	___flmul@bexp,0
  4010  07DE  2FE0               	goto	u2671
  4011  07DF  2FE1               	goto	u2670
  4012  07E0                     u2671:
  4013  07E0  2FE2               	goto	l1849
  4014  07E1                     u2670:
  4015  07E1                     l1847:
  4016  07E1  17B6               	bsf	___flmul@prod+2,7
  4017  07E2                     l1849:
  4018  07E2  0833               	movf	___flmul@bexp,w
  4019  07E3  00A8               	movwf	??___flmul
  4020  07E4  1003               	clrc
  4021  07E5  0C28               	rrf	??___flmul,w
  4022  07E6  00A9               	movwf	??___flmul+1
  4023  07E7  0829               	movf	??___flmul+1,w
  4024  07E8  00B7               	movwf	___flmul@prod+3
  4025  07E9                     l680:
  4026  07E9  082D               	movf	___flmul@sign,w
  4027  07EA  00A8               	movwf	??___flmul
  4028  07EB  0828               	movf	??___flmul,w
  4029  07EC  04B7               	iorwf	___flmul@prod+3,f
  4030  07ED                     l1851:
  4031  07ED  0837               	movf	___flmul@prod+3,w
  4032  07EE  00A3               	movwf	?___flmul+3
  4033  07EF  0836               	movf	___flmul@prod+2,w
  4034  07F0  00A2               	movwf	?___flmul+2
  4035  07F1  0835               	movf	___flmul@prod+1,w
  4036  07F2  00A1               	movwf	?___flmul+1
  4037  07F3  0834               	movf	___flmul@prod,w
  4038  07F4  00A0               	movwf	?___flmul
  4039  07F5                     l668:
  4040  07F5  0008               	return
  4041  07F6                     __end_of___flmul:
  4042                           
  4043                           	psect	text16
  4044  0E62                     __ptext16:	
  4045 ;; *************** function __Umul8_16 *****************
  4046 ;; Defined at:
  4047 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul8_16.c"
  4048 ;; Parameters:    Size  Location     Type
  4049 ;;  multiplier      1    wreg     unsigned char 
  4050 ;;  multiplicand    1    0[COMMON] unsigned char 
  4051 ;; Auto vars:     Size  Location     Type
  4052 ;;  multiplier      1    8[COMMON] unsigned char 
  4053 ;;  word_mpld       2    6[COMMON] unsigned int 
  4054 ;;  product         2    4[COMMON] unsigned int 
  4055 ;; Return value:  Size  Location     Type
  4056 ;;                  2    0[COMMON] unsigned int 
  4057 ;; Registers used:
  4058 ;;		wreg, status,2, status,0
  4059 ;; Tracked objects:
  4060 ;;		On entry : 0/0
  4061 ;;		On exit  : 0/0
  4062 ;;		Unchanged: 0/0
  4063 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4064 ;;      Params:         2       0       0       0       0
  4065 ;;      Locals:         5       0       0       0       0
  4066 ;;      Temps:          2       0       0       0       0
  4067 ;;      Totals:         9       0       0       0       0
  4068 ;;Total ram usage:        9 bytes
  4069 ;; Hardware stack levels used:    1
  4070 ;; This function calls:
  4071 ;;		Nothing
  4072 ;; This function is called by:
  4073 ;;		___flmul
  4074 ;; This function uses a non-reentrant model
  4075 ;;
  4076                           
  4077                           
  4078                           ;psect for function __Umul8_16
  4079  0E62                     __Umul8_16:
  4080                           
  4081                           ;incstack = 0
  4082                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  4083                           ;__Umul8_16@multiplier stored from wreg
  4084  0E62  00F8               	movwf	__Umul8_16@multiplier
  4085  0E63                     l1461:
  4086  0E63  01F4               	clrf	__Umul8_16@product
  4087  0E64  01F5               	clrf	__Umul8_16@product+1
  4088  0E65                     l1463:
  4089  0E65  0870               	movf	__Umul8_16@multiplicand,w
  4090  0E66  00F2               	movwf	??__Umul8_16
  4091  0E67  01F3               	clrf	??__Umul8_16+1
  4092  0E68  0872               	movf	??__Umul8_16,w
  4093  0E69  00F6               	movwf	__Umul8_16@word_mpld
  4094  0E6A  0873               	movf	??__Umul8_16+1,w
  4095  0E6B  00F7               	movwf	__Umul8_16@word_mpld+1
  4096  0E6C                     l1465:
  4097  0E6C  1C78               	btfss	__Umul8_16@multiplier,0
  4098  0E6D  2E6F               	goto	u1721
  4099  0E6E  2E70               	goto	u1720
  4100  0E6F                     u1721:
  4101  0E6F  2E76               	goto	l687
  4102  0E70                     u1720:
  4103  0E70                     l1467:
  4104  0E70  0876               	movf	__Umul8_16@word_mpld,w
  4105  0E71  07F4               	addwf	__Umul8_16@product,f
  4106  0E72  1803               	skipnc
  4107  0E73  0AF5               	incf	__Umul8_16@product+1,f
  4108  0E74  0877               	movf	__Umul8_16@word_mpld+1,w
  4109  0E75  07F5               	addwf	__Umul8_16@product+1,f
  4110  0E76                     l687:
  4111  0E76  3001               	movlw	1
  4112  0E77                     u1735:
  4113  0E77  1003               	clrc
  4114  0E78  0DF6               	rlf	__Umul8_16@word_mpld,f
  4115  0E79  0DF7               	rlf	__Umul8_16@word_mpld+1,f
  4116  0E7A  3EFF               	addlw	-1
  4117  0E7B  1D03               	skipz
  4118  0E7C  2E77               	goto	u1735
  4119  0E7D  1003               	clrc
  4120  0E7E  0CF8               	rrf	__Umul8_16@multiplier,f
  4121  0E7F                     l1469:
  4122  0E7F  0878               	movf	__Umul8_16@multiplier,w
  4123  0E80  1D03               	btfss	3,2
  4124  0E81  2E83               	goto	u1741
  4125  0E82  2E84               	goto	u1740
  4126  0E83                     u1741:
  4127  0E83  2E6C               	goto	l1465
  4128  0E84                     u1740:
  4129  0E84                     l1471:
  4130  0E84  0875               	movf	__Umul8_16@product+1,w
  4131  0E85  00F1               	movwf	?__Umul8_16+1
  4132  0E86  0874               	movf	__Umul8_16@product,w
  4133  0E87  00F0               	movwf	?__Umul8_16
  4134  0E88                     l689:
  4135  0E88  0008               	return
  4136  0E89                     __end_of__Umul8_16:
  4137                           
  4138                           	psect	text17
  4139  0124                     __ptext17:	
  4140 ;; *************** function _UARTInit *****************
  4141 ;; Defined at:
  4142 ;;		line 8 in file "UART.c"
  4143 ;; Parameters:    Size  Location     Type
  4144 ;;  baud_rate       4    0[BANK0 ] const unsigned long 
  4145 ;;  BRGH            1    4[BANK0 ] const unsigned char 
  4146 ;; Auto vars:     Size  Location     Type
  4147 ;;		None
  4148 ;; Return value:  Size  Location     Type
  4149 ;;                  1    wreg      void 
  4150 ;; Registers used:
  4151 ;;		wreg, status,2, status,0, pclath, cstack
  4152 ;; Tracked objects:
  4153 ;;		On entry : 0/0
  4154 ;;		On exit  : 0/0
  4155 ;;		Unchanged: 0/0
  4156 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4157 ;;      Params:         0       5       0       0       0
  4158 ;;      Locals:         0       0       0       0       0
  4159 ;;      Temps:          0       4       0       0       0
  4160 ;;      Totals:         0       9       0       0       0
  4161 ;;Total ram usage:        9 bytes
  4162 ;; Hardware stack levels used:    1
  4163 ;; Hardware stack levels required when called:    1
  4164 ;; This function calls:
  4165 ;;		___lldiv
  4166 ;; This function is called by:
  4167 ;;		_main
  4168 ;; This function uses a non-reentrant model
  4169 ;;
  4170                           
  4171                           
  4172                           ;psect for function _UARTInit
  4173  0124                     _UARTInit:
  4174  0124                     l1919:	
  4175                           ;incstack = 0
  4176                           ; Regs used in _UARTInit: [wreg+status,2+status,0+pclath+cstack]
  4177                           
  4178                           
  4179                           ;UART.c: 10:     if (BRGH == 0) {
  4180  0124  1283               	bcf	3,5	;RP0=0, select bank0
  4181  0125  1303               	bcf	3,6	;RP1=0, select bank0
  4182  0126  0824               	movf	UARTInit@BRGH,w
  4183  0127  1D03               	btfss	3,2
  4184  0128  292A               	goto	u2831
  4185  0129  292B               	goto	u2830
  4186  012A                     u2831:
  4187  012A  2958               	goto	l1925
  4188  012B                     u2830:
  4189  012B                     l1921:
  4190                           
  4191                           ;UART.c: 11:         SPBRG = 4000000/(64*baud_rate) - 1;
  4192  012B  0820               	movf	UARTInit@baud_rate,w
  4193  012C  00A5               	movwf	??_UARTInit
  4194  012D  0821               	movf	UARTInit@baud_rate+1,w
  4195  012E  00A6               	movwf	??_UARTInit+1
  4196  012F  0822               	movf	UARTInit@baud_rate+2,w
  4197  0130  00A7               	movwf	??_UARTInit+2
  4198  0131  0823               	movf	UARTInit@baud_rate+3,w
  4199  0132  00A8               	movwf	??_UARTInit+3
  4200  0133  3006               	movlw	6
  4201  0134                     u2845:
  4202  0134  1003               	clrc
  4203  0135  0DA5               	rlf	??_UARTInit,f
  4204  0136  0DA6               	rlf	??_UARTInit+1,f
  4205  0137  0DA7               	rlf	??_UARTInit+2,f
  4206  0138  0DA8               	rlf	??_UARTInit+3,f
  4207  0139                     u2840:
  4208  0139  3EFF               	addlw	-1
  4209  013A  1D03               	skipz
  4210  013B  2934               	goto	u2845
  4211  013C  0828               	movf	??_UARTInit+3,w
  4212  013D  00F3               	movwf	___lldiv@divisor+3
  4213  013E  0827               	movf	??_UARTInit+2,w
  4214  013F  00F2               	movwf	___lldiv@divisor+2
  4215  0140  0826               	movf	??_UARTInit+1,w
  4216  0141  00F1               	movwf	___lldiv@divisor+1
  4217  0142  0825               	movf	??_UARTInit,w
  4218  0143  00F0               	movwf	___lldiv@divisor
  4219  0144  3000               	movlw	0
  4220  0145  00F7               	movwf	___lldiv@dividend+3
  4221  0146  303D               	movlw	61
  4222  0147  00F6               	movwf	___lldiv@dividend+2
  4223  0148  3009               	movlw	9
  4224  0149  00F5               	movwf	___lldiv@dividend+1
  4225  014A  3000               	movlw	0
  4226  014B  00F4               	movwf	___lldiv@dividend
  4227  014C  120A  118A  2057  120A  118A  	fcall	___lldiv
  4228  0151  0870               	movf	?___lldiv,w
  4229  0152  3EFF               	addlw	255
  4230  0153  1683               	bsf	3,5	;RP0=1, select bank1
  4231  0154  1303               	bcf	3,6	;RP1=0, select bank1
  4232  0155  0099               	movwf	25	;volatile
  4233  0156                     l1923:
  4234                           
  4235                           ;UART.c: 12:         TXSTAbits.BRGH = 0;
  4236  0156  1118               	bcf	24,2	;volatile
  4237                           
  4238                           ;UART.c: 13:     } else {
  4239  0157  2984               	goto	l1929
  4240  0158                     l1925:
  4241                           
  4242                           ;UART.c: 14:         SPBRG = 4000000/(16*baud_rate) - 1;
  4243  0158  0820               	movf	UARTInit@baud_rate,w
  4244  0159  00A5               	movwf	??_UARTInit
  4245  015A  0821               	movf	UARTInit@baud_rate+1,w
  4246  015B  00A6               	movwf	??_UARTInit+1
  4247  015C  0822               	movf	UARTInit@baud_rate+2,w
  4248  015D  00A7               	movwf	??_UARTInit+2
  4249  015E  0823               	movf	UARTInit@baud_rate+3,w
  4250  015F  00A8               	movwf	??_UARTInit+3
  4251  0160  3004               	movlw	4
  4252  0161                     u2855:
  4253  0161  1003               	clrc
  4254  0162  0DA5               	rlf	??_UARTInit,f
  4255  0163  0DA6               	rlf	??_UARTInit+1,f
  4256  0164  0DA7               	rlf	??_UARTInit+2,f
  4257  0165  0DA8               	rlf	??_UARTInit+3,f
  4258  0166                     u2850:
  4259  0166  3EFF               	addlw	-1
  4260  0167  1D03               	skipz
  4261  0168  2961               	goto	u2855
  4262  0169  0828               	movf	??_UARTInit+3,w
  4263  016A  00F3               	movwf	___lldiv@divisor+3
  4264  016B  0827               	movf	??_UARTInit+2,w
  4265  016C  00F2               	movwf	___lldiv@divisor+2
  4266  016D  0826               	movf	??_UARTInit+1,w
  4267  016E  00F1               	movwf	___lldiv@divisor+1
  4268  016F  0825               	movf	??_UARTInit,w
  4269  0170  00F0               	movwf	___lldiv@divisor
  4270  0171  3000               	movlw	0
  4271  0172  00F7               	movwf	___lldiv@dividend+3
  4272  0173  303D               	movlw	61
  4273  0174  00F6               	movwf	___lldiv@dividend+2
  4274  0175  3009               	movlw	9
  4275  0176  00F5               	movwf	___lldiv@dividend+1
  4276  0177  3000               	movlw	0
  4277  0178  00F4               	movwf	___lldiv@dividend
  4278  0179  120A  118A  2057  120A  118A  	fcall	___lldiv
  4279  017E  0870               	movf	?___lldiv,w
  4280  017F  3EFF               	addlw	255
  4281  0180  1683               	bsf	3,5	;RP0=1, select bank1
  4282  0181  1303               	bcf	3,6	;RP1=0, select bank1
  4283  0182  0099               	movwf	25	;volatile
  4284  0183                     l1927:
  4285                           
  4286                           ;UART.c: 15:         TXSTAbits.BRGH = 1;
  4287  0183  1518               	bsf	24,2	;volatile
  4288  0184                     l1929:
  4289                           
  4290                           ;UART.c: 19:     TXSTAbits.TX9 = 0;
  4291  0184  1318               	bcf	24,6	;volatile
  4292  0185                     l1931:
  4293                           
  4294                           ;UART.c: 20:     TXSTAbits.TXEN = 1;
  4295  0185  1698               	bsf	24,5	;volatile
  4296  0186                     l1933:
  4297                           
  4298                           ;UART.c: 21:     TXSTAbits.SYNC = 0;
  4299  0186  1218               	bcf	24,4	;volatile
  4300  0187                     l1935:
  4301                           
  4302                           ;UART.c: 24:     RCSTAbits.SPEN = 1;
  4303  0187  1283               	bcf	3,5	;RP0=0, select bank0
  4304  0188  1303               	bcf	3,6	;RP1=0, select bank0
  4305  0189  1798               	bsf	24,7	;volatile
  4306  018A                     l1937:
  4307                           
  4308                           ;UART.c: 25:     RCSTAbits.RX9 = 0;
  4309  018A  1318               	bcf	24,6	;volatile
  4310  018B                     l1939:
  4311                           
  4312                           ;UART.c: 26:     RCSTAbits.CREN = 1;
  4313  018B  1618               	bsf	24,4	;volatile
  4314  018C                     l1941:
  4315                           
  4316                           ;UART.c: 27:     RCSTAbits.FERR = 0;
  4317  018C  1118               	bcf	24,2	;volatile
  4318  018D                     l1943:
  4319                           
  4320                           ;UART.c: 28:     RCSTAbits.OERR = 0;
  4321  018D  1098               	bcf	24,1	;volatile
  4322  018E                     l1945:
  4323                           
  4324                           ;UART.c: 31:     TRISCbits.TRISC7 = 1;
  4325  018E  1683               	bsf	3,5	;RP0=1, select bank1
  4326  018F  1303               	bcf	3,6	;RP1=0, select bank1
  4327  0190  1787               	bsf	7,7	;volatile
  4328  0191                     l1947:
  4329                           
  4330                           ;UART.c: 32:     TRISCbits.TRISC6 = 0;
  4331  0191  1307               	bcf	7,6	;volatile
  4332  0192                     l71:
  4333  0192  0008               	return
  4334  0193                     __end_of_UARTInit:
  4335                           
  4336                           	psect	text18
  4337  0057                     __ptext18:	
  4338 ;; *************** function ___lldiv *****************
  4339 ;; Defined at:
  4340 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\__lldiv.c"
  4341 ;; Parameters:    Size  Location     Type
  4342 ;;  divisor         4    0[COMMON] unsigned long 
  4343 ;;  dividend        4    4[COMMON] unsigned long 
  4344 ;; Auto vars:     Size  Location     Type
  4345 ;;  quotient        4    9[COMMON] unsigned long 
  4346 ;;  counter         1   13[COMMON] unsigned char 
  4347 ;; Return value:  Size  Location     Type
  4348 ;;                  4    0[COMMON] unsigned long 
  4349 ;; Registers used:
  4350 ;;		wreg, status,2, status,0
  4351 ;; Tracked objects:
  4352 ;;		On entry : 0/0
  4353 ;;		On exit  : 0/0
  4354 ;;		Unchanged: 0/0
  4355 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4356 ;;      Params:         8       0       0       0       0
  4357 ;;      Locals:         5       0       0       0       0
  4358 ;;      Temps:          1       0       0       0       0
  4359 ;;      Totals:        14       0       0       0       0
  4360 ;;Total ram usage:       14 bytes
  4361 ;; Hardware stack levels used:    1
  4362 ;; This function calls:
  4363 ;;		Nothing
  4364 ;; This function is called by:
  4365 ;;		_UARTInit
  4366 ;; This function uses a non-reentrant model
  4367 ;;
  4368                           
  4369                           
  4370                           ;psect for function ___lldiv
  4371  0057                     ___lldiv:
  4372  0057                     l1525:	
  4373                           ;incstack = 0
  4374                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  4375                           
  4376  0057  3000               	movlw	0
  4377  0058  00FC               	movwf	___lldiv@quotient+3
  4378  0059  3000               	movlw	0
  4379  005A  00FB               	movwf	___lldiv@quotient+2
  4380  005B  3000               	movlw	0
  4381  005C  00FA               	movwf	___lldiv@quotient+1
  4382  005D  3000               	movlw	0
  4383  005E  00F9               	movwf	___lldiv@quotient
  4384  005F  0873               	movf	___lldiv@divisor+3,w
  4385  0060  0472               	iorwf	___lldiv@divisor+2,w
  4386  0061  0471               	iorwf	___lldiv@divisor+1,w
  4387  0062  0470               	iorwf	___lldiv@divisor,w
  4388  0063  1903               	skipnz
  4389  0064  2866               	goto	u1821
  4390  0065  2867               	goto	u1820
  4391  0066                     u1821:
  4392  0066  28B4               	goto	l1545
  4393  0067                     u1820:
  4394  0067                     l1527:
  4395  0067  01FD               	clrf	___lldiv@counter
  4396  0068  0AFD               	incf	___lldiv@counter,f
  4397  0069  2877               	goto	l1531
  4398  006A                     l1529:
  4399  006A  3001               	movlw	1
  4400  006B  00F8               	movwf	??___lldiv
  4401  006C                     u1835:
  4402  006C  1003               	clrc
  4403  006D  0DF0               	rlf	___lldiv@divisor,f
  4404  006E  0DF1               	rlf	___lldiv@divisor+1,f
  4405  006F  0DF2               	rlf	___lldiv@divisor+2,f
  4406  0070  0DF3               	rlf	___lldiv@divisor+3,f
  4407  0071  0BF8               	decfsz	??___lldiv,f
  4408  0072  286C               	goto	u1835
  4409  0073  3001               	movlw	1
  4410  0074  00F8               	movwf	??___lldiv
  4411  0075  0878               	movf	??___lldiv,w
  4412  0076  07FD               	addwf	___lldiv@counter,f
  4413  0077                     l1531:
  4414  0077  1FF3               	btfss	___lldiv@divisor+3,7
  4415  0078  287A               	goto	u1841
  4416  0079  287B               	goto	u1840
  4417  007A                     u1841:
  4418  007A  286A               	goto	l1529
  4419  007B                     u1840:
  4420  007B                     l1533:
  4421  007B  3001               	movlw	1
  4422  007C  00F8               	movwf	??___lldiv
  4423  007D                     u1855:
  4424  007D  1003               	clrc
  4425  007E  0DF9               	rlf	___lldiv@quotient,f
  4426  007F  0DFA               	rlf	___lldiv@quotient+1,f
  4427  0080  0DFB               	rlf	___lldiv@quotient+2,f
  4428  0081  0DFC               	rlf	___lldiv@quotient+3,f
  4429  0082  0BF8               	decfsz	??___lldiv,f
  4430  0083  287D               	goto	u1855
  4431  0084                     l1535:
  4432  0084  0873               	movf	___lldiv@divisor+3,w
  4433  0085  0277               	subwf	___lldiv@dividend+3,w
  4434  0086  1D03               	skipz
  4435  0087  2892               	goto	u1865
  4436  0088  0872               	movf	___lldiv@divisor+2,w
  4437  0089  0276               	subwf	___lldiv@dividend+2,w
  4438  008A  1D03               	skipz
  4439  008B  2892               	goto	u1865
  4440  008C  0871               	movf	___lldiv@divisor+1,w
  4441  008D  0275               	subwf	___lldiv@dividend+1,w
  4442  008E  1D03               	skipz
  4443  008F  2892               	goto	u1865
  4444  0090  0870               	movf	___lldiv@divisor,w
  4445  0091  0274               	subwf	___lldiv@dividend,w
  4446  0092                     u1865:
  4447  0092  1C03               	skipc
  4448  0093  2895               	goto	u1861
  4449  0094  2896               	goto	u1860
  4450  0095                     u1861:
  4451  0095  28A5               	goto	l1541
  4452  0096                     u1860:
  4453  0096                     l1537:
  4454  0096  0870               	movf	___lldiv@divisor,w
  4455  0097  02F4               	subwf	___lldiv@dividend,f
  4456  0098  0871               	movf	___lldiv@divisor+1,w
  4457  0099  1C03               	skipc
  4458  009A  0F71               	incfsz	___lldiv@divisor+1,w
  4459  009B  02F5               	subwf	___lldiv@dividend+1,f
  4460  009C  0872               	movf	___lldiv@divisor+2,w
  4461  009D  1C03               	skipc
  4462  009E  0F72               	incfsz	___lldiv@divisor+2,w
  4463  009F  02F6               	subwf	___lldiv@dividend+2,f
  4464  00A0  0873               	movf	___lldiv@divisor+3,w
  4465  00A1  1C03               	skipc
  4466  00A2  0F73               	incfsz	___lldiv@divisor+3,w
  4467  00A3  02F7               	subwf	___lldiv@dividend+3,f
  4468  00A4                     l1539:
  4469  00A4  1479               	bsf	___lldiv@quotient,0
  4470  00A5                     l1541:
  4471  00A5  3001               	movlw	1
  4472  00A6                     u1875:
  4473  00A6  1003               	clrc
  4474  00A7  0CF3               	rrf	___lldiv@divisor+3,f
  4475  00A8  0CF2               	rrf	___lldiv@divisor+2,f
  4476  00A9  0CF1               	rrf	___lldiv@divisor+1,f
  4477  00AA  0CF0               	rrf	___lldiv@divisor,f
  4478  00AB  3EFF               	addlw	-1
  4479  00AC  1D03               	skipz
  4480  00AD  28A6               	goto	u1875
  4481  00AE                     l1543:
  4482  00AE  3001               	movlw	1
  4483  00AF  02FD               	subwf	___lldiv@counter,f
  4484  00B0  1D03               	btfss	3,2
  4485  00B1  28B3               	goto	u1881
  4486  00B2  28B4               	goto	u1880
  4487  00B3                     u1881:
  4488  00B3  287B               	goto	l1533
  4489  00B4                     u1880:
  4490  00B4                     l1545:
  4491  00B4  087C               	movf	___lldiv@quotient+3,w
  4492  00B5  00F3               	movwf	?___lldiv+3
  4493  00B6  087B               	movf	___lldiv@quotient+2,w
  4494  00B7  00F2               	movwf	?___lldiv+2
  4495  00B8  087A               	movf	___lldiv@quotient+1,w
  4496  00B9  00F1               	movwf	?___lldiv+1
  4497  00BA  0879               	movf	___lldiv@quotient,w
  4498  00BB  00F0               	movwf	?___lldiv
  4499  00BC                     l315:
  4500  00BC  0008               	return
  4501  00BD                     __end_of___lldiv:
  4502                           
  4503                           	psect	text19
  4504  0EC3                     __ptext19:	
  4505 ;; *************** function _LcdWriteString *****************
  4506 ;; Defined at:
  4507 ;;		line 64 in file "LCD8btis.c"
  4508 ;; Parameters:    Size  Location     Type
  4509 ;;  value           2    4[COMMON] PTR const unsigned char 
  4510 ;;		 -> NULL(0), int2String@cadena(4), adcToString@salida(5), STR_2(3), 
  4511 ;;		 -> STR_1(17), 
  4512 ;; Auto vars:     Size  Location     Type
  4513 ;;  i               2    9[COMMON] int 
  4514 ;; Return value:  Size  Location     Type
  4515 ;;                  1    wreg      void 
  4516 ;; Registers used:
  4517 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4518 ;; Tracked objects:
  4519 ;;		On entry : 0/0
  4520 ;;		On exit  : 0/0
  4521 ;;		Unchanged: 0/0
  4522 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4523 ;;      Params:         2       0       0       0       0
  4524 ;;      Locals:         2       0       0       0       0
  4525 ;;      Temps:          3       0       0       0       0
  4526 ;;      Totals:         7       0       0       0       0
  4527 ;;Total ram usage:        7 bytes
  4528 ;; Hardware stack levels used:    1
  4529 ;; Hardware stack levels required when called:    2
  4530 ;; This function calls:
  4531 ;;		_LcdWriteChar
  4532 ;; This function is called by:
  4533 ;;		_main
  4534 ;; This function uses a non-reentrant model
  4535 ;;
  4536                           
  4537                           
  4538                           ;psect for function _LcdWriteString
  4539  0EC3                     _LcdWriteString:
  4540  0EC3                     l1963:	
  4541                           ;incstack = 0
  4542                           ; Regs used in _LcdWriteString: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4543                           
  4544                           
  4545                           ;LCD8btis.c: 66:     for (int i = 0; value[i] != '\0'; i++)
  4546  0EC3  01F9               	clrf	LcdWriteString@i
  4547  0EC4  01FA               	clrf	LcdWriteString@i+1
  4548  0EC5  2EE8               	goto	l1969
  4549  0EC6                     l1965:
  4550                           
  4551                           ;LCD8btis.c: 67:         LcdWriteChar(value[i]);
  4552  0EC6  0879               	movf	LcdWriteString@i,w
  4553  0EC7  0774               	addwf	LcdWriteString@value,w
  4554  0EC8  00F7               	movwf	??_LcdWriteString+1
  4555  0EC9  0875               	movf	LcdWriteString@value+1,w
  4556  0ECA  00F6               	movwf	??_LcdWriteString
  4557  0ECB  1803               	skipnc
  4558  0ECC  0AF6               	incf	??_LcdWriteString,f
  4559  0ECD  1FF9               	btfss	LcdWriteString@i,7
  4560  0ECE  2ED0               	goto	u2860
  4561  0ECF  03F6               	decf	??_LcdWriteString,f
  4562  0ED0                     u2860:
  4563  0ED0  0876               	movf	??_LcdWriteString,w
  4564  0ED1  00F8               	movwf	??_LcdWriteString+2
  4565  0ED2  0878               	movf	??_LcdWriteString+2,w
  4566  0ED3  1283               	bcf	3,5	;RP0=0, select bank0
  4567  0ED4  1303               	bcf	3,6	;RP1=0, select bank0
  4568  0ED5  00FF               	movwf	btemp+1
  4569  0ED6  0877               	movf	??_LcdWriteString+1,w
  4570  0ED7  0084               	movwf	4
  4571  0ED8  120A  158A  2000  120A  158A  	fcall	stringtab
  4572  0EDD  120A  158A  25C0  120A  158A  	fcall	_LcdWriteChar
  4573  0EE2                     l1967:
  4574  0EE2  3001               	movlw	1
  4575  0EE3  07F9               	addwf	LcdWriteString@i,f
  4576  0EE4  1803               	skipnc
  4577  0EE5  0AFA               	incf	LcdWriteString@i+1,f
  4578  0EE6  3000               	movlw	0
  4579  0EE7  07FA               	addwf	LcdWriteString@i+1,f
  4580  0EE8                     l1969:
  4581  0EE8  0879               	movf	LcdWriteString@i,w
  4582  0EE9  0774               	addwf	LcdWriteString@value,w
  4583  0EEA  00F7               	movwf	??_LcdWriteString+1
  4584  0EEB  0875               	movf	LcdWriteString@value+1,w
  4585  0EEC  00F6               	movwf	??_LcdWriteString
  4586  0EED  1803               	skipnc
  4587  0EEE  0AF6               	incf	??_LcdWriteString,f
  4588  0EEF  1FF9               	btfss	LcdWriteString@i,7
  4589  0EF0  2EF2               	goto	u2870
  4590  0EF1  03F6               	decf	??_LcdWriteString,f
  4591  0EF2                     u2870:
  4592  0EF2  0876               	movf	??_LcdWriteString,w
  4593  0EF3  00F8               	movwf	??_LcdWriteString+2
  4594  0EF4  0878               	movf	??_LcdWriteString+2,w
  4595  0EF5  1283               	bcf	3,5	;RP0=0, select bank0
  4596  0EF6  1303               	bcf	3,6	;RP1=0, select bank0
  4597  0EF7  00FF               	movwf	btemp+1
  4598  0EF8  0877               	movf	??_LcdWriteString+1,w
  4599  0EF9  0084               	movwf	4
  4600  0EFA  120A  158A  2000  120A  158A  	fcall	stringtab
  4601  0EFF  3A00               	xorlw	0
  4602  0F00  1D03               	skipz
  4603  0F01  2F03               	goto	u2881
  4604  0F02  2F04               	goto	u2880
  4605  0F03                     u2881:
  4606  0F03  2EC6               	goto	l1965
  4607  0F04                     u2880:
  4608  0F04                     l153:
  4609  0F04  0008               	return
  4610  0F05                     __end_of_LcdWriteString:
  4611                           
  4612                           	psect	text20
  4613  0DC0                     __ptext20:	
  4614 ;; *************** function _LcdWriteChar *****************
  4615 ;; Defined at:
  4616 ;;		line 56 in file "LCD8btis.c"
  4617 ;; Parameters:    Size  Location     Type
  4618 ;;  value           1    wreg     unsigned char 
  4619 ;; Auto vars:     Size  Location     Type
  4620 ;;  value           1    3[COMMON] unsigned char 
  4621 ;; Return value:  Size  Location     Type
  4622 ;;                  1    wreg      void 
  4623 ;; Registers used:
  4624 ;;		wreg, status,2, status,0, pclath, cstack
  4625 ;; Tracked objects:
  4626 ;;		On entry : 0/0
  4627 ;;		On exit  : 0/0
  4628 ;;		Unchanged: 0/0
  4629 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4630 ;;      Params:         0       0       0       0       0
  4631 ;;      Locals:         1       0       0       0       0
  4632 ;;      Temps:          1       0       0       0       0
  4633 ;;      Totals:         2       0       0       0       0
  4634 ;;Total ram usage:        2 bytes
  4635 ;; Hardware stack levels used:    1
  4636 ;; Hardware stack levels required when called:    1
  4637 ;; This function calls:
  4638 ;;		_LcdPort
  4639 ;; This function is called by:
  4640 ;;		_LcdWriteString
  4641 ;; This function uses a non-reentrant model
  4642 ;;
  4643                           
  4644                           
  4645                           ;psect for function _LcdWriteChar
  4646  0DC0                     _LcdWriteChar:
  4647                           
  4648                           ;incstack = 0
  4649                           ; Regs used in _LcdWriteChar: [wreg+status,2+status,0+pclath+cstack]
  4650                           ;LcdWriteChar@value stored from wreg
  4651  0DC0  00F3               	movwf	LcdWriteChar@value
  4652  0DC1                     l1485:
  4653                           
  4654                           ;LCD8btis.c: 57:     RE1 = 1;
  4655  0DC1  1283               	bcf	3,5	;RP0=0, select bank0
  4656  0DC2  1303               	bcf	3,6	;RP1=0, select bank0
  4657  0DC3  1489               	bsf	9,1	;volatile
  4658  0DC4                     l1487:
  4659                           
  4660                           ;LCD8btis.c: 58:     LcdPort(value);
  4661  0DC4  0873               	movf	LcdWriteChar@value,w
  4662  0DC5  120A  118A  220F  120A  158A  	fcall	_LcdPort
  4663  0DCA                     l1489:
  4664                           
  4665                           ;LCD8btis.c: 59:     RE0 = 1;
  4666  0DCA  1283               	bcf	3,5	;RP0=0, select bank0
  4667  0DCB  1303               	bcf	3,6	;RP1=0, select bank0
  4668  0DCC  1409               	bsf	9,0	;volatile
  4669  0DCD                     l1491:
  4670                           
  4671                           ;LCD8btis.c: 60:     _delay((unsigned long)((40)*(4000000/4000000.0)));
  4672  0DCD  300D               	movlw	13
  4673  0DCE  00F2               	movwf	??_LcdWriteChar
  4674  0DCF                     u2897:
  4675  0DCF  0BF2               	decfsz	??_LcdWriteChar,f
  4676  0DD0  2DCF               	goto	u2897
  4677  0DD1                     l1493:
  4678                           
  4679                           ;LCD8btis.c: 61:     RE0 = 0;
  4680  0DD1  1283               	bcf	3,5	;RP0=0, select bank0
  4681  0DD2  1303               	bcf	3,6	;RP1=0, select bank0
  4682  0DD3  1009               	bcf	9,0	;volatile
  4683  0DD4                     l147:
  4684  0DD4  0008               	return
  4685  0DD5                     __end_of_LcdWriteChar:
  4686                           
  4687                           	psect	text21
  4688  0E1A                     __ptext21:	
  4689 ;; *************** function _LcdSetCursor *****************
  4690 ;; Defined at:
  4691 ;;		line 29 in file "LCD8btis.c"
  4692 ;; Parameters:    Size  Location     Type
  4693 ;;  row             1    wreg     unsigned char 
  4694 ;;  column          1    5[COMMON] unsigned char 
  4695 ;; Auto vars:     Size  Location     Type
  4696 ;;  row             1    8[COMMON] unsigned char 
  4697 ;; Return value:  Size  Location     Type
  4698 ;;                  1    wreg      void 
  4699 ;; Registers used:
  4700 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4701 ;; Tracked objects:
  4702 ;;		On entry : 0/0
  4703 ;;		On exit  : 0/0
  4704 ;;		Unchanged: 0/0
  4705 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4706 ;;      Params:         1       0       0       0       0
  4707 ;;      Locals:         1       0       0       0       0
  4708 ;;      Temps:          2       0       0       0       0
  4709 ;;      Totals:         4       0       0       0       0
  4710 ;;Total ram usage:        4 bytes
  4711 ;; Hardware stack levels used:    1
  4712 ;; Hardware stack levels required when called:    2
  4713 ;; This function calls:
  4714 ;;		_LcdCmd
  4715 ;; This function is called by:
  4716 ;;		_main
  4717 ;; This function uses a non-reentrant model
  4718 ;;
  4719                           
  4720                           
  4721                           ;psect for function _LcdSetCursor
  4722  0E1A                     _LcdSetCursor:
  4723                           
  4724                           ;incstack = 0
  4725                           ; Regs used in _LcdSetCursor: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4726                           ;LcdSetCursor@row stored from wreg
  4727  0E1A  00F8               	movwf	LcdSetCursor@row
  4728  0E1B                     l1949:
  4729                           
  4730                           ;LCD8btis.c: 30:     switch(row){
  4731  0E1B  2E2C               	goto	l1957
  4732  0E1C                     l1951:
  4733                           
  4734                           ;LCD8btis.c: 32:             LcdCmd(0x80 + column - 1);
  4735  0E1C  0875               	movf	LcdSetCursor@column,w
  4736  0E1D  3E7F               	addlw	127
  4737  0E1E  120A  158A  2600  120A  158A  	fcall	_LcdCmd
  4738                           
  4739                           ;LCD8btis.c: 33:             break;
  4740  0E23  2E3C               	goto	l141
  4741  0E24                     l1953:
  4742                           
  4743                           ;LCD8btis.c: 35:             LcdCmd(0xC0 + column - 1);
  4744  0E24  0875               	movf	LcdSetCursor@column,w
  4745  0E25  3EBF               	addlw	191
  4746  0E26  120A  158A  2600  120A  158A  	fcall	_LcdCmd
  4747                           
  4748                           ;LCD8btis.c: 36:             break;
  4749  0E2B  2E3C               	goto	l141
  4750  0E2C                     l1957:
  4751  0E2C  0878               	movf	LcdSetCursor@row,w
  4752  0E2D  00F6               	movwf	??_LcdSetCursor
  4753  0E2E  01F7               	clrf	??_LcdSetCursor+1
  4754                           
  4755                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4756                           ; Switch size 1, requested type "simple"
  4757                           ; Number of cases is 1, Range of values is 0 to 0
  4758                           ; switch strategies available:
  4759                           ; Name         Instructions Cycles
  4760                           ; simple_byte            4     3 (average)
  4761                           ; direct_byte           11     8 (fixed)
  4762                           ; jumptable            260     6 (fixed)
  4763                           ;	Chosen strategy is simple_byte
  4764  0E2F  0877               	movf	??_LcdSetCursor+1,w
  4765  0E30  3A00               	xorlw	0	; case 0
  4766  0E31  1903               	skipnz
  4767  0E32  2E34               	goto	l2081
  4768  0E33  2E3C               	goto	l141
  4769  0E34                     l2081:
  4770                           
  4771                           ; Switch size 1, requested type "simple"
  4772                           ; Number of cases is 2, Range of values is 1 to 2
  4773                           ; switch strategies available:
  4774                           ; Name         Instructions Cycles
  4775                           ; simple_byte            7     4 (average)
  4776                           ; direct_byte           17    11 (fixed)
  4777                           ; jumptable            263     9 (fixed)
  4778                           ;	Chosen strategy is simple_byte
  4779  0E34  0876               	movf	??_LcdSetCursor,w
  4780  0E35  3A01               	xorlw	1	; case 1
  4781  0E36  1903               	skipnz
  4782  0E37  2E1C               	goto	l1951
  4783  0E38  3A03               	xorlw	3	; case 2
  4784  0E39  1903               	skipnz
  4785  0E3A  2E24               	goto	l1953
  4786  0E3B  2E3C               	goto	l141
  4787  0E3C                     l141:
  4788  0E3C  0008               	return
  4789  0E3D                     __end_of_LcdSetCursor:
  4790                           
  4791                           	psect	text22
  4792  0012                     __ptext22:	
  4793 ;; *************** function _LcdInit *****************
  4794 ;; Defined at:
  4795 ;;		line 41 in file "LCD8btis.c"
  4796 ;; Parameters:    Size  Location     Type
  4797 ;;		None
  4798 ;; Auto vars:     Size  Location     Type
  4799 ;;		None
  4800 ;; Return value:  Size  Location     Type
  4801 ;;                  1    wreg      void 
  4802 ;; Registers used:
  4803 ;;		wreg, status,2, status,0, pclath, cstack
  4804 ;; Tracked objects:
  4805 ;;		On entry : 0/0
  4806 ;;		On exit  : 0/0
  4807 ;;		Unchanged: 0/0
  4808 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4809 ;;      Params:         0       0       0       0       0
  4810 ;;      Locals:         0       0       0       0       0
  4811 ;;      Temps:          2       0       0       0       0
  4812 ;;      Totals:         2       0       0       0       0
  4813 ;;Total ram usage:        2 bytes
  4814 ;; Hardware stack levels used:    1
  4815 ;; Hardware stack levels required when called:    2
  4816 ;; This function calls:
  4817 ;;		_LcdCmd
  4818 ;;		_LcdPort
  4819 ;; This function is called by:
  4820 ;;		_main
  4821 ;; This function uses a non-reentrant model
  4822 ;;
  4823                           
  4824                           
  4825                           ;psect for function _LcdInit
  4826  0012                     _LcdInit:
  4827  0012                     l1909:	
  4828                           ;incstack = 0
  4829                           ; Regs used in _LcdInit: [wreg+status,2+status,0+pclath+cstack]
  4830                           
  4831                           
  4832                           ;LCD8btis.c: 42:     LcdPort(0x00);
  4833  0012  3000               	movlw	0
  4834  0013  120A  118A  220F  120A  118A  	fcall	_LcdPort
  4835  0018                     l1911:
  4836                           
  4837                           ;LCD8btis.c: 43:     _delay((unsigned long)((20)*(4000000/4000.0)));
  4838  0018  301A               	movlw	26
  4839  0019  00F6               	movwf	??_LcdInit+1
  4840  001A  30F8               	movlw	248
  4841  001B  00F5               	movwf	??_LcdInit
  4842  001C                     u2907:
  4843  001C  0BF5               	decfsz	??_LcdInit,f
  4844  001D  281C               	goto	u2907
  4845  001E  0BF6               	decfsz	??_LcdInit+1,f
  4846  001F  281C               	goto	u2907
  4847  0020  0000               	nop
  4848  0021                     l1913:
  4849                           
  4850                           ;LCD8btis.c: 44:     LcdCmd(0x30);
  4851  0021  3030               	movlw	48
  4852  0022  120A  158A  2600  120A  118A  	fcall	_LcdCmd
  4853                           
  4854                           ;LCD8btis.c: 45:     _delay((unsigned long)((5)*(4000000/4000.0)));
  4855  0027  3007               	movlw	7
  4856  0028  00F6               	movwf	??_LcdInit+1
  4857  0029  307D               	movlw	125
  4858  002A  00F5               	movwf	??_LcdInit
  4859  002B                     u2917:
  4860  002B  0BF5               	decfsz	??_LcdInit,f
  4861  002C  282B               	goto	u2917
  4862  002D  0BF6               	decfsz	??_LcdInit+1,f
  4863  002E  282B               	goto	u2917
  4864  002F                     l1915:
  4865                           
  4866                           ;LCD8btis.c: 46:     LcdCmd(0x30);
  4867  002F  3030               	movlw	48
  4868  0030  120A  158A  2600  120A  118A  	fcall	_LcdCmd
  4869  0035                     l1917:
  4870                           
  4871                           ;LCD8btis.c: 47:     _delay((unsigned long)((11)*(4000000/4000.0)));
  4872  0035  300F               	movlw	15
  4873  0036  00F6               	movwf	??_LcdInit+1
  4874  0037  3047               	movlw	71
  4875  0038  00F5               	movwf	??_LcdInit
  4876  0039                     u2927:
  4877  0039  0BF5               	decfsz	??_LcdInit,f
  4878  003A  2839               	goto	u2927
  4879  003B  0BF6               	decfsz	??_LcdInit+1,f
  4880  003C  2839               	goto	u2927
  4881  003D  283E               	nop2
  4882                           
  4883                           ;LCD8btis.c: 48:     LcdCmd(0x30);
  4884  003E  3030               	movlw	48
  4885  003F  120A  158A  2600  120A  118A  	fcall	_LcdCmd
  4886                           
  4887                           ;LCD8btis.c: 50:     LcdCmd(0x38);
  4888  0044  3038               	movlw	56
  4889  0045  120A  158A  2600  120A  118A  	fcall	_LcdCmd
  4890                           
  4891                           ;LCD8btis.c: 51:     LcdCmd(0x0C);
  4892  004A  300C               	movlw	12
  4893  004B  120A  158A  2600  120A  118A  	fcall	_LcdCmd
  4894                           
  4895                           ;LCD8btis.c: 52:     LcdCmd(0x6);
  4896  0050  3006               	movlw	6
  4897  0051  120A  158A  2600  120A  118A  	fcall	_LcdCmd
  4898  0056                     l144:
  4899  0056  0008               	return
  4900  0057                     __end_of_LcdInit:
  4901                           
  4902                           	psect	text23
  4903  0E00                     __ptext23:	
  4904 ;; *************** function _LcdCmd *****************
  4905 ;; Defined at:
  4906 ;;		line 16 in file "LCD8btis.c"
  4907 ;; Parameters:    Size  Location     Type
  4908 ;;  value           1    wreg     unsigned char 
  4909 ;; Auto vars:     Size  Location     Type
  4910 ;;  value           1    4[COMMON] unsigned char 
  4911 ;; Return value:  Size  Location     Type
  4912 ;;                  1    wreg      void 
  4913 ;; Registers used:
  4914 ;;		wreg, status,2, status,0, pclath, cstack
  4915 ;; Tracked objects:
  4916 ;;		On entry : 0/0
  4917 ;;		On exit  : 0/0
  4918 ;;		Unchanged: 0/0
  4919 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4920 ;;      Params:         0       0       0       0       0
  4921 ;;      Locals:         1       0       0       0       0
  4922 ;;      Temps:          2       0       0       0       0
  4923 ;;      Totals:         3       0       0       0       0
  4924 ;;Total ram usage:        3 bytes
  4925 ;; Hardware stack levels used:    1
  4926 ;; Hardware stack levels required when called:    1
  4927 ;; This function calls:
  4928 ;;		_LcdPort
  4929 ;; This function is called by:
  4930 ;;		_LcdSetCursor
  4931 ;;		_LcdInit
  4932 ;;		_LcdClear
  4933 ;;		_LcdShiftRight
  4934 ;;		_LcdShiftLeft
  4935 ;; This function uses a non-reentrant model
  4936 ;;
  4937                           
  4938                           
  4939                           ;psect for function _LcdCmd
  4940  0E00                     _LcdCmd:
  4941                           
  4942                           ;incstack = 0
  4943                           ; Regs used in _LcdCmd: [wreg+status,2+status,0+pclath+cstack]
  4944                           ;LcdCmd@value stored from wreg
  4945  0E00  00F4               	movwf	LcdCmd@value
  4946  0E01                     l1475:
  4947                           
  4948                           ;LCD8btis.c: 17:     RE1 = 0;
  4949  0E01  1283               	bcf	3,5	;RP0=0, select bank0
  4950  0E02  1303               	bcf	3,6	;RP1=0, select bank0
  4951  0E03  1089               	bcf	9,1	;volatile
  4952  0E04                     l1477:
  4953                           
  4954                           ;LCD8btis.c: 18:     LcdPort(value);
  4955  0E04  0874               	movf	LcdCmd@value,w
  4956  0E05  120A  118A  220F  120A  158A  	fcall	_LcdPort
  4957  0E0A                     l1479:
  4958                           
  4959                           ;LCD8btis.c: 19:     RE0 = 1;
  4960  0E0A  1283               	bcf	3,5	;RP0=0, select bank0
  4961  0E0B  1303               	bcf	3,6	;RP1=0, select bank0
  4962  0E0C  1409               	bsf	9,0	;volatile
  4963  0E0D                     l1481:
  4964                           
  4965                           ;LCD8btis.c: 20:     _delay((unsigned long)((4)*(4000000/4000.0)));
  4966  0E0D  3006               	movlw	6
  4967  0E0E  00F3               	movwf	??_LcdCmd+1
  4968  0E0F  3030               	movlw	48
  4969  0E10  00F2               	movwf	??_LcdCmd
  4970  0E11                     u2937:
  4971  0E11  0BF2               	decfsz	??_LcdCmd,f
  4972  0E12  2E11               	goto	u2937
  4973  0E13  0BF3               	decfsz	??_LcdCmd+1,f
  4974  0E14  2E11               	goto	u2937
  4975  0E15  0000               	nop
  4976  0E16                     l1483:
  4977                           
  4978                           ;LCD8btis.c: 21:     RE0 = 0;
  4979  0E16  1283               	bcf	3,5	;RP0=0, select bank0
  4980  0E17  1303               	bcf	3,6	;RP1=0, select bank0
  4981  0E18  1009               	bcf	9,0	;volatile
  4982  0E19                     l131:
  4983  0E19  0008               	return
  4984  0E1A                     __end_of_LcdCmd:
  4985                           
  4986                           	psect	text24
  4987  020F                     __ptext24:	
  4988 ;; *************** function _LcdPort *****************
  4989 ;; Defined at:
  4990 ;;		line 3 in file "LCD8btis.c"
  4991 ;; Parameters:    Size  Location     Type
  4992 ;;  value           1    wreg     unsigned char 
  4993 ;; Auto vars:     Size  Location     Type
  4994 ;;  value           1    1[COMMON] unsigned char 
  4995 ;; Return value:  Size  Location     Type
  4996 ;;                  1    wreg      void 
  4997 ;; Registers used:
  4998 ;;		wreg, status,2, status,0
  4999 ;; Tracked objects:
  5000 ;;		On entry : 0/0
  5001 ;;		On exit  : 0/0
  5002 ;;		Unchanged: 0/0
  5003 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5004 ;;      Params:         0       0       0       0       0
  5005 ;;      Locals:         1       0       0       0       0
  5006 ;;      Temps:          1       0       0       0       0
  5007 ;;      Totals:         2       0       0       0       0
  5008 ;;Total ram usage:        2 bytes
  5009 ;; Hardware stack levels used:    1
  5010 ;; This function calls:
  5011 ;;		Nothing
  5012 ;; This function is called by:
  5013 ;;		_LcdCmd
  5014 ;;		_LcdInit
  5015 ;;		_LcdWriteChar
  5016 ;; This function uses a non-reentrant model
  5017 ;;
  5018                           
  5019                           
  5020                           ;psect for function _LcdPort
  5021  020F                     _LcdPort:
  5022                           
  5023                           ;incstack = 0
  5024                           ; Regs used in _LcdPort: [wreg+status,2+status,0]
  5025                           ;LcdPort@value stored from wreg
  5026  020F  00F1               	movwf	LcdPort@value
  5027  0210                     l1457:
  5028                           
  5029                           ;LCD8btis.c: 6:     RD0 = value &1;
  5030  0210  1871               	btfsc	LcdPort@value,0
  5031  0211  2A13               	goto	u1491
  5032  0212  2A17               	goto	u1490
  5033  0213                     u1491:
  5034  0213  1283               	bcf	3,5	;RP0=0, select bank0
  5035  0214  1303               	bcf	3,6	;RP1=0, select bank0
  5036  0215  1408               	bsf	8,0	;volatile
  5037  0216  2A1A               	goto	u1504
  5038  0217                     u1490:
  5039  0217  1283               	bcf	3,5	;RP0=0, select bank0
  5040  0218  1303               	bcf	3,6	;RP1=0, select bank0
  5041  0219  1008               	bcf	8,0	;volatile
  5042  021A                     u1504:
  5043  021A                     l1459:
  5044                           
  5045                           ;LCD8btis.c: 7:     RD1 = (value & 2) >> 1;
  5046  021A  0871               	movf	LcdPort@value,w
  5047  021B  00F0               	movwf	??_LcdPort
  5048  021C  3001               	movlw	1
  5049  021D                     u1515:
  5050  021D  1003               	clrc
  5051  021E  0CF0               	rrf	??_LcdPort,f
  5052  021F  3EFF               	addlw	-1
  5053  0220  1D03               	skipz
  5054  0221  2A1D               	goto	u1515
  5055  0222  1870               	btfsc	??_LcdPort,0
  5056  0223  2A25               	goto	u1521
  5057  0224  2A29               	goto	u1520
  5058  0225                     u1521:
  5059  0225  1283               	bcf	3,5	;RP0=0, select bank0
  5060  0226  1303               	bcf	3,6	;RP1=0, select bank0
  5061  0227  1488               	bsf	8,1	;volatile
  5062  0228  2A2C               	goto	u1534
  5063  0229                     u1520:
  5064  0229  1283               	bcf	3,5	;RP0=0, select bank0
  5065  022A  1303               	bcf	3,6	;RP1=0, select bank0
  5066  022B  1088               	bcf	8,1	;volatile
  5067  022C                     u1534:
  5068                           
  5069                           ;LCD8btis.c: 8:     RD2 = (value & 4) >> 2;
  5070  022C  0871               	movf	LcdPort@value,w
  5071  022D  00F0               	movwf	??_LcdPort
  5072  022E  3002               	movlw	2
  5073  022F                     u1545:
  5074  022F  1003               	clrc
  5075  0230  0CF0               	rrf	??_LcdPort,f
  5076  0231  3EFF               	addlw	-1
  5077  0232  1D03               	skipz
  5078  0233  2A2F               	goto	u1545
  5079  0234  1870               	btfsc	??_LcdPort,0
  5080  0235  2A37               	goto	u1551
  5081  0236  2A3B               	goto	u1550
  5082  0237                     u1551:
  5083  0237  1283               	bcf	3,5	;RP0=0, select bank0
  5084  0238  1303               	bcf	3,6	;RP1=0, select bank0
  5085  0239  1508               	bsf	8,2	;volatile
  5086  023A  2A3E               	goto	u1564
  5087  023B                     u1550:
  5088  023B  1283               	bcf	3,5	;RP0=0, select bank0
  5089  023C  1303               	bcf	3,6	;RP1=0, select bank0
  5090  023D  1108               	bcf	8,2	;volatile
  5091  023E                     u1564:
  5092                           
  5093                           ;LCD8btis.c: 9:     RD3 = (value &8) >> 3;
  5094  023E  0871               	movf	LcdPort@value,w
  5095  023F  00F0               	movwf	??_LcdPort
  5096  0240  3003               	movlw	3
  5097  0241                     u1575:
  5098  0241  1003               	clrc
  5099  0242  0CF0               	rrf	??_LcdPort,f
  5100  0243  3EFF               	addlw	-1
  5101  0244  1D03               	skipz
  5102  0245  2A41               	goto	u1575
  5103  0246  1870               	btfsc	??_LcdPort,0
  5104  0247  2A49               	goto	u1581
  5105  0248  2A4D               	goto	u1580
  5106  0249                     u1581:
  5107  0249  1283               	bcf	3,5	;RP0=0, select bank0
  5108  024A  1303               	bcf	3,6	;RP1=0, select bank0
  5109  024B  1588               	bsf	8,3	;volatile
  5110  024C  2A50               	goto	u1594
  5111  024D                     u1580:
  5112  024D  1283               	bcf	3,5	;RP0=0, select bank0
  5113  024E  1303               	bcf	3,6	;RP1=0, select bank0
  5114  024F  1188               	bcf	8,3	;volatile
  5115  0250                     u1594:
  5116                           
  5117                           ;LCD8btis.c: 10:     RD4 = (value & 16)>>4;
  5118  0250  0871               	movf	LcdPort@value,w
  5119  0251  00F0               	movwf	??_LcdPort
  5120  0252  3004               	movlw	4
  5121  0253                     u1605:
  5122  0253  1003               	clrc
  5123  0254  0CF0               	rrf	??_LcdPort,f
  5124  0255  3EFF               	addlw	-1
  5125  0256  1D03               	skipz
  5126  0257  2A53               	goto	u1605
  5127  0258  1870               	btfsc	??_LcdPort,0
  5128  0259  2A5B               	goto	u1611
  5129  025A  2A5F               	goto	u1610
  5130  025B                     u1611:
  5131  025B  1283               	bcf	3,5	;RP0=0, select bank0
  5132  025C  1303               	bcf	3,6	;RP1=0, select bank0
  5133  025D  1608               	bsf	8,4	;volatile
  5134  025E  2A62               	goto	u1624
  5135  025F                     u1610:
  5136  025F  1283               	bcf	3,5	;RP0=0, select bank0
  5137  0260  1303               	bcf	3,6	;RP1=0, select bank0
  5138  0261  1208               	bcf	8,4	;volatile
  5139  0262                     u1624:
  5140                           
  5141                           ;LCD8btis.c: 11:     RD5 = (value & 32) >> 5 ;
  5142  0262  0871               	movf	LcdPort@value,w
  5143  0263  00F0               	movwf	??_LcdPort
  5144  0264  3005               	movlw	5
  5145  0265                     u1635:
  5146  0265  1003               	clrc
  5147  0266  0CF0               	rrf	??_LcdPort,f
  5148  0267  3EFF               	addlw	-1
  5149  0268  1D03               	skipz
  5150  0269  2A65               	goto	u1635
  5151  026A  1870               	btfsc	??_LcdPort,0
  5152  026B  2A6D               	goto	u1641
  5153  026C  2A71               	goto	u1640
  5154  026D                     u1641:
  5155  026D  1283               	bcf	3,5	;RP0=0, select bank0
  5156  026E  1303               	bcf	3,6	;RP1=0, select bank0
  5157  026F  1688               	bsf	8,5	;volatile
  5158  0270  2A74               	goto	u1654
  5159  0271                     u1640:
  5160  0271  1283               	bcf	3,5	;RP0=0, select bank0
  5161  0272  1303               	bcf	3,6	;RP1=0, select bank0
  5162  0273  1288               	bcf	8,5	;volatile
  5163  0274                     u1654:
  5164                           
  5165                           ;LCD8btis.c: 12:     RD6 = (value & 64) >> 6;
  5166  0274  0871               	movf	LcdPort@value,w
  5167  0275  00F0               	movwf	??_LcdPort
  5168  0276  3006               	movlw	6
  5169  0277                     u1665:
  5170  0277  1003               	clrc
  5171  0278  0CF0               	rrf	??_LcdPort,f
  5172  0279  3EFF               	addlw	-1
  5173  027A  1D03               	skipz
  5174  027B  2A77               	goto	u1665
  5175  027C  1870               	btfsc	??_LcdPort,0
  5176  027D  2A7F               	goto	u1671
  5177  027E  2A83               	goto	u1670
  5178  027F                     u1671:
  5179  027F  1283               	bcf	3,5	;RP0=0, select bank0
  5180  0280  1303               	bcf	3,6	;RP1=0, select bank0
  5181  0281  1708               	bsf	8,6	;volatile
  5182  0282  2A86               	goto	u1684
  5183  0283                     u1670:
  5184  0283  1283               	bcf	3,5	;RP0=0, select bank0
  5185  0284  1303               	bcf	3,6	;RP1=0, select bank0
  5186  0285  1308               	bcf	8,6	;volatile
  5187  0286                     u1684:
  5188                           
  5189                           ;LCD8btis.c: 13:     RD7 = (value & 128) >> 7;
  5190  0286  0871               	movf	LcdPort@value,w
  5191  0287  00F0               	movwf	??_LcdPort
  5192  0288  3007               	movlw	7
  5193  0289                     u1695:
  5194  0289  1003               	clrc
  5195  028A  0CF0               	rrf	??_LcdPort,f
  5196  028B  3EFF               	addlw	-1
  5197  028C  1D03               	skipz
  5198  028D  2A89               	goto	u1695
  5199  028E  1870               	btfsc	??_LcdPort,0
  5200  028F  2A91               	goto	u1701
  5201  0290  2A95               	goto	u1700
  5202  0291                     u1701:
  5203  0291  1283               	bcf	3,5	;RP0=0, select bank0
  5204  0292  1303               	bcf	3,6	;RP1=0, select bank0
  5205  0293  1788               	bsf	8,7	;volatile
  5206  0294  2A98               	goto	u1714
  5207  0295                     u1700:
  5208  0295  1283               	bcf	3,5	;RP0=0, select bank0
  5209  0296  1303               	bcf	3,6	;RP1=0, select bank0
  5210  0297  1388               	bcf	8,7	;volatile
  5211  0298                     u1714:
  5212  0298                     l128:
  5213  0298  0008               	return
  5214  0299                     __end_of_LcdPort:
  5215  007E                     btemp	set	126	;btemp
  5216  007E                     wtemp0	set	126
  5217                           
  5218                           	psect	config
  5219                           
  5220                           ;Config register CONFIG1 @ 0x2007
  5221                           ;	Oscillator Selection bits
  5222                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  5223                           ;	Watchdog Timer Enable bit
  5224                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  5225                           ;	Power-up Timer Enable bit
  5226                           ;	PWRTE = OFF, PWRT disabled
  5227                           ;	RE3/MCLR pin function select bit
  5228                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  5229                           ;	Code Protection bit
  5230                           ;	CP = OFF, Program memory code protection is disabled
  5231                           ;	Data Code Protection bit
  5232                           ;	CPD = OFF, Data memory code protection is disabled
  5233                           ;	Brown Out Reset Selection bits
  5234                           ;	BOREN = OFF, BOR disabled
  5235                           ;	Internal External Switchover bit
  5236                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  5237                           ;	Fail-Safe Clock Monitor Enabled bit
  5238                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  5239                           ;	Low Voltage Programming Enable bit
  5240                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  5241                           ;	In-Circuit Debugger Mode bit
  5242                           ;	DEBUG = 0x1, unprogrammed default
  5243  2007                     	org	8199
  5244  2007  20D4               	dw	8404
  5245                           
  5246                           ;Config register CONFIG2 @ 0x2008
  5247                           ;	Brown-out Reset Selection bit
  5248                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  5249                           ;	Flash Program Memory Self Write Enable bits
  5250                           ;	WRT = OFF, Write protection off
  5251  2008                     	org	8200
  5252  2008  3FFF               	dw	16383

Data Sizes:
    Strings     20
    Constant    0
    Data        0
    BSS         4
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     50      54
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    LcdWriteString@value	PTR const unsigned char  size(2) Largest target is 17
		 -> NULL(NULL[0]), int2String@cadena(BANK0[4]), adcToString@salida(BANK0[5]), STR_2(CODE[3]), 
		 -> STR_1(CODE[17]), 

    sp__int2String	PTR unsigned char  size(1) Largest target is 4
		 -> int2String@cadena(BANK0[4]), 

    cadenaCounter	PTR unsigned char  size(1) Largest target is 4
		 -> NULL(NULL[0]), int2String@cadena(BANK0[4]), 

    sp__adcToString	PTR unsigned char  size(1) Largest target is 5
		 -> adcToString@salida(BANK0[5]), 

    cadenaADC	PTR unsigned char  size(1) Largest target is 5
		 -> NULL(NULL[0]), adcToString@salida(BANK0[5]), 


Critical Paths under _main in COMMON

    _int2String->___awdiv
    _adcToString->___xxtofl
    ___fltol->___xxtofl
    ___flmul->___xxtofl
    _UARTInit->___lldiv
    _LcdWriteString->_LcdWriteChar
    _LcdWriteChar->_LcdPort
    _LcdSetCursor->_LcdCmd
    _LcdInit->_LcdCmd
    _LcdCmd->_LcdPort

Critical Paths under _main in BANK0

    _main->_adcToString
    _adcToString->___fltol
    ___fltol->___flmul

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    8396
                                             47 BANK0      3     3      0
                            _LcdInit
                       _LcdSetCursor
                     _LcdWriteString
                           _UARTInit
                        _adcToString
                         _int2String
                            _spiInit
                            _spiRead
                           _spiWrite
 ---------------------------------------------------------------------------------
 (1) _spiWrite                                             1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _spiRead                                              0     0      0       0
                     _spiReceiveWait
 ---------------------------------------------------------------------------------
 (2) _spiReceiveWait                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _spiInit                                              4     1      3     360
                                              0 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 (1) _int2String                                           9     9      0    1429
                                              9 COMMON     3     3      0
                                              0 BANK0      6     6      0
                            ___awdiv
                            ___awmod
                             ___bmul
 ---------------------------------------------------------------------------------
 (2) ___bmul                                               4     3      1     168
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4     448
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     604
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (1) _adcToString                                         10     8      2    4519
                                             37 BANK0     10     8      2
                            ___flmul
                            ___fltol
                            ___lwdiv
                            ___lwmod
                             ___wmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     398
                                              0 COMMON    14    10      4
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     244
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     311
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     466
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             11     7      4     305
                                             26 BANK0     11     7      4
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flmul                                             26    18      8    2417
                                              0 BANK0     26    18      8
                          __Umul8_16
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) __Umul8_16                                            9     7      2     799
                                              0 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 (1) _UARTInit                                             9     4      5     684
                                              0 BANK0      9     4      5
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     466
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 (1) _LcdWriteString                                       7     5      2     592
                                              4 COMMON     7     5      2
                       _LcdWriteChar
 ---------------------------------------------------------------------------------
 (2) _LcdWriteChar                                         2     2      0     198
                                              2 COMMON     2     2      0
                            _LcdPort
 ---------------------------------------------------------------------------------
 (1) _LcdSetCursor                                         4     3      1     416
                                              5 COMMON     4     3      1
                             _LcdCmd
 ---------------------------------------------------------------------------------
 (1) _LcdInit                                              2     2      0     374
                                              5 COMMON     2     2      0
                             _LcdCmd
                            _LcdPort
 ---------------------------------------------------------------------------------
 (2) _LcdCmd                                               3     3      0     198
                                              2 COMMON     3     3      0
                            _LcdPort
 ---------------------------------------------------------------------------------
 (3) _LcdPort                                              2     2      0     176
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LcdInit
     _LcdCmd
       _LcdPort
     _LcdPort
   _LcdSetCursor
     _LcdCmd
       _LcdPort
   _LcdWriteString
     _LcdWriteChar
       _LcdPort
   _UARTInit
     ___lldiv
   _adcToString
     ___flmul
       __Umul8_16
       ___xxtofl (ARG)
     ___fltol
       ___flmul (ARG)
         __Umul8_16
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___lwdiv
     ___lwmod
     ___wmul
     ___xxtofl
   _int2String
     ___awdiv
     ___awmod
     ___bmul
   _spiInit
   _spiRead
     _spiReceiveWait
   _spiWrite

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      44       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     32      36       5       67.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      44      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Mon Feb 15 16:42:34 2021

      UARTInit@baud_rate 0020                        pc 0002           ___bmul@product 0072  
            _SSPSTATbits 0094                       l52 0FFF                       l71 0192  
                     l49 0336             ___awdiv@sign 0076                       fsr 0004  
    ___wmul@multiplicand 0072      __Umul8_16@word_mpld 0076                      l131 0E19  
                    l141 0E3C                      l128 0298                      l144 0056  
                    l153 0F04                      l305 0DE9                      l147 0DD4  
                    l315 00BC                      l182 0DBF                      l175 0DFA  
                    l432 0123                      l176 0DFF                      l281 0E61  
                    l193 0011                      l185 0008                      l179 0DB9  
                    l445 0FA1                      l551 0F48                      l279 0E49  
                    l472 01F9                      l712 03FD                      l465 020E  
                    l561 0EC2                      l714 0494                      l475 020E  
                    l725 045E                      l726 046A                      l718 0442  
                    l680 07E9                      l674 0761                      l668 07F5  
                    l687 0E76                      l689 0E88                      _RD0 0040  
                    _RD1 0041                      _RD2 0042                      _RE0 0048  
                    _RD3 0043                      _RE1 0049                      _RD4 0044  
                    _RD5 0045                      _RD6 0046                      _RD7 0047  
                    fsr0 0004                      indf 0000             ___awmod@sign 0076  
           ___flmul@aexp 0032             ___flmul@bexp 0033             ___flmul@sign 002D  
           ___flmul@temp 0038             ___flmul@prod 0034             ___fltol@exp1 0044  
                   l2011 0FE6                     l2003 0FA5                     l2013 0FFD  
                   l2005 0FBB                     l2021 0340                     l2015 0FFE  
                   l2007 0FC0                     l2031 0370                     l2023 0349  
                   l2009 0FCF                     l2041 039D                     l2033 0378  
                   l2025 034E                     l2051 03C3                     l2043 03A6  
                   l2035 037C                     l2027 035F                     l2019 0337  
                   l1501 0E43                     l2053 03CE                     l2045 03AF  
                   l2037 0382                     l2029 0367                     l1503 0E50  
                   l1511 0DD6                     l2047 03B3                     l2039 038C  
                   l2081 0E34                     l1505 0E57                     l1601 0F55  
                   l1521 0DE8                     l1513 0DD7                     l2049 03B9  
                   l1531 0077                     l1507 0E5D                     l1611 0F6E  
                   l1603 0F59                     l1515 0DDB                     l1541 00A5  
                   l1533 007B                     l1525 0057                     l1461 0E63  
                   l1701 0E9D                     l1621 0F8D                     l1613 0F72  
                   l1605 0F5E                     l1517 0DDF                     l1543 00AE  
                   l1535 0084                     l1527 0067                     l1471 0E84  
                   l1463 0E65                     l1631 0193                     l1703 0EA1  
                   l1711 0EBE                     l1551 00BE                     l1615 0F76  
                   l1607 0F64                     l1623 0F93                     l1519 0DE1  
                   l1457 0210                     l1481 0E0D                     l1537 0096  
                   l1529 006A                     l1545 00B4                     l1465 0E6C  
                   l1801 0724                     l1721 04A6                     l1641 01BF  
                   l1633 01A0                     l1705 0EAB                     l1561 00D2  
                   l1553 00C2                     l1625 0F98                     l1617 0F80  
                   l1609 0F67                     l1459 021A                     l1483 0E16  
                   l1475 0E01                     l1491 0DCD                     l1539 00A4  
                   l1467 0E70                     l1803 072D                     l1811 0741  
                   l1731 04BB                     l1723 04A7                     l1715 0495  
                   l1643 01C7                     l1707 0EB1                     l1571 00E8  
                   l1563 00D6                     l1555 00C7                     l1627 0F9D  
                   l1619 0F86                     l1477 0E04                     l1493 0DD1  
                   l1485 0DC1                     l1469 0E7F                     l1813 0745  
                   l1805 0731                     l1741 04D3                     l1733 04C3  
                   l1725 04AC                     l1717 049C                     l1661 01EE  
                   l1653 01D5                     l1645 01C9                     l1637 01A9  
                   l1709 0EB8                     l1581 0108                     l1573 00EC  
                   l1565 00D8                     l1557 00C9                     l1549 00BD  
                   l1901 0DF2                     l1479 0E0A                     l1911 0018  
                   l1487 0DC4                     l1831 0796                     l1823 0766  
                   l1815 0746                     l1807 0732                     l1751 04EF  
                   l1743 04D8                     l1735 04C8                     l1727 04B1  
                   l1719 04A2                     l1663 01FE                     l1647 01CD  
                   l1655 01E7                     l1639 01BE                     l1671 0F0D  
                   l1583 010F                     l1575 00F0                     l1567 00DE  
                   l1559 00CD                     l1903 0DF4                     l1495 0DB9  
                   l1913 0021                     l1489 0DCA                     l1921 012B  
                   l1841 07CD                     l1825 076B                     l1833 079C  
                   l1817 074A                     l1809 073B                     l1761 0512  
                   l1753 04F4                     l1745 04DD                     l1737 04CE  
                   l1729 04B9                     l1665 0203                     l1681 0F30  
                   l1673 0F10                     l1497 0E3D                     l1577 0101  
                   l1569 00E1                     l1585 0115                     l1593 0F49  
                   l1905 0DF6                     l1915 002F                     l1931 0185  
                   l1923 0156                     l1851 07ED                     l1843 07CF  
                   l1835 07A9                     l1827 0779                     l1819 075E  
                   l1771 05A0                     l1763 051F                     l1755 04F9  
                   l1747 04E5                     l1739 04D2                     l1683 0F36  
                   l1675 0F17                     l1667 0F05                     l1499 0E3F  
                   l1587 011A                     l1579 0107                     l1595 0F4A  
                   l1907 0DF9                     l1917 0035                     l1909 0012  
                   l1941 018C                     l1933 0186                     l1925 0158  
                   l1845 07DD                     l1837 07B4                     l1829 077D  
                   l1781 0602                     l1773 05BC                     l1765 053C  
                   l1749 04E7                     l1685 0F37                     l1677 0F1B  
                   l1669 0F07                     l1693 0E89                     l1861 03F5  
                   l1589 011F                     l1597 0F4E                     l1951 0E1C  
                   l1943 018D                     l1935 0187                     l1927 0183  
                   l1919 0124                     l1847 07E1                     l1839 07C3  
                   l1791 0692                     l1783 061F                     l1775 05C5  
                   l1767 0558                     l1759 0502                     l1687 0F3E  
                   l1679 0F1F                     l1695 0E8F                     l1871 0420  
                   l1863 0405                     l1855 03DC                     l1599 0F53  
                   l1953 0E24                     l1945 018E                     l1937 018A  
                   l1929 0184                     l1849 07E2                     l1793 06BF  
                   l1785 0638                     l1777 05D5                     l1769 0584  
                   l1689 0F44                     l1697 0E92                     l1881 0454  
                   l1873 0427                     l1857 03E1                     l1963 0EC3  
                   l1947 0191                     l1939 018B                     l1795 06E5  
                   l1787 0655                     l1779 05F2                     l1699 0E99  
                   l1891 0487                     l1883 0458                     l1875 042B  
                   l1867 040E                     l1859 03E5                     l1971 0004  
                   l1957 0E2C                     l1949 0E1B                     l1965 0EC6  
                   l1797 070D                     l1789 0682                     l1893 048B  
                   l1885 0462                     l1877 0439                     l1869 0413  
                   l1981 02D3                     l1973 0009                     l1967 0EE2  
                   l1799 0716                     l1895 048C                     l1887 046C  
                   l1879 0449                     l1991 0317                     l1983 02E6  
                   l1975 000E                     l1969 0EE8                     l1889 0482  
                   l1993 031C                     l1985 02EB                     l1995 032F  
                   l1987 02EF                     l1979 0299                     l1899 0DEB  
                   l1997 0334                     l1989 0304                     l1999 0335  
                   STR_1 0810                     STR_2 0821                     u2000 0F59  
                   u2001 0F58                     u2010 0F64                     u2011 0F63  
                   u2100 01CD                     u2101 01CC                     u2110 01D4  
                   u2030 0F76                     u2111 01D3                     u2031 0F75  
                   u2200 0F1F                     u2040 0F80                     u2201 0F1E  
                   u2041 0F7F                     u2025 0F68                     u2130 01E6  
                   u2131 01E5                     u2140 01ED                     u2220 0F30  
                   u2300 0EBE                     u2060 0F93                     u2141 01EC  
                   u2125 01D6                     u2221 0F2F                     u2301 0EBD  
                   u2061 0F92                     u2045 0F7C                     u2310 04A6  
                   u2070 0F98                     u2311 04A5                     u2215 0F20  
                   u2071 0F97                     u2055 0F87                     u1520 0229  
                   u1504 021A                     u2320 04AC                     u2160 01FE  
                   u2080 01A0                     u2240 0F44                     u1521 0225  
                   u2401 0566                     u2321 04AB                     u2161 01FD  
                   u2081 019F                     u2241 0F43                     u2225 0F2C  
                   u1610 025F                     u2402 056D                     u2330 04B1  
                   u2170 0203                     u2090 01B7                     u2250 0E8F  
                   u1611 025B                     u1515 021D                     u2411 0592  
                   u2403 0574                     u2331 04B0                     u2171 0202  
                   u2155 01F0                     u2235 0F38                     u2251 0E8E  
                   u1700 0295                     u2500 06CB                     u2412 0599  
                   u2340 04D2                     u2180 0F0D                     u1701 0291  
                   u1605 0253                     u2421 05AE                     u2413 05A0  
                   u2341 04D1                     u2181 0F0C                     u1550 023B  
                   u1534 022C                     u2422 05B5                     u2350 04D8  
                   u2270 0EA1                     u1551 0237                     u2511 06D7  
                   u2423 05BC                     u2351 04D7                     u2095 01B2  
                   u2271 0EA0                     u1640 0271                     u1624 0262  
                   u1720 0E70                     u2600 075E                     u2520 06F3  
                   u2512 06DE                     u2360 04DD                     u2280 0EAB  
                   u1800 0DDB                     u1641 026D                     u1545 022F  
                   u1721 0E6F                     u2601 075D                     u2513 06E5  
                   u2505 06C6                     u2441 05E4                     u2361 04DC  
                   u2281 0EAA                     u2265 0E93                     u1801 0DDA  
                   u1714 0298                     u1490 0217                     u2610 0765  
                   u2442 05EB                     u2370 04F4                     u1810 0DE8  
                   u1635 0265                     u1491 0213                     u2611 0764  
                   u2531 06FF                     u2451 0611                     u2443 05F2  
                   u2435 05BE                     u2371 04F3                     u2195 0F11  
                   u1811 0DE7                     u1580 024D                     u1564 023E  
                   u1820 0067                     u1740 0E84                     u2620 076B  
                   u2532 0706                     u2452 0618                     u2380 04F9  
                   u2700 0405                     u1900 00CD                     u1581 0249  
                   u1821 0066                     u1741 0E83                     u2621 076A  
                   u2533 070D                     u2525 06EE                     u2453 061F  
                   u2381 04F8                     u2285 0EA7                     u2701 0404  
                   u1901 00CC                     u1670 0283                     u1654 0274  
                   u2630 077D                     u1910 00DE                     u1750 0DBF  
                   u1671 027F                     u1575 0241                     u1735 0E77  
                   u2631 077C                     u2471 0647                     u2391 054A  
                   u2295 0EB2                     u1911 00DD                     u1751 0DBE  
                   u1840 007B                     u2640 078C                     u2560 0731  
                   u2472 064E                     u2392 0551                     u1760 0E43  
                   u2800 0487                     u2720 0426                     u1665 0277  
                   u1841 007A                     u2561 0730                     u2545 070F  
                   u2481 0674                     u2473 0655                     u2465 0621  
                   u2393 0558                     u1761 0E42                     u2801 0486  
                   u2721 0425                     u1594 0250                     u2650 07A9  
                   u2482 067B                     u2810 048B                     u1930 00F0  
                   u1835 006C                     u2651 07A8                     u2555 0726  
                   u2491 06A1                     u2483 0682                     u2811 048A  
                   u2715 0418                     u1931 00EF                     u1684 0286  
                   u1860 0096                     u2660 07C3                     u2580 0745  
                   u2492 06A8                     u2740 0448                     u2820 0DF2  
                   u1861 0095                     u2661 07C2                     u2645 0787  
                   u2581 0744                     u2493 06AF                     u2741 0447  
                   u1925 00E2                     u2821 0DF1                     u2830 012B  
                   u2670 07E1                     u2590 074A                     u1790 0E5D  
                   u1950 0101                     u1695 0289                     u1855 007D  
                   u2831 012A                     u2671 07E0                     u2655 07A5  
                   u2591 0749                     u2575 0734                     u1791 0E5C  
                   u1775 0E4A                     u2735 043A                     u1951 0100  
                   u1880 00B4                     u2840 0139                     u2760 0458  
                   u2680 03E1                     u1881 00B3                     u1865 0092  
                   u2665 07BF                     u1785 0E51                     u2761 0457  
                   u2681 03E0                     u1945 00F1                     u2850 0166  
                   u2770 045E                     u2690 03E5                     u1970 0115  
                   u1890 00C2                     u2907 001C                     u1875 00A6  
                   u2771 045D                     u2755 044D                     u2691 03E4  
                   u1971 0114                     u1955 00FD                     u1891 00C1  
                   u2860 0ED0                     u2780 0462                     u1980 011A  
                   u2917 002B                     u2845 0134                     u2781 0461  
                   u1981 0119                     u1965 0109                     u2870 0EF2  
                   u2790 0477                     u1990 0F4E                     u2927 0039  
                   u2855 0161                     u1991 0F4D                     u2880 0F04  
                   u2937 0E11                     u2881 0F03                     u2795 0472  
                   u2897 0DCF                     _main 0337                     btemp 007E  
                   start 0000          LcdSetCursor@row 0078          __end_of_LcdInit 0057  
        __end_of_LcdPort 0299        ___bmul@multiplier 0073     __end_of_LcdSetCursor 0E3D  
          ___fltol@sign1 0043                    ?_main 0070          __end_of___awdiv 0124  
        __end_of___awmod 0FA2          __end_of___flmul 07F6          __end_of___fltol 020F  
                  _ANSEL 0188          __end_of___lldiv 00BD          ___awdiv@divisor 0070  
        __end_of___lwdiv 0F49          __end_of___lwmod 0EC3          ___awdiv@counter 0075  
                  _RCREG 001A                    _SPBRG 0099                    _PORTA 0005  
                  _TRISA 0085                    _TRISD 0088                    _TRISE 0089  
                  _TXREG 0019         __end_of_UARTInit 0193                    pclath 000A  
        __end_of_spiInit 0E00          __end_of_spiRead 0012                    status 0003  
                  wtemp0 007E     __end_of_LcdWriteChar 0DD5          __initialization 07F6  
           __end_of_main 03DB        adcToString@digito 004D        adcToString@salida 0048  
                 ??_main 004F         ___awdiv@dividend 0072                   _ANSELH 0189  
              ??_LcdInit 0075                ??_LcdPort 0070                   _TRISC3 043B  
                 _TRISC5 043D                   _SSPCON 0014                   _SSPBUF 0013  
       __end_of___xxtofl 0495                   _LcdCmd 0E00                   ___bmul 0DD5  
                 ___wmul 0E3D                ??___awdiv 0074                ??___awmod 0074  
              ??___flmul 0028                ??___fltol 003E                ??___lldiv 0078  
              ??___lwdiv 0074                ??___lwmod 0074         ___awdiv@quotient 0077  
        ___awmod@divisor 0070          ___awmod@counter 0075       __size_of__Umul8_16 0027  
       __end_of_spiWrite 0009                ??_spiInit 0073                ??_spiRead 0070  
           ___xxtofl@arg 007A             ___xxtofl@exp 0079             ___xxtofl@val 0070  
__end_of__initialization 07FC  __size_of_LcdWriteString 0042               ___fltol@f1 003A  
          _cadenaCounter 0052    __size_of_LcdSetCursor 0023      ___bmul@multiplicand 0070  
      LcdWriteChar@value 0073           __pcstackCOMMON 0070                ?_UARTInit 0020  
  __size_of_LcdWriteChar 0015             _LcdSetCursor 0E1A               __pbssBANK0 0052  
          ??_adcToString 0047                  ?_LcdCmd 0070        __end_of__Umul8_16 0E89  
             __pmaintext 0337                  ?___bmul 0070                  ?___wmul 0070  
             ??_UARTInit 0025  __size_of_spiReceiveWait 0007             _LcdWriteChar 0DC0  
              ?___xxtofl 0070               _int2String 0FA2                  _SSPSTAT 0094  
             __stringtab 0800          int2String@value 0025                  _LcdInit 0012  
                _LcdPort 020F          __size_of_LcdCmd 001A      __end_of_adcToString 0337  
              ?_spiWrite 0070          __size_of___bmul 0015                  ___awdiv 00BD  
                ___awmod 0F49                  ___flmul 0495                  ___fltol 0193  
                ___lldiv 0057          __size_of___wmul 0025                  ___lwdiv 0F05  
                ___lwmod 0E89                  __ptext1 0003                  __ptext2 0009  
                __ptext3 0DB9                  __ptext4 0DEA                  __ptext5 0FA2  
                __ptext6 0DD5                  __ptext7 0F49                  __ptext8 00BD  
                __ptext9 0299               ??___xxtofl 0074         ___awmod@dividend 0072  
                _spiInit 0DEA                  _spiRead 0009     end_of_initialization 07FC  
         _LcdWriteString 0EC3          ___lldiv@divisor 0070          ___lldiv@counter 007D  
              _RCSTAbits 0018               ??_spiWrite 0070              ?_int2String 0070  
          ___xxtofl@sign 0078                _TRISCbits 0087       LcdSetCursor@column 0075  
 __end_of_LcdWriteString 0F05              spiWrite@dat 0070              ___flmul@grs 002E  
            _adcToString 0299                _TXSTAbits 0098           __end_of_LcdCmd 0E1A  
         _spiReceiveWait 0DB9           __end_of___bmul 0DEA           __end_of___wmul 0E62  
      __size_of_UARTInit 006F      start_initialization 07F6          ?_LcdWriteString 0074  
       adcToString@value 0045                 ??_LcdCmd 0072   __end_of_spiReceiveWait 0DC0  
    __size_of_int2String 005E                 ??___bmul 0071                 ??___wmul 0074  
              __Umul8_16 0E62                ___flmul@a 0024                ___flmul@b 0020  
              ___latbits 0002            __pcstackBANK0 0020        __size_of___xxtofl 00BA  
              _cadenaADC 0054                 ?_LcdInit 0070                 ?_LcdPort 0070  
       ___lwdiv@dividend 0072          ?_spiReceiveWait 0070                 ?___awdiv 0070  
               ?___awmod 0070                 ?___flmul 0020                 ?___fltol 003A  
               ?___lldiv 0070               ?__Umul8_16 0070                 ?___lwdiv 0070  
               ?___lwmod 0070        __size_of_spiWrite 0006                __pstrings 0800  
               ?_spiInit 0070                 ?_spiRead 0070         ___lwdiv@quotient 0075  
   spiInit@sTransmitEdge 0072           ___wmul@product 0074       spiInit@sDataSample 0070  
               _PIR1bits 000C                 _UARTInit 0124         int2String@cadena 0020  
       int2String@digito 0024              __stringbase 080F        ___wmul@multiplier 0070  
           ??_int2String 0079             ?_adcToString 0045         __size_of_LcdInit 0045  
       __size_of_LcdPort 008A             LcdPort@value 0071             UARTInit@BRGH 0024  
     __end_of_int2String 1000              LcdCmd@value 0074              ??__Umul8_16 0072  
       __size_of___awdiv 0067         __size_of___awmod 0059         __size_of___flmul 0361  
       __size_of___fltol 007C         __size_of___lldiv 0066         __size_of___lwdiv 0044  
       __size_of___lwmod 003A       __end_of__stringtab 0810         ??_LcdWriteString 0076  
               ___xxtofl 03DB          ___lwdiv@divisor 0070          ___lwdiv@counter 0077  
               __ptext10 03DB                 __ptext11 0E3D                 __ptext20 0DC0  
               __ptext12 0E89                 __ptext21 0E1A                 __ptext13 0F05  
               __ptext22 0012                 __ptext14 0193                 __ptext23 0E00  
               __ptext15 0495                 __ptext24 020F                 __ptext16 0E62  
               __ptext17 0124                 __ptext18 0057                 __ptext19 0EC3  
       __size_of_spiInit 0016         __size_of_spiRead 0009            ?_LcdSetCursor 0075  
          __size_of_main 00A4                 _valueADC 0055                 _spiWrite 0003  
        LcdWriteString@i 0079             spiInit@sType 0073             _valueCounter 0053  
      spiInit@sClockIdle 0071            ?_LcdWriteChar 0070           ??_LcdSetCursor 0076  
       ___lwmod@dividend 0072         ___lldiv@dividend 0074         ??_spiReceiveWait 0070  
              stringcode 080A           ??_LcdWriteChar 0072   __Umul8_16@multiplicand 0070  
       ___lldiv@quotient 0079          ___lwmod@divisor 0070          ___lwmod@counter 0075  
               stringdir 080A                 stringtab 0800      LcdWriteString@value 0074  
   __Umul8_16@multiplier 0078     __size_of_adcToString 009E        __Umul8_16@product 0074  
