

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Mon Feb 15 18:35:14 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2
    15                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    16                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    17                           	psect	text8,local,class=CODE,merge=1,delta=2,group=1
    18                           	psect	text9,local,class=CODE,merge=1,delta=2
    19                           	psect	text10,local,class=CODE,merge=1,delta=2,group=1
    20                           	psect	text11,local,class=CODE,merge=1,delta=2,group=1
    21                           	psect	text12,local,class=CODE,merge=1,delta=2,group=1
    22                           	psect	text13,local,class=CODE,merge=1,delta=2,group=1
    23                           	psect	text14,local,class=CODE,merge=1,delta=2,group=1
    24                           	psect	text15,local,class=CODE,merge=1,delta=2,group=1
    25                           	psect	text16,local,class=CODE,merge=1,delta=2,group=1
    26                           	psect	text17,local,class=CODE,merge=1,delta=2
    27                           	psect	text18,local,class=CODE,merge=1,delta=2
    28                           	psect	text19,local,class=CODE,merge=1,delta=2
    29                           	psect	text20,local,class=CODE,merge=1,delta=2,group=1
    30                           	psect	text21,local,class=CODE,merge=1,delta=2
    31                           	psect	text22,local,class=CODE,merge=1,delta=2
    32                           	psect	text23,local,class=CODE,merge=1,delta=2
    33                           	psect	text24,local,class=CODE,merge=1,delta=2
    34                           	psect	text25,local,class=CODE,merge=1,delta=2
    35                           	psect	text26,local,class=CODE,merge=1,delta=2
    36                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    37                           	dabs	1,0x7E,2
    38  0000                     
    39                           ; Version 2.20
    40                           ; Generated 12/02/2020 GMT
    41                           ; 
    42                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    43                           ; All rights reserved.
    44                           ; 
    45                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    46                           ; 
    47                           ; Redistribution and use in source and binary forms, with or without modification, are
    48                           ; permitted provided that the following conditions are met:
    49                           ; 
    50                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    51                           ;        conditions and the following disclaimer.
    52                           ; 
    53                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    54                           ;        of conditions and the following disclaimer in the documentation and/or other
    55                           ;        materials provided with the distribution.
    56                           ; 
    57                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    58                           ;        software without specific prior written permission.
    59                           ; 
    60                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    61                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    62                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    63                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    64                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    65                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    66                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    67                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    68                           ; 
    69                           ; 
    70                           ; Code-generator required, PIC16F887 Definitions
    71                           ; 
    72                           ; SFR Addresses
    73  0000                     	;# 
    74  0001                     	;# 
    75  0002                     	;# 
    76  0003                     	;# 
    77  0004                     	;# 
    78  0005                     	;# 
    79  0006                     	;# 
    80  0007                     	;# 
    81  0008                     	;# 
    82  0009                     	;# 
    83  000A                     	;# 
    84  000B                     	;# 
    85  000C                     	;# 
    86  000D                     	;# 
    87  000E                     	;# 
    88  000E                     	;# 
    89  000F                     	;# 
    90  0010                     	;# 
    91  0011                     	;# 
    92  0012                     	;# 
    93  0013                     	;# 
    94  0014                     	;# 
    95  0015                     	;# 
    96  0015                     	;# 
    97  0016                     	;# 
    98  0017                     	;# 
    99  0018                     	;# 
   100  0019                     	;# 
   101  001A                     	;# 
   102  001B                     	;# 
   103  001B                     	;# 
   104  001C                     	;# 
   105  001D                     	;# 
   106  001E                     	;# 
   107  001F                     	;# 
   108  0081                     	;# 
   109  0085                     	;# 
   110  0086                     	;# 
   111  0087                     	;# 
   112  0088                     	;# 
   113  0089                     	;# 
   114  008C                     	;# 
   115  008D                     	;# 
   116  008E                     	;# 
   117  008F                     	;# 
   118  0090                     	;# 
   119  0091                     	;# 
   120  0092                     	;# 
   121  0093                     	;# 
   122  0093                     	;# 
   123  0093                     	;# 
   124  0094                     	;# 
   125  0095                     	;# 
   126  0096                     	;# 
   127  0097                     	;# 
   128  0098                     	;# 
   129  0099                     	;# 
   130  009A                     	;# 
   131  009B                     	;# 
   132  009C                     	;# 
   133  009D                     	;# 
   134  009E                     	;# 
   135  009F                     	;# 
   136  0105                     	;# 
   137  0107                     	;# 
   138  0108                     	;# 
   139  0109                     	;# 
   140  010C                     	;# 
   141  010C                     	;# 
   142  010D                     	;# 
   143  010E                     	;# 
   144  010F                     	;# 
   145  0185                     	;# 
   146  0187                     	;# 
   147  0188                     	;# 
   148  0189                     	;# 
   149  018C                     	;# 
   150  018D                     	;# 
   151  0000                     	;# 
   152  0001                     	;# 
   153  0002                     	;# 
   154  0003                     	;# 
   155  0004                     	;# 
   156  0005                     	;# 
   157  0006                     	;# 
   158  0007                     	;# 
   159  0008                     	;# 
   160  0009                     	;# 
   161  000A                     	;# 
   162  000B                     	;# 
   163  000C                     	;# 
   164  000D                     	;# 
   165  000E                     	;# 
   166  000E                     	;# 
   167  000F                     	;# 
   168  0010                     	;# 
   169  0011                     	;# 
   170  0012                     	;# 
   171  0013                     	;# 
   172  0014                     	;# 
   173  0015                     	;# 
   174  0015                     	;# 
   175  0016                     	;# 
   176  0017                     	;# 
   177  0018                     	;# 
   178  0019                     	;# 
   179  001A                     	;# 
   180  001B                     	;# 
   181  001B                     	;# 
   182  001C                     	;# 
   183  001D                     	;# 
   184  001E                     	;# 
   185  001F                     	;# 
   186  0081                     	;# 
   187  0085                     	;# 
   188  0086                     	;# 
   189  0087                     	;# 
   190  0088                     	;# 
   191  0089                     	;# 
   192  008C                     	;# 
   193  008D                     	;# 
   194  008E                     	;# 
   195  008F                     	;# 
   196  0090                     	;# 
   197  0091                     	;# 
   198  0092                     	;# 
   199  0093                     	;# 
   200  0093                     	;# 
   201  0093                     	;# 
   202  0094                     	;# 
   203  0095                     	;# 
   204  0096                     	;# 
   205  0097                     	;# 
   206  0098                     	;# 
   207  0099                     	;# 
   208  009A                     	;# 
   209  009B                     	;# 
   210  009C                     	;# 
   211  009D                     	;# 
   212  009E                     	;# 
   213  009F                     	;# 
   214  0105                     	;# 
   215  0107                     	;# 
   216  0108                     	;# 
   217  0109                     	;# 
   218  010C                     	;# 
   219  010C                     	;# 
   220  010D                     	;# 
   221  010E                     	;# 
   222  010F                     	;# 
   223  0185                     	;# 
   224  0187                     	;# 
   225  0188                     	;# 
   226  0189                     	;# 
   227  018C                     	;# 
   228  018D                     	;# 
   229  0000                     	;# 
   230  0001                     	;# 
   231  0002                     	;# 
   232  0003                     	;# 
   233  0004                     	;# 
   234  0005                     	;# 
   235  0006                     	;# 
   236  0007                     	;# 
   237  0008                     	;# 
   238  0009                     	;# 
   239  000A                     	;# 
   240  000B                     	;# 
   241  000C                     	;# 
   242  000D                     	;# 
   243  000E                     	;# 
   244  000E                     	;# 
   245  000F                     	;# 
   246  0010                     	;# 
   247  0011                     	;# 
   248  0012                     	;# 
   249  0013                     	;# 
   250  0014                     	;# 
   251  0015                     	;# 
   252  0015                     	;# 
   253  0016                     	;# 
   254  0017                     	;# 
   255  0018                     	;# 
   256  0019                     	;# 
   257  001A                     	;# 
   258  001B                     	;# 
   259  001B                     	;# 
   260  001C                     	;# 
   261  001D                     	;# 
   262  001E                     	;# 
   263  001F                     	;# 
   264  0081                     	;# 
   265  0085                     	;# 
   266  0086                     	;# 
   267  0087                     	;# 
   268  0088                     	;# 
   269  0089                     	;# 
   270  008C                     	;# 
   271  008D                     	;# 
   272  008E                     	;# 
   273  008F                     	;# 
   274  0090                     	;# 
   275  0091                     	;# 
   276  0092                     	;# 
   277  0093                     	;# 
   278  0093                     	;# 
   279  0093                     	;# 
   280  0094                     	;# 
   281  0095                     	;# 
   282  0096                     	;# 
   283  0097                     	;# 
   284  0098                     	;# 
   285  0099                     	;# 
   286  009A                     	;# 
   287  009B                     	;# 
   288  009C                     	;# 
   289  009D                     	;# 
   290  009E                     	;# 
   291  009F                     	;# 
   292  0105                     	;# 
   293  0107                     	;# 
   294  0108                     	;# 
   295  0109                     	;# 
   296  010C                     	;# 
   297  010C                     	;# 
   298  010D                     	;# 
   299  010E                     	;# 
   300  010F                     	;# 
   301  0185                     	;# 
   302  0187                     	;# 
   303  0188                     	;# 
   304  0189                     	;# 
   305  018C                     	;# 
   306  018D                     	;# 
   307  0000                     	;# 
   308  0001                     	;# 
   309  0002                     	;# 
   310  0003                     	;# 
   311  0004                     	;# 
   312  0005                     	;# 
   313  0006                     	;# 
   314  0007                     	;# 
   315  0008                     	;# 
   316  0009                     	;# 
   317  000A                     	;# 
   318  000B                     	;# 
   319  000C                     	;# 
   320  000D                     	;# 
   321  000E                     	;# 
   322  000E                     	;# 
   323  000F                     	;# 
   324  0010                     	;# 
   325  0011                     	;# 
   326  0012                     	;# 
   327  0013                     	;# 
   328  0014                     	;# 
   329  0015                     	;# 
   330  0015                     	;# 
   331  0016                     	;# 
   332  0017                     	;# 
   333  0018                     	;# 
   334  0019                     	;# 
   335  001A                     	;# 
   336  001B                     	;# 
   337  001B                     	;# 
   338  001C                     	;# 
   339  001D                     	;# 
   340  001E                     	;# 
   341  001F                     	;# 
   342  0081                     	;# 
   343  0085                     	;# 
   344  0086                     	;# 
   345  0087                     	;# 
   346  0088                     	;# 
   347  0089                     	;# 
   348  008C                     	;# 
   349  008D                     	;# 
   350  008E                     	;# 
   351  008F                     	;# 
   352  0090                     	;# 
   353  0091                     	;# 
   354  0092                     	;# 
   355  0093                     	;# 
   356  0093                     	;# 
   357  0093                     	;# 
   358  0094                     	;# 
   359  0095                     	;# 
   360  0096                     	;# 
   361  0097                     	;# 
   362  0098                     	;# 
   363  0099                     	;# 
   364  009A                     	;# 
   365  009B                     	;# 
   366  009C                     	;# 
   367  009D                     	;# 
   368  009E                     	;# 
   369  009F                     	;# 
   370  0105                     	;# 
   371  0107                     	;# 
   372  0108                     	;# 
   373  0109                     	;# 
   374  010C                     	;# 
   375  010C                     	;# 
   376  010D                     	;# 
   377  010E                     	;# 
   378  010F                     	;# 
   379  0185                     	;# 
   380  0187                     	;# 
   381  0188                     	;# 
   382  0189                     	;# 
   383  018C                     	;# 
   384  018D                     	;# 
   385  0000                     	;# 
   386  0001                     	;# 
   387  0002                     	;# 
   388  0003                     	;# 
   389  0004                     	;# 
   390  0005                     	;# 
   391  0006                     	;# 
   392  0007                     	;# 
   393  0008                     	;# 
   394  0009                     	;# 
   395  000A                     	;# 
   396  000B                     	;# 
   397  000C                     	;# 
   398  000D                     	;# 
   399  000E                     	;# 
   400  000E                     	;# 
   401  000F                     	;# 
   402  0010                     	;# 
   403  0011                     	;# 
   404  0012                     	;# 
   405  0013                     	;# 
   406  0014                     	;# 
   407  0015                     	;# 
   408  0015                     	;# 
   409  0016                     	;# 
   410  0017                     	;# 
   411  0018                     	;# 
   412  0019                     	;# 
   413  001A                     	;# 
   414  001B                     	;# 
   415  001B                     	;# 
   416  001C                     	;# 
   417  001D                     	;# 
   418  001E                     	;# 
   419  001F                     	;# 
   420  0081                     	;# 
   421  0085                     	;# 
   422  0086                     	;# 
   423  0087                     	;# 
   424  0088                     	;# 
   425  0089                     	;# 
   426  008C                     	;# 
   427  008D                     	;# 
   428  008E                     	;# 
   429  008F                     	;# 
   430  0090                     	;# 
   431  0091                     	;# 
   432  0092                     	;# 
   433  0093                     	;# 
   434  0093                     	;# 
   435  0093                     	;# 
   436  0094                     	;# 
   437  0095                     	;# 
   438  0096                     	;# 
   439  0097                     	;# 
   440  0098                     	;# 
   441  0099                     	;# 
   442  009A                     	;# 
   443  009B                     	;# 
   444  009C                     	;# 
   445  009D                     	;# 
   446  009E                     	;# 
   447  009F                     	;# 
   448  0105                     	;# 
   449  0107                     	;# 
   450  0108                     	;# 
   451  0109                     	;# 
   452  010C                     	;# 
   453  010C                     	;# 
   454  010D                     	;# 
   455  010E                     	;# 
   456  010F                     	;# 
   457  0185                     	;# 
   458  0187                     	;# 
   459  0188                     	;# 
   460  0189                     	;# 
   461  018C                     	;# 
   462  018D                     	;# 
   463  0013                     _SSPBUF	set	19
   464  0014                     _SSPCON	set	20
   465  001A                     _RCREG	set	26
   466  000C                     _PIR1bits	set	12
   467  0019                     _TXREG	set	25
   468  0018                     _RCSTAbits	set	24
   469  0005                     _PORTA	set	5
   470  0048                     _RE0	set	72
   471  0049                     _RE1	set	73
   472  0047                     _RD7	set	71
   473  0046                     _RD6	set	70
   474  0045                     _RD5	set	69
   475  0044                     _RD4	set	68
   476  0043                     _RD3	set	67
   477  0042                     _RD2	set	66
   478  0041                     _RD1	set	65
   479  0040                     _RD0	set	64
   480  0094                     _SSPSTATbits	set	148
   481  0094                     _SSPSTAT	set	148
   482  0087                     _TRISCbits	set	135
   483  0098                     _TXSTAbits	set	152
   484  0099                     _SPBRG	set	153
   485  0085                     _TRISA	set	133
   486  0089                     _TRISE	set	137
   487  0088                     _TRISD	set	136
   488  043B                     _TRISC3	set	1083
   489  043D                     _TRISC5	set	1085
   490  0189                     _ANSELH	set	393
   491  0188                     _ANSEL	set	392
   492                           
   493                           	psect	strings
   494  0800                     __pstrings:
   495  0800                     stringtab:
   496  0800                     __stringtab:
   497                           
   498                           ;	String table - string pointers are 1 byte each
   499  0800  1BFF               	btfsc	btemp+1,7
   500  0801  280A               	ljmp	stringcode
   501  0802  1383               	bcf	3,7
   502  0803  187F               	btfsc	btemp+1,0
   503  0804  1783               	bsf	3,7
   504  0805  0800               	movf	0,w
   505  0806  0A84               	incf	4,f
   506  0807  1903               	skipnz
   507  0808  0AFF               	incf	btemp+1,f
   508  0809  0008               	return
   509  080A                     stringcode:
   510  080A                     stringdir:
   511  080A  3008               	movlw	high stringdir
   512  080B  008A               	movwf	10
   513  080C  0804               	movf	4,w
   514  080D  0A84               	incf	4,f
   515  080E  0782               	addwf	2,f
   516  080F                     __stringbase:
   517  080F  3400               	retlw	0
   518  0810                     __end_of__stringtab:
   519  0810                     STR_1:
   520  0810  3441               	retlw	65	;'A'
   521  0811  3444               	retlw	68	;'D'
   522  0812  3443               	retlw	67	;'C'
   523  0813  343A               	retlw	58	;':'
   524  0814  3420               	retlw	32	;' '
   525  0815  3443               	retlw	67	;'C'
   526  0816  344F               	retlw	79	;'O'
   527  0817  344E               	retlw	78	;'N'
   528  0818  3454               	retlw	84	;'T'
   529  0819  343A               	retlw	58	;':'
   530  081A  3420               	retlw	32	;' '
   531  081B  3454               	retlw	84	;'T'
   532  081C  3445               	retlw	69	;'E'
   533  081D  344D               	retlw	77	;'M'
   534  081E  3450               	retlw	80	;'P'
   535  081F  343A               	retlw	58	;':'
   536  0820  3400               	retlw	0
   537  0821                     STR_2:
   538  0821  3456               	retlw	86	;'V'
   539  0822  3420               	retlw	32	;' '
   540  0823  3400               	retlw	0
   541                           
   542                           	psect	cinit
   543  07F4                     start_initialization:	
   544                           ; #config settings
   545                           
   546  07F4                     __initialization:
   547                           
   548                           ; Clear objects allocated to BANK0
   549  07F4  1283               	bcf	3,5	;RP0=0, select bank0
   550  07F5  1303               	bcf	3,6	;RP1=0, select bank0
   551  07F6  01D2               	clrf	__pbssBANK0& (0+127)
   552  07F7  01D3               	clrf	(__pbssBANK0+1)& (0+127)
   553  07F8  01D4               	clrf	(__pbssBANK0+2)& (0+127)
   554  07F9  01D5               	clrf	(__pbssBANK0+3)& (0+127)
   555  07FA  01D6               	clrf	(__pbssBANK0+4)& (0+127)
   556  07FB  01D7               	clrf	(__pbssBANK0+5)& (0+127)
   557  07FC                     end_of_initialization:	
   558                           ;End of C runtime variable initialization code
   559                           
   560  07FC                     __end_of__initialization:
   561  07FC  0183               	clrf	3
   562  07FD  120A  118A  2B60   	ljmp	_main	;jump to C main() function
   563                           
   564                           	psect	bssBANK0
   565  0052                     __pbssBANK0:
   566  0052                     _valorTemp:
   567  0052                     	ds	1
   568  0053                     _cadenaTemp:
   569  0053                     	ds	1
   570  0054                     _cadenaCounter:
   571  0054                     	ds	1
   572  0055                     _valueCounter:
   573  0055                     	ds	1
   574  0056                     _cadenaADC:
   575  0056                     	ds	1
   576  0057                     _valueADC:
   577  0057                     	ds	1
   578                           
   579                           	psect	cstackCOMMON
   580  0070                     __pcstackCOMMON:
   581  0070                     ?_spiInit:
   582  0070                     ?_LcdInit:	
   583                           ; 1 bytes @ 0x0
   584                           
   585  0070                     ?_spiWrite:	
   586                           ; 1 bytes @ 0x0
   587                           
   588  0070                     ??_spiWrite:	
   589                           ; 1 bytes @ 0x0
   590                           
   591  0070                     ?_spiRead:	
   592                           ; 1 bytes @ 0x0
   593                           
   594  0070                     ??_spiRead:	
   595                           ; 1 bytes @ 0x0
   596                           
   597  0070                     ?_UARTSendChar:	
   598                           ; 1 bytes @ 0x0
   599                           
   600  0070                     ??_UARTSendChar:	
   601                           ; 1 bytes @ 0x0
   602                           
   603  0070                     ?_int2String:	
   604                           ; 1 bytes @ 0x0
   605                           
   606  0070                     ?_LcdWriteChar:	
   607                           ; 1 bytes @ 0x0
   608                           
   609  0070                     ?_LcdPort:	
   610                           ; 1 bytes @ 0x0
   611                           
   612  0070                     ??_LcdPort:	
   613                           ; 1 bytes @ 0x0
   614                           
   615  0070                     ?_LcdCmd:	
   616                           ; 1 bytes @ 0x0
   617                           
   618  0070                     ?_spiReceiveWait:	
   619                           ; 1 bytes @ 0x0
   620                           
   621  0070                     ??_spiReceiveWait:	
   622                           ; 1 bytes @ 0x0
   623                           
   624  0070                     ?___bmul:	
   625                           ; 1 bytes @ 0x0
   626                           
   627  0070                     ?__Umul8_16:	
   628                           ; 1 bytes @ 0x0
   629                           
   630  0070                     ?_main:	
   631                           ; 2 bytes @ 0x0
   632                           
   633  0070                     ?___wmul:	
   634                           ; 2 bytes @ 0x0
   635                           
   636  0070                     ?___awdiv:	
   637                           ; 2 bytes @ 0x0
   638                           
   639  0070                     ?___awmod:	
   640                           ; 2 bytes @ 0x0
   641                           
   642  0070                     ?___lwdiv:	
   643                           ; 2 bytes @ 0x0
   644                           
   645  0070                     ?___lwmod:	
   646                           ; 2 bytes @ 0x0
   647                           
   648  0070                     ?___lldiv:	
   649                           ; 2 bytes @ 0x0
   650                           
   651  0070                     ?___xxtofl:	
   652                           ; 4 bytes @ 0x0
   653                           
   654  0070                     UARTSendChar@c:	
   655                           ; 4 bytes @ 0x0
   656                           
   657  0070                     spiInit@sDataSample:	
   658                           ; 1 bytes @ 0x0
   659                           
   660  0070                     spiWrite@dat:	
   661                           ; 1 bytes @ 0x0
   662                           
   663  0070                     ___bmul@multiplicand:	
   664                           ; 1 bytes @ 0x0
   665                           
   666  0070                     __Umul8_16@multiplicand:	
   667                           ; 1 bytes @ 0x0
   668                           
   669  0070                     ___wmul@multiplier:	
   670                           ; 1 bytes @ 0x0
   671                           
   672  0070                     ___awdiv@divisor:	
   673                           ; 2 bytes @ 0x0
   674                           
   675  0070                     ___awmod@divisor:	
   676                           ; 2 bytes @ 0x0
   677                           
   678  0070                     ___lwdiv@divisor:	
   679                           ; 2 bytes @ 0x0
   680                           
   681  0070                     ___lwmod@divisor:	
   682                           ; 2 bytes @ 0x0
   683                           
   684  0070                     ___lldiv@divisor:	
   685                           ; 2 bytes @ 0x0
   686                           
   687  0070                     ___xxtofl@val:	
   688                           ; 4 bytes @ 0x0
   689                           
   690                           
   691                           ; 4 bytes @ 0x0
   692  0070                     	ds	1
   693  0071                     ?_UARTSendString:
   694  0071                     ??___bmul:	
   695                           ; 1 bytes @ 0x1
   696                           
   697  0071                     UARTSendString@max_length:	
   698                           ; 1 bytes @ 0x1
   699                           
   700  0071                     LcdPort@value:	
   701                           ; 1 bytes @ 0x1
   702                           
   703  0071                     spiInit@sClockIdle:	
   704                           ; 1 bytes @ 0x1
   705                           
   706                           
   707                           ; 1 bytes @ 0x1
   708  0071                     	ds	1
   709  0072                     ??_UARTSendString:
   710  0072                     ??_LcdWriteChar:	
   711                           ; 1 bytes @ 0x2
   712                           
   713  0072                     ??__Umul8_16:	
   714                           ; 1 bytes @ 0x2
   715                           
   716  0072                     ??_LcdCmd:	
   717                           ; 1 bytes @ 0x2
   718                           
   719  0072                     spiInit@sTransmitEdge:	
   720                           ; 1 bytes @ 0x2
   721                           
   722  0072                     ___bmul@product:	
   723                           ; 1 bytes @ 0x2
   724                           
   725  0072                     ___wmul@multiplicand:	
   726                           ; 1 bytes @ 0x2
   727                           
   728  0072                     ___awdiv@dividend:	
   729                           ; 2 bytes @ 0x2
   730                           
   731  0072                     ___awmod@dividend:	
   732                           ; 2 bytes @ 0x2
   733                           
   734  0072                     ___lwdiv@dividend:	
   735                           ; 2 bytes @ 0x2
   736                           
   737  0072                     ___lwmod@dividend:	
   738                           ; 2 bytes @ 0x2
   739                           
   740                           
   741                           ; 2 bytes @ 0x2
   742  0072                     	ds	1
   743  0073                     ??_spiInit:
   744  0073                     UARTSendString@str:	
   745                           ; 1 bytes @ 0x3
   746                           
   747  0073                     LcdWriteChar@value:	
   748                           ; 1 bytes @ 0x3
   749                           
   750  0073                     spiInit@sType:	
   751                           ; 1 bytes @ 0x3
   752                           
   753  0073                     ___bmul@multiplier:	
   754                           ; 1 bytes @ 0x3
   755                           
   756                           
   757                           ; 1 bytes @ 0x3
   758  0073                     	ds	1
   759  0074                     ?_LcdWriteString:
   760  0074                     ??___wmul:	
   761                           ; 1 bytes @ 0x4
   762                           
   763  0074                     ??___awdiv:	
   764                           ; 1 bytes @ 0x4
   765                           
   766  0074                     ??___awmod:	
   767                           ; 1 bytes @ 0x4
   768                           
   769  0074                     ??___lwdiv:	
   770                           ; 1 bytes @ 0x4
   771                           
   772  0074                     ??___lwmod:	
   773                           ; 1 bytes @ 0x4
   774                           
   775  0074                     ??___xxtofl:	
   776                           ; 1 bytes @ 0x4
   777                           
   778  0074                     LcdCmd@value:	
   779                           ; 1 bytes @ 0x4
   780                           
   781  0074                     UARTSendString@i:	
   782                           ; 1 bytes @ 0x4
   783                           
   784  0074                     LcdWriteString@value:	
   785                           ; 2 bytes @ 0x4
   786                           
   787  0074                     ___wmul@product:	
   788                           ; 2 bytes @ 0x4
   789                           
   790  0074                     __Umul8_16@product:	
   791                           ; 2 bytes @ 0x4
   792                           
   793  0074                     ___lldiv@dividend:	
   794                           ; 2 bytes @ 0x4
   795                           
   796                           
   797                           ; 4 bytes @ 0x4
   798  0074                     	ds	1
   799  0075                     ??_LcdInit:
   800  0075                     ?_LcdSetCursor:	
   801                           ; 1 bytes @ 0x5
   802                           
   803  0075                     LcdSetCursor@column:	
   804                           ; 1 bytes @ 0x5
   805                           
   806  0075                     ___awdiv@counter:	
   807                           ; 1 bytes @ 0x5
   808                           
   809  0075                     ___awmod@counter:	
   810                           ; 1 bytes @ 0x5
   811                           
   812  0075                     ___lwmod@counter:	
   813                           ; 1 bytes @ 0x5
   814                           
   815  0075                     ___lwdiv@quotient:	
   816                           ; 1 bytes @ 0x5
   817                           
   818                           
   819                           ; 2 bytes @ 0x5
   820  0075                     	ds	1
   821  0076                     ??_LcdSetCursor:
   822  0076                     ??_LcdWriteString:	
   823                           ; 1 bytes @ 0x6
   824                           
   825  0076                     ___awdiv@sign:	
   826                           ; 1 bytes @ 0x6
   827                           
   828  0076                     ___awmod@sign:	
   829                           ; 1 bytes @ 0x6
   830                           
   831  0076                     __Umul8_16@word_mpld:	
   832                           ; 1 bytes @ 0x6
   833                           
   834                           
   835                           ; 2 bytes @ 0x6
   836  0076                     	ds	1
   837  0077                     ___lwdiv@counter:
   838  0077                     ___awdiv@quotient:	
   839                           ; 1 bytes @ 0x7
   840                           
   841                           
   842                           ; 2 bytes @ 0x7
   843  0077                     	ds	1
   844  0078                     ??___lldiv:
   845  0078                     LcdSetCursor@row:	
   846                           ; 1 bytes @ 0x8
   847                           
   848  0078                     __Umul8_16@multiplier:	
   849                           ; 1 bytes @ 0x8
   850                           
   851  0078                     ___xxtofl@sign:	
   852                           ; 1 bytes @ 0x8
   853                           
   854                           
   855                           ; 1 bytes @ 0x8
   856  0078                     	ds	1
   857  0079                     ??_int2String:
   858  0079                     ___xxtofl@exp:	
   859                           ; 1 bytes @ 0x9
   860                           
   861  0079                     LcdWriteString@i:	
   862                           ; 1 bytes @ 0x9
   863                           
   864  0079                     ___lldiv@quotient:	
   865                           ; 2 bytes @ 0x9
   866                           
   867                           
   868                           ; 4 bytes @ 0x9
   869  0079                     	ds	1
   870  007A                     ___xxtofl@arg:
   871                           
   872                           ; 4 bytes @ 0xA
   873  007A                     	ds	3
   874  007D                     ___lldiv@counter:
   875                           
   876                           ; 1 bytes @ 0xD
   877  007D                     	ds	1
   878                           
   879                           	psect	cstackBANK0
   880  0020                     __pcstackBANK0:
   881  0020                     ?_UARTInit:
   882  0020                     ?___flmul:	
   883                           ; 1 bytes @ 0x0
   884                           
   885  0020                     int2String@cadena:	
   886                           ; 4 bytes @ 0x0
   887                           
   888  0020                     UARTInit@baud_rate:	
   889                           ; 4 bytes @ 0x0
   890                           
   891  0020                     ___flmul@b:	
   892                           ; 4 bytes @ 0x0
   893                           
   894                           
   895                           ; 4 bytes @ 0x0
   896  0020                     	ds	4
   897  0024                     int2String@digito:
   898  0024                     UARTInit@BRGH:	
   899                           ; 1 bytes @ 0x4
   900                           
   901  0024                     ___flmul@a:	
   902                           ; 1 bytes @ 0x4
   903                           
   904                           
   905                           ; 4 bytes @ 0x4
   906  0024                     	ds	1
   907  0025                     ??_UARTInit:
   908  0025                     int2String@value:	
   909                           ; 1 bytes @ 0x5
   910                           
   911                           
   912                           ; 1 bytes @ 0x5
   913  0025                     	ds	3
   914  0028                     ??___flmul:
   915                           
   916                           ; 1 bytes @ 0x8
   917  0028                     	ds	5
   918  002D                     ___flmul@sign:
   919                           
   920                           ; 1 bytes @ 0xD
   921  002D                     	ds	1
   922  002E                     ___flmul@grs:
   923                           
   924                           ; 4 bytes @ 0xE
   925  002E                     	ds	4
   926  0032                     ___flmul@aexp:
   927                           
   928                           ; 1 bytes @ 0x12
   929  0032                     	ds	1
   930  0033                     ___flmul@bexp:
   931                           
   932                           ; 1 bytes @ 0x13
   933  0033                     	ds	1
   934  0034                     ___flmul@prod:
   935                           
   936                           ; 4 bytes @ 0x14
   937  0034                     	ds	4
   938  0038                     ___flmul@temp:
   939                           
   940                           ; 2 bytes @ 0x18
   941  0038                     	ds	2
   942  003A                     ?___fltol:
   943  003A                     ___fltol@f1:	
   944                           ; 4 bytes @ 0x1A
   945                           
   946                           
   947                           ; 4 bytes @ 0x1A
   948  003A                     	ds	4
   949  003E                     ??___fltol:
   950                           
   951                           ; 1 bytes @ 0x1E
   952  003E                     	ds	5
   953  0043                     ___fltol@sign1:
   954                           
   955                           ; 1 bytes @ 0x23
   956  0043                     	ds	1
   957  0044                     ___fltol@exp1:
   958                           
   959                           ; 1 bytes @ 0x24
   960  0044                     	ds	1
   961  0045                     ?_adcToString:
   962  0045                     adcToString@value:	
   963                           ; 1 bytes @ 0x25
   964                           
   965                           
   966                           ; 2 bytes @ 0x25
   967  0045                     	ds	2
   968  0047                     ??_adcToString:
   969                           
   970                           ; 1 bytes @ 0x27
   971  0047                     	ds	1
   972  0048                     adcToString@salida:
   973                           
   974                           ; 5 bytes @ 0x28
   975  0048                     	ds	5
   976  004D                     adcToString@digito:
   977                           
   978                           ; 2 bytes @ 0x2D
   979  004D                     	ds	2
   980  004F                     ??_main:
   981                           
   982                           ; 1 bytes @ 0x2F
   983  004F                     	ds	3
   984                           
   985                           	psect	maintext
   986  0360                     __pmaintext:	
   987 ;;
   988 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   989 ;;
   990 ;; *************** function _main *****************
   991 ;; Defined at:
   992 ;;		line 56 in file "main.c"
   993 ;; Parameters:    Size  Location     Type
   994 ;;		None
   995 ;; Auto vars:     Size  Location     Type
   996 ;;		None
   997 ;; Return value:  Size  Location     Type
   998 ;;                  2   52[None  ] int 
   999 ;; Registers used:
  1000 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1001 ;; Tracked objects:
  1002 ;;		On entry : B00/0
  1003 ;;		On exit  : 0/0
  1004 ;;		Unchanged: 0/0
  1005 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1006 ;;      Params:         0       0       0       0       0
  1007 ;;      Locals:         0       0       0       0       0
  1008 ;;      Temps:          0       3       0       0       0
  1009 ;;      Totals:         0       3       0       0       0
  1010 ;;Total ram usage:        3 bytes
  1011 ;; Hardware stack levels required when called:    3
  1012 ;; This function calls:
  1013 ;;		_LcdInit
  1014 ;;		_LcdSetCursor
  1015 ;;		_LcdWriteChar
  1016 ;;		_LcdWriteString
  1017 ;;		_UARTInit
  1018 ;;		_UARTSendChar
  1019 ;;		_UARTSendString
  1020 ;;		_adcToString
  1021 ;;		_int2String
  1022 ;;		_spiInit
  1023 ;;		_spiRead
  1024 ;;		_spiWrite
  1025 ;; This function is called by:
  1026 ;;		Startup code after reset
  1027 ;; This function uses a non-reentrant model
  1028 ;;
  1029                           
  1030                           
  1031                           ;psect for function _main
  1032  0360                     _main:
  1033  0360                     l2083:	
  1034                           ;incstack = 0
  1035                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1036                           
  1037                           
  1038                           ;main.c: 58:   ANSEL = 0;
  1039  0360  1683               	bsf	3,5	;RP0=1, select bank3
  1040  0361  1703               	bsf	3,6	;RP1=1, select bank3
  1041  0362  0188               	clrf	8	;volatile
  1042                           
  1043                           ;main.c: 59:   ANSELH = 0;
  1044  0363  0189               	clrf	9	;volatile
  1045                           
  1046                           ;main.c: 61:   TRISD = 0;
  1047  0364  1683               	bsf	3,5	;RP0=1, select bank1
  1048  0365  1303               	bcf	3,6	;RP1=0, select bank1
  1049  0366  0188               	clrf	8	;volatile
  1050                           
  1051                           ;main.c: 62:   TRISE = 0;
  1052  0367  0189               	clrf	9	;volatile
  1053  0368                     l2085:
  1054                           
  1055                           ;main.c: 64:   TRISA = 248;
  1056  0368  30F8               	movlw	248
  1057  0369  0085               	movwf	5	;volatile
  1058  036A                     l2087:
  1059                           
  1060                           ;main.c: 66:     spiInit(SPI_MASTER_OSC_DIV4, SPI_DATA_SAMPLE_MIDDLE,
  1061  036A  01F0               	clrf	spiInit@sDataSample
  1062  036B  01F1               	clrf	spiInit@sClockIdle
  1063  036C  01F2               	clrf	spiInit@sTransmitEdge
  1064  036D  3020               	movlw	32
  1065  036E  120A  158A  2536  120A  118A  	fcall	_spiInit
  1066  0373                     l2089:
  1067                           
  1068                           ;main.c: 68:   LcdInit();
  1069  0373  120A  158A  269E  120A  118A  	fcall	_LcdInit
  1070  0378                     l2091:
  1071                           
  1072                           ;main.c: 69:   UARTInit(9600,1);
  1073  0378  3000               	movlw	0
  1074  0379  1283               	bcf	3,5	;RP0=0, select bank0
  1075  037A  1303               	bcf	3,6	;RP1=0, select bank0
  1076  037B  00A3               	movwf	UARTInit@baud_rate+3
  1077  037C  3000               	movlw	0
  1078  037D  00A2               	movwf	UARTInit@baud_rate+2
  1079  037E  3025               	movlw	37
  1080  037F  00A1               	movwf	UARTInit@baud_rate+1
  1081  0380  3080               	movlw	128
  1082  0381  00A0               	movwf	UARTInit@baud_rate
  1083  0382  01A4               	clrf	UARTInit@BRGH
  1084  0383  0AA4               	incf	UARTInit@BRGH,f
  1085  0384  120A  118A  2093  120A  118A  	fcall	_UARTInit
  1086  0389                     l2093:
  1087                           
  1088                           ;main.c: 71:   LcdSetCursor(1,1);
  1089  0389  01F5               	clrf	LcdSetCursor@column
  1090  038A  0AF5               	incf	LcdSetCursor@column,f
  1091  038B  3001               	movlw	1
  1092  038C  120A  158A  2566  120A  118A  	fcall	_LcdSetCursor
  1093  0391                     l2095:
  1094                           
  1095                           ;main.c: 72:   LcdWriteString("ADC: CONT: TEMP:");
  1096  0391  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1097  0392  00F4               	movwf	LcdWriteString@value
  1098  0393  3080               	movlw	128
  1099  0394  00F5               	movwf	LcdWriteString@value+1
  1100  0395  120A  158A  2618  120A  118A  	fcall	_LcdWriteString
  1101  039A                     l2097:
  1102                           
  1103                           ;main.c: 74:       LcdSetCursor(2,1);
  1104  039A  01F5               	clrf	LcdSetCursor@column
  1105  039B  0AF5               	incf	LcdSetCursor@column,f
  1106  039C  3002               	movlw	2
  1107  039D  120A  158A  2566  120A  118A  	fcall	_LcdSetCursor
  1108  03A2                     l2099:
  1109                           
  1110                           ;main.c: 76:       PORTA = 6;
  1111  03A2  3006               	movlw	6
  1112  03A3  1283               	bcf	3,5	;RP0=0, select bank0
  1113  03A4  1303               	bcf	3,6	;RP1=0, select bank0
  1114  03A5  0085               	movwf	5	;volatile
  1115  03A6                     l2101:
  1116                           
  1117                           ;main.c: 78:       spiWrite('A');
  1118  03A6  3041               	movlw	65
  1119  03A7  120A  158A  24EA  120A  118A  	fcall	_spiWrite
  1120  03AC                     l2103:
  1121                           
  1122                           ;main.c: 79:       valueADC = spiRead();
  1123  03AC  120A  158A  24F7  120A  118A  	fcall	_spiRead
  1124  03B1  1283               	bcf	3,5	;RP0=0, select bank0
  1125  03B2  1303               	bcf	3,6	;RP1=0, select bank0
  1126  03B3  00CF               	movwf	??_main
  1127  03B4  084F               	movf	??_main,w
  1128  03B5  00D7               	movwf	_valueADC
  1129  03B6                     l2105:
  1130                           
  1131                           ;main.c: 80:       cadenaADC = adcToString(valueADC);
  1132  03B6  0857               	movf	_valueADC,w
  1133  03B7  00CF               	movwf	??_main
  1134  03B8  01D0               	clrf	??_main+1
  1135  03B9  084F               	movf	??_main,w
  1136  03BA  00C5               	movwf	adcToString@value
  1137  03BB  0850               	movf	??_main+1,w
  1138  03BC  00C6               	movwf	adcToString@value+1
  1139  03BD  120A  118A  2208  120A  118A  	fcall	_adcToString
  1140  03C2  1283               	bcf	3,5	;RP0=0, select bank0
  1141  03C3  1303               	bcf	3,6	;RP1=0, select bank0
  1142  03C4  00D1               	movwf	??_main+2
  1143  03C5  0851               	movf	??_main+2,w
  1144  03C6  00D6               	movwf	_cadenaADC
  1145  03C7                     l2107:
  1146                           
  1147                           ;main.c: 81:       LcdWriteString(cadenaADC);
  1148  03C7  0856               	movf	_cadenaADC,w
  1149  03C8  00F4               	movwf	LcdWriteString@value
  1150  03C9  3000               	movlw	0
  1151  03CA  00F5               	movwf	LcdWriteString@value+1
  1152  03CB  120A  158A  2618  120A  118A  	fcall	_LcdWriteString
  1153  03D0                     l2109:
  1154                           
  1155                           ;main.c: 82:       LcdWriteString("V ");
  1156  03D0  3012               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1157  03D1  00F4               	movwf	LcdWriteString@value
  1158  03D2  3080               	movlw	128
  1159  03D3  00F5               	movwf	LcdWriteString@value+1
  1160  03D4  120A  158A  2618  120A  118A  	fcall	_LcdWriteString
  1161  03D9                     l2111:
  1162                           
  1163                           ;main.c: 83:       UARTSendString(cadenaADC,5);
  1164  03D9  3005               	movlw	5
  1165  03DA  1283               	bcf	3,5	;RP0=0, select bank0
  1166  03DB  1303               	bcf	3,6	;RP1=0, select bank0
  1167  03DC  00CF               	movwf	??_main
  1168  03DD  084F               	movf	??_main,w
  1169  03DE  00F1               	movwf	UARTSendString@max_length
  1170  03DF  0856               	movf	_cadenaADC,w
  1171  03E0  120A  158A  25AE  120A  118A  	fcall	_UARTSendString
  1172  03E5                     l2113:
  1173                           
  1174                           ;main.c: 84:       UARTSendChar('V');
  1175  03E5  3056               	movlw	86
  1176  03E6  120A  158A  2500  120A  118A  	fcall	_UARTSendChar
  1177  03EB                     l2115:
  1178                           
  1179                           ;main.c: 85:       UARTSendChar(' ');
  1180  03EB  3020               	movlw	32
  1181  03EC  120A  158A  2500  120A  118A  	fcall	_UARTSendChar
  1182  03F1                     l2117:
  1183                           
  1184                           ;main.c: 86:       UARTSendChar(0xA);
  1185  03F1  300A               	movlw	10
  1186  03F2  120A  158A  2500  120A  118A  	fcall	_UARTSendChar
  1187  03F7                     l2119:
  1188                           
  1189                           ;main.c: 88:       PORTA = 5;
  1190  03F7  3005               	movlw	5
  1191  03F8  1283               	bcf	3,5	;RP0=0, select bank0
  1192  03F9  1303               	bcf	3,6	;RP1=0, select bank0
  1193  03FA  0085               	movwf	5	;volatile
  1194  03FB                     l2121:
  1195                           
  1196                           ;main.c: 89:       spiWrite('C');
  1197  03FB  3043               	movlw	67
  1198  03FC  120A  158A  24EA  120A  118A  	fcall	_spiWrite
  1199  0401                     l2123:
  1200                           
  1201                           ;main.c: 90:       valueCounter = spiRead();
  1202  0401  120A  158A  24F7  120A  118A  	fcall	_spiRead
  1203  0406  1283               	bcf	3,5	;RP0=0, select bank0
  1204  0407  1303               	bcf	3,6	;RP1=0, select bank0
  1205  0408  00CF               	movwf	??_main
  1206  0409  084F               	movf	??_main,w
  1207  040A  00D5               	movwf	_valueCounter
  1208  040B                     l2125:
  1209                           
  1210                           ;main.c: 91:       cadenaCounter = int2String(valueCounter);
  1211  040B  0855               	movf	_valueCounter,w
  1212  040C  120A  158A  273C  120A  118A  	fcall	_int2String
  1213  0411  1283               	bcf	3,5	;RP0=0, select bank0
  1214  0412  1303               	bcf	3,6	;RP1=0, select bank0
  1215  0413  00CF               	movwf	??_main
  1216  0414  084F               	movf	??_main,w
  1217  0415  00D4               	movwf	_cadenaCounter
  1218  0416                     l2127:
  1219                           
  1220                           ;main.c: 92:       LcdWriteString(cadenaCounter) ;
  1221  0416  0854               	movf	_cadenaCounter,w
  1222  0417  00F4               	movwf	LcdWriteString@value
  1223  0418  3000               	movlw	0
  1224  0419  00F5               	movwf	LcdWriteString@value+1
  1225  041A  120A  158A  2618  120A  118A  	fcall	_LcdWriteString
  1226  041F                     l2129:
  1227                           
  1228                           ;main.c: 93:       LcdWriteChar(' ');
  1229  041F  3020               	movlw	32
  1230  0420  120A  158A  250C  120A  118A  	fcall	_LcdWriteChar
  1231  0425                     l2131:
  1232                           
  1233                           ;main.c: 94:       UARTSendString(cadenaCounter,4);
  1234  0425  3004               	movlw	4
  1235  0426  1283               	bcf	3,5	;RP0=0, select bank0
  1236  0427  1303               	bcf	3,6	;RP1=0, select bank0
  1237  0428  00CF               	movwf	??_main
  1238  0429  084F               	movf	??_main,w
  1239  042A  00F1               	movwf	UARTSendString@max_length
  1240  042B  0854               	movf	_cadenaCounter,w
  1241  042C  120A  158A  25AE  120A  118A  	fcall	_UARTSendString
  1242  0431                     l2133:
  1243                           
  1244                           ;main.c: 95:       UARTSendChar(' ');
  1245  0431  3020               	movlw	32
  1246  0432  120A  158A  2500  120A  118A  	fcall	_UARTSendChar
  1247  0437                     l2135:
  1248                           
  1249                           ;main.c: 96:       UARTSendChar(0xA);
  1250  0437  300A               	movlw	10
  1251  0438  120A  158A  2500  120A  118A  	fcall	_UARTSendChar
  1252  043D                     l2137:
  1253                           
  1254                           ;main.c: 98:       PORTA = 3;
  1255  043D  3003               	movlw	3
  1256  043E  1283               	bcf	3,5	;RP0=0, select bank0
  1257  043F  1303               	bcf	3,6	;RP1=0, select bank0
  1258  0440  0085               	movwf	5	;volatile
  1259  0441                     l2139:
  1260                           
  1261                           ;main.c: 99:       spiWrite('T');
  1262  0441  3054               	movlw	84
  1263  0442  120A  158A  24EA  120A  118A  	fcall	_spiWrite
  1264  0447                     l2141:
  1265                           
  1266                           ;main.c: 100:       valorTemp = spiRead();
  1267  0447  120A  158A  24F7  120A  118A  	fcall	_spiRead
  1268  044C  1283               	bcf	3,5	;RP0=0, select bank0
  1269  044D  1303               	bcf	3,6	;RP1=0, select bank0
  1270  044E  00CF               	movwf	??_main
  1271  044F  084F               	movf	??_main,w
  1272  0450  00D2               	movwf	_valorTemp
  1273  0451                     l2143:
  1274                           
  1275                           ;main.c: 101:       cadenaTemp = int2String(valorTemp);
  1276  0451  0852               	movf	_valorTemp,w
  1277  0452  120A  158A  273C  120A  118A  	fcall	_int2String
  1278  0457  1283               	bcf	3,5	;RP0=0, select bank0
  1279  0458  1303               	bcf	3,6	;RP1=0, select bank0
  1280  0459  00CF               	movwf	??_main
  1281  045A  084F               	movf	??_main,w
  1282  045B  00D3               	movwf	_cadenaTemp
  1283  045C                     l2145:
  1284                           
  1285                           ;main.c: 102:       LcdWriteString(cadenaTemp);
  1286  045C  0853               	movf	_cadenaTemp,w
  1287  045D  00F4               	movwf	LcdWriteString@value
  1288  045E  3000               	movlw	0
  1289  045F  00F5               	movwf	LcdWriteString@value+1
  1290  0460  120A  158A  2618  120A  118A  	fcall	_LcdWriteString
  1291  0465                     l2147:
  1292                           
  1293                           ;main.c: 103:       LcdWriteChar(0xDF);
  1294  0465  30DF               	movlw	223
  1295  0466  120A  158A  250C  120A  118A  	fcall	_LcdWriteChar
  1296  046B                     l2149:
  1297                           
  1298                           ;main.c: 104:       LcdWriteChar('C');
  1299  046B  3043               	movlw	67
  1300  046C  120A  158A  250C  120A  118A  	fcall	_LcdWriteChar
  1301  0471                     l2151:
  1302                           
  1303                           ;main.c: 105:       UARTSendString(cadenaTemp,4);
  1304  0471  3004               	movlw	4
  1305  0472  1283               	bcf	3,5	;RP0=0, select bank0
  1306  0473  1303               	bcf	3,6	;RP1=0, select bank0
  1307  0474  00CF               	movwf	??_main
  1308  0475  084F               	movf	??_main,w
  1309  0476  00F1               	movwf	UARTSendString@max_length
  1310  0477  0853               	movf	_cadenaTemp,w
  1311  0478  120A  158A  25AE  120A  118A  	fcall	_UARTSendString
  1312  047D                     l2153:
  1313                           
  1314                           ;main.c: 106:       UARTSendChar('C');
  1315  047D  3043               	movlw	67
  1316  047E  120A  158A  2500  120A  118A  	fcall	_UARTSendChar
  1317  0483                     l2155:
  1318                           
  1319                           ;main.c: 107:       UARTSendChar(' ');
  1320  0483  3020               	movlw	32
  1321  0484  120A  158A  2500  120A  118A  	fcall	_UARTSendChar
  1322  0489                     l2157:
  1323                           
  1324                           ;main.c: 108:       UARTSendChar(0xA);
  1325  0489  300A               	movlw	10
  1326  048A  120A  158A  2500  120A  118A  	fcall	_UARTSendChar
  1327  048F  2B9A               	goto	l2097
  1328  0490  120A  118A  2800   	ljmp	start
  1329  0493                     __end_of_main:
  1330                           
  1331                           	psect	text1
  1332  0CEA                     __ptext1:	
  1333 ;; *************** function _spiWrite *****************
  1334 ;; Defined at:
  1335 ;;		line 34 in file "spi.c"
  1336 ;; Parameters:    Size  Location     Type
  1337 ;;  dat             1    wreg     unsigned char 
  1338 ;; Auto vars:     Size  Location     Type
  1339 ;;  dat             1    0[COMMON] unsigned char 
  1340 ;; Return value:  Size  Location     Type
  1341 ;;                  1    wreg      void 
  1342 ;; Registers used:
  1343 ;;		wreg
  1344 ;; Tracked objects:
  1345 ;;		On entry : 0/0
  1346 ;;		On exit  : 0/0
  1347 ;;		Unchanged: 0/0
  1348 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1349 ;;      Params:         0       0       0       0       0
  1350 ;;      Locals:         1       0       0       0       0
  1351 ;;      Temps:          0       0       0       0       0
  1352 ;;      Totals:         1       0       0       0       0
  1353 ;;Total ram usage:        1 bytes
  1354 ;; Hardware stack levels used:    1
  1355 ;; This function calls:
  1356 ;;		Nothing
  1357 ;; This function is called by:
  1358 ;;		_main
  1359 ;; This function uses a non-reentrant model
  1360 ;;
  1361                           
  1362                           
  1363                           ;psect for function _spiWrite
  1364  0CEA                     _spiWrite:
  1365                           
  1366                           ;incstack = 0
  1367                           ; Regs used in _spiWrite: [wreg]
  1368                           ;spiWrite@dat stored from wreg
  1369  0CEA  00F0               	movwf	spiWrite@dat
  1370  0CEB                     l2025:
  1371                           
  1372                           ;spi.c: 34: void spiWrite(char dat);spi.c: 35: {;spi.c: 36:     SSPBUF = dat;
  1373  0CEB  0870               	movf	spiWrite@dat,w
  1374  0CEC  1283               	bcf	3,5	;RP0=0, select bank0
  1375  0CED  1303               	bcf	3,6	;RP1=0, select bank0
  1376  0CEE  0093               	movwf	19	;volatile
  1377  0CEF                     l195:
  1378  0CEF  0008               	return
  1379  0CF0                     __end_of_spiWrite:
  1380                           
  1381                           	psect	text2
  1382  0CF7                     __ptext2:	
  1383 ;; *************** function _spiRead *****************
  1384 ;; Defined at:
  1385 ;;		line 47 in file "spi.c"
  1386 ;; Parameters:    Size  Location     Type
  1387 ;;		None
  1388 ;; Auto vars:     Size  Location     Type
  1389 ;;		None
  1390 ;; Return value:  Size  Location     Type
  1391 ;;                  1    wreg      unsigned char 
  1392 ;; Registers used:
  1393 ;;		wreg, status,2, status,0, pclath, cstack
  1394 ;; Tracked objects:
  1395 ;;		On entry : 0/0
  1396 ;;		On exit  : 0/0
  1397 ;;		Unchanged: 0/0
  1398 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1399 ;;      Params:         0       0       0       0       0
  1400 ;;      Locals:         0       0       0       0       0
  1401 ;;      Temps:          0       0       0       0       0
  1402 ;;      Totals:         0       0       0       0       0
  1403 ;;Total ram usage:        0 bytes
  1404 ;; Hardware stack levels used:    1
  1405 ;; Hardware stack levels required when called:    1
  1406 ;; This function calls:
  1407 ;;		_spiReceiveWait
  1408 ;; This function is called by:
  1409 ;;		_main
  1410 ;; This function uses a non-reentrant model
  1411 ;;
  1412                           
  1413                           
  1414                           ;psect for function _spiRead
  1415  0CF7                     _spiRead:
  1416  0CF7                     l2027:	
  1417                           ;incstack = 0
  1418                           ; Regs used in _spiRead: [wreg+status,2+status,0+pclath+cstack]
  1419                           
  1420                           
  1421                           ;spi.c: 49:     spiReceiveWait();
  1422  0CF7  120A  158A  24F0  120A  158A  	fcall	_spiReceiveWait
  1423  0CFC                     l2029:
  1424                           
  1425                           ;spi.c: 50:     return(SSPBUF);
  1426  0CFC  1283               	bcf	3,5	;RP0=0, select bank0
  1427  0CFD  1303               	bcf	3,6	;RP1=0, select bank0
  1428  0CFE  0813               	movf	19,w	;volatile
  1429  0CFF                     l203:
  1430  0CFF  0008               	return
  1431  0D00                     __end_of_spiRead:
  1432                           
  1433                           	psect	text3
  1434  0CF0                     __ptext3:	
  1435 ;; *************** function _spiReceiveWait *****************
  1436 ;; Defined at:
  1437 ;;		line 29 in file "spi.c"
  1438 ;; Parameters:    Size  Location     Type
  1439 ;;		None
  1440 ;; Auto vars:     Size  Location     Type
  1441 ;;		None
  1442 ;; Return value:  Size  Location     Type
  1443 ;;                  1    wreg      void 
  1444 ;; Registers used:
  1445 ;;		None
  1446 ;; Tracked objects:
  1447 ;;		On entry : 0/0
  1448 ;;		On exit  : 0/0
  1449 ;;		Unchanged: 0/0
  1450 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1451 ;;      Params:         0       0       0       0       0
  1452 ;;      Locals:         0       0       0       0       0
  1453 ;;      Temps:          0       0       0       0       0
  1454 ;;      Totals:         0       0       0       0       0
  1455 ;;Total ram usage:        0 bytes
  1456 ;; Hardware stack levels used:    1
  1457 ;; This function calls:
  1458 ;;		Nothing
  1459 ;; This function is called by:
  1460 ;;		_spiRead
  1461 ;; This function uses a non-reentrant model
  1462 ;;
  1463                           
  1464                           
  1465                           ;psect for function _spiReceiveWait
  1466  0CF0                     _spiReceiveWait:
  1467  0CF0                     l1549:	
  1468                           ;incstack = 0
  1469                           ; Regs used in _spiReceiveWait: []
  1470                           
  1471  0CF0                     l189:	
  1472                           ;spi.c: 31:     while ( !SSPSTATbits.BF );
  1473                           
  1474  0CF0  1683               	bsf	3,5	;RP0=1, select bank1
  1475  0CF1  1303               	bcf	3,6	;RP1=0, select bank1
  1476  0CF2  1C14               	btfss	20,0	;volatile
  1477  0CF3  2CF5               	goto	u1761
  1478  0CF4  2CF6               	goto	u1760
  1479  0CF5                     u1761:
  1480  0CF5  2CF0               	goto	l189
  1481  0CF6                     u1760:
  1482  0CF6                     l192:
  1483  0CF6  0008               	return
  1484  0CF7                     __end_of_spiReceiveWait:
  1485                           
  1486                           	psect	text4
  1487  0D36                     __ptext4:	
  1488 ;; *************** function _spiInit *****************
  1489 ;; Defined at:
  1490 ;;		line 12 in file "spi.c"
  1491 ;; Parameters:    Size  Location     Type
  1492 ;;  sType           1    wreg     enum E1264
  1493 ;;  sDataSample     1    0[COMMON] enum E1272
  1494 ;;  sClockIdle      1    1[COMMON] enum E1276
  1495 ;;  sTransmitEdg    1    2[COMMON] enum E1280
  1496 ;; Auto vars:     Size  Location     Type
  1497 ;;  sType           1    3[COMMON] enum E1264
  1498 ;; Return value:  Size  Location     Type
  1499 ;;                  1    wreg      void 
  1500 ;; Registers used:
  1501 ;;		wreg, status,2, status,0
  1502 ;; Tracked objects:
  1503 ;;		On entry : 0/0
  1504 ;;		On exit  : 0/0
  1505 ;;		Unchanged: 0/0
  1506 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1507 ;;      Params:         3       0       0       0       0
  1508 ;;      Locals:         1       0       0       0       0
  1509 ;;      Temps:          0       0       0       0       0
  1510 ;;      Totals:         4       0       0       0       0
  1511 ;;Total ram usage:        4 bytes
  1512 ;; Hardware stack levels used:    1
  1513 ;; This function calls:
  1514 ;;		Nothing
  1515 ;; This function is called by:
  1516 ;;		_main
  1517 ;; This function uses a non-reentrant model
  1518 ;;
  1519                           
  1520                           
  1521                           ;psect for function _spiInit
  1522  0D36                     _spiInit:
  1523                           
  1524                           ;incstack = 0
  1525                           ; Regs used in _spiInit: [wreg+status,2+status,0]
  1526                           ;spiInit@sType stored from wreg
  1527  0D36  00F3               	movwf	spiInit@sType
  1528  0D37                     l1953:
  1529                           
  1530                           ;spi.c: 12: void spiInit(Spi_Type sType, Spi_Data_Sample sDataSample, Spi_Clock_Idle sCl
      +                          ockIdle, Spi_Transmit_Edge sTransmitEdge);spi.c: 13: {;spi.c: 14:     TRISC5 = 0;
  1531  0D37  1683               	bsf	3,5	;RP0=1, select bank1
  1532  0D38  1303               	bcf	3,6	;RP1=0, select bank1
  1533  0D39  1287               	bcf	7,5	;volatile
  1534                           
  1535                           ;spi.c: 15:     if(sType & 0b00000100)
  1536  0D3A  1D73               	btfss	spiInit@sType,2
  1537  0D3B  2D3D               	goto	u2831
  1538  0D3C  2D3E               	goto	u2830
  1539  0D3D                     u2831:
  1540  0D3D  2D42               	goto	l1959
  1541  0D3E                     u2830:
  1542  0D3E                     l1955:
  1543                           
  1544                           ;spi.c: 16:     {;spi.c: 17:         SSPSTAT = sTransmitEdge;
  1545  0D3E  0872               	movf	spiInit@sTransmitEdge,w
  1546  0D3F  0094               	movwf	20	;volatile
  1547  0D40                     l1957:
  1548                           
  1549                           ;spi.c: 18:         TRISC3 = 1;
  1550  0D40  1587               	bsf	7,3	;volatile
  1551                           
  1552                           ;spi.c: 19:     }
  1553  0D41  2D46               	goto	l185
  1554  0D42                     l1959:
  1555                           
  1556                           ;spi.c: 21:     {;spi.c: 22:         SSPSTAT = sDataSample | sTransmitEdge;
  1557  0D42  0870               	movf	spiInit@sDataSample,w
  1558  0D43  0472               	iorwf	spiInit@sTransmitEdge,w
  1559  0D44  0094               	movwf	20	;volatile
  1560  0D45                     l1961:
  1561                           
  1562                           ;spi.c: 23:         TRISC3 = 0;
  1563  0D45  1187               	bcf	7,3	;volatile
  1564  0D46                     l185:	
  1565                           ;spi.c: 24:     }
  1566                           
  1567                           
  1568                           ;spi.c: 26:     SSPCON = sType | sClockIdle;
  1569  0D46  0873               	movf	spiInit@sType,w
  1570  0D47  0471               	iorwf	spiInit@sClockIdle,w
  1571  0D48  1283               	bcf	3,5	;RP0=0, select bank0
  1572  0D49  1303               	bcf	3,6	;RP1=0, select bank0
  1573  0D4A  0094               	movwf	20	;volatile
  1574  0D4B                     l186:
  1575  0D4B  0008               	return
  1576  0D4C                     __end_of_spiInit:
  1577                           
  1578                           	psect	text5
  1579  0F3C                     __ptext5:	
  1580 ;; *************** function _int2String *****************
  1581 ;; Defined at:
  1582 ;;		line 134 in file "main.c"
  1583 ;; Parameters:    Size  Location     Type
  1584 ;;  value           1    wreg     unsigned char 
  1585 ;; Auto vars:     Size  Location     Type
  1586 ;;  value           1    5[BANK0 ] unsigned char 
  1587 ;;  cadena          4    0[BANK0 ] unsigned char [4]
  1588 ;;  digito          1    4[BANK0 ] unsigned char 
  1589 ;; Return value:  Size  Location     Type
  1590 ;;                  1    wreg      PTR unsigned char 
  1591 ;; Registers used:
  1592 ;;		wreg, status,2, status,0, pclath, cstack
  1593 ;; Tracked objects:
  1594 ;;		On entry : 0/0
  1595 ;;		On exit  : 0/0
  1596 ;;		Unchanged: 0/0
  1597 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1598 ;;      Params:         0       0       0       0       0
  1599 ;;      Locals:         0       6       0       0       0
  1600 ;;      Temps:          3       0       0       0       0
  1601 ;;      Totals:         3       6       0       0       0
  1602 ;;Total ram usage:        9 bytes
  1603 ;; Hardware stack levels used:    1
  1604 ;; Hardware stack levels required when called:    1
  1605 ;; This function calls:
  1606 ;;		___awdiv
  1607 ;;		___awmod
  1608 ;;		___bmul
  1609 ;; This function is called by:
  1610 ;;		_main
  1611 ;; This function uses a non-reentrant model
  1612 ;;
  1613                           
  1614                           
  1615                           ;psect for function _int2String
  1616  0F3C                     _int2String:
  1617                           
  1618                           ;incstack = 0
  1619                           ; Regs used in _int2String: [wreg+status,2+status,0+pclath+cstack]
  1620                           ;int2String@value stored from wreg
  1621  0F3C  1283               	bcf	3,5	;RP0=0, select bank0
  1622  0F3D  1303               	bcf	3,6	;RP1=0, select bank0
  1623  0F3E  00A5               	movwf	int2String@value
  1624  0F3F                     l2067:
  1625                           
  1626                           ;main.c: 135:     char cadena[4];;main.c: 136:     uint8_t digito;;main.c: 138:     digi
      +                          to = value/100;
  1627  0F3F  3064               	movlw	100
  1628  0F40  00F0               	movwf	___awdiv@divisor
  1629  0F41  3000               	movlw	0
  1630  0F42  00F1               	movwf	___awdiv@divisor+1
  1631  0F43  0825               	movf	int2String@value,w
  1632  0F44  00F9               	movwf	??_int2String
  1633  0F45  01FA               	clrf	??_int2String+1
  1634  0F46  0879               	movf	??_int2String,w
  1635  0F47  00F2               	movwf	___awdiv@dividend
  1636  0F48  087A               	movf	??_int2String+1,w
  1637  0F49  00F3               	movwf	___awdiv@dividend+1
  1638  0F4A  120A  118A  202C  120A  158A  	fcall	___awdiv
  1639  0F4F  0870               	movf	?___awdiv,w
  1640  0F50  00FB               	movwf	??_int2String+2
  1641  0F51  087B               	movf	??_int2String+2,w
  1642  0F52  1283               	bcf	3,5	;RP0=0, select bank0
  1643  0F53  1303               	bcf	3,6	;RP1=0, select bank0
  1644  0F54  00A4               	movwf	int2String@digito
  1645  0F55                     l2069:
  1646                           
  1647                           ;main.c: 139:     cadena[0] = digito +48;
  1648  0F55  0824               	movf	int2String@digito,w
  1649  0F56  3E30               	addlw	48
  1650  0F57  00F9               	movwf	??_int2String
  1651  0F58  0879               	movf	??_int2String,w
  1652  0F59  00A0               	movwf	int2String@cadena
  1653  0F5A                     l2071:
  1654                           
  1655                           ;main.c: 140:     value-= digito*100;
  1656  0F5A  3064               	movlw	100
  1657  0F5B  00F9               	movwf	??_int2String
  1658  0F5C  0879               	movf	??_int2String,w
  1659  0F5D  00F0               	movwf	___bmul@multiplicand
  1660  0F5E  0824               	movf	int2String@digito,w
  1661  0F5F  120A  158A  2521  120A  158A  	fcall	___bmul
  1662  0F64  00FA               	movwf	??_int2String+1
  1663  0F65  087A               	movf	??_int2String+1,w
  1664  0F66  1283               	bcf	3,5	;RP0=0, select bank0
  1665  0F67  1303               	bcf	3,6	;RP1=0, select bank0
  1666  0F68  02A5               	subwf	int2String@value,f
  1667  0F69                     l2073:
  1668                           
  1669                           ;main.c: 142:     cadena[1] = value/10 + 48;
  1670  0F69  300A               	movlw	10
  1671  0F6A  00F0               	movwf	___awdiv@divisor
  1672  0F6B  3000               	movlw	0
  1673  0F6C  00F1               	movwf	___awdiv@divisor+1
  1674  0F6D  0825               	movf	int2String@value,w
  1675  0F6E  00F9               	movwf	??_int2String
  1676  0F6F  01FA               	clrf	??_int2String+1
  1677  0F70  0879               	movf	??_int2String,w
  1678  0F71  00F2               	movwf	___awdiv@dividend
  1679  0F72  087A               	movf	??_int2String+1,w
  1680  0F73  00F3               	movwf	___awdiv@dividend+1
  1681  0F74  120A  118A  202C  120A  158A  	fcall	___awdiv
  1682  0F79  0870               	movf	?___awdiv,w
  1683  0F7A  3E30               	addlw	48
  1684  0F7B  00FB               	movwf	??_int2String+2
  1685  0F7C  087B               	movf	??_int2String+2,w
  1686  0F7D  1283               	bcf	3,5	;RP0=0, select bank0
  1687  0F7E  1303               	bcf	3,6	;RP1=0, select bank0
  1688  0F7F  00A1               	movwf	int2String@cadena+1
  1689  0F80                     l2075:
  1690                           
  1691                           ;main.c: 143:     cadena[2] = value%10 + 48;
  1692  0F80  300A               	movlw	10
  1693  0F81  00F0               	movwf	___awmod@divisor
  1694  0F82  3000               	movlw	0
  1695  0F83  00F1               	movwf	___awmod@divisor+1
  1696  0F84  0825               	movf	int2String@value,w
  1697  0F85  00F9               	movwf	??_int2String
  1698  0F86  01FA               	clrf	??_int2String+1
  1699  0F87  0879               	movf	??_int2String,w
  1700  0F88  00F2               	movwf	___awmod@dividend
  1701  0F89  087A               	movf	??_int2String+1,w
  1702  0F8A  00F3               	movwf	___awmod@dividend+1
  1703  0F8B  120A  158A  26E3  120A  158A  	fcall	___awmod
  1704  0F90  0870               	movf	?___awmod,w
  1705  0F91  3E30               	addlw	48
  1706  0F92  00FB               	movwf	??_int2String+2
  1707  0F93  087B               	movf	??_int2String+2,w
  1708  0F94  1283               	bcf	3,5	;RP0=0, select bank0
  1709  0F95  1303               	bcf	3,6	;RP1=0, select bank0
  1710  0F96  00A2               	movwf	int2String@cadena+2
  1711  0F97                     l2077:
  1712                           
  1713                           ;main.c: 144:     cadena[3] = '\0';
  1714  0F97  01A3               	clrf	int2String@cadena+3
  1715  0F98                     l2079:
  1716                           
  1717                           ;main.c: 145:     return cadena;
  1718  0F98  3020               	movlw	(low (int2String@cadena| 0))& (0+255)
  1719  0F99                     l62:
  1720  0F99  0008               	return
  1721  0F9A                     __end_of_int2String:
  1722                           
  1723                           	psect	text6
  1724  0D21                     __ptext6:	
  1725 ;; *************** function ___bmul *****************
  1726 ;; Defined at:
  1727 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul8.c"
  1728 ;; Parameters:    Size  Location     Type
  1729 ;;  multiplier      1    wreg     unsigned char 
  1730 ;;  multiplicand    1    0[COMMON] unsigned char 
  1731 ;; Auto vars:     Size  Location     Type
  1732 ;;  multiplier      1    3[COMMON] unsigned char 
  1733 ;;  product         1    2[COMMON] unsigned char 
  1734 ;; Return value:  Size  Location     Type
  1735 ;;                  1    wreg      unsigned char 
  1736 ;; Registers used:
  1737 ;;		wreg, status,2, status,0
  1738 ;; Tracked objects:
  1739 ;;		On entry : 0/0
  1740 ;;		On exit  : 0/0
  1741 ;;		Unchanged: 0/0
  1742 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1743 ;;      Params:         1       0       0       0       0
  1744 ;;      Locals:         2       0       0       0       0
  1745 ;;      Temps:          1       0       0       0       0
  1746 ;;      Totals:         4       0       0       0       0
  1747 ;;Total ram usage:        4 bytes
  1748 ;; Hardware stack levels used:    1
  1749 ;; This function calls:
  1750 ;;		Nothing
  1751 ;; This function is called by:
  1752 ;;		_int2String
  1753 ;; This function uses a non-reentrant model
  1754 ;;
  1755                           
  1756                           
  1757                           ;psect for function ___bmul
  1758  0D21                     ___bmul:
  1759                           
  1760                           ;incstack = 0
  1761                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  1762                           ;___bmul@multiplier stored from wreg
  1763  0D21  00F3               	movwf	___bmul@multiplier
  1764  0D22                     l1565:
  1765  0D22  01F2               	clrf	___bmul@product
  1766  0D23                     l1567:
  1767  0D23  1C73               	btfss	___bmul@multiplier,0
  1768  0D24  2D26               	goto	u1811
  1769  0D25  2D27               	goto	u1810
  1770  0D26                     u1811:
  1771  0D26  2D2B               	goto	l1571
  1772  0D27                     u1810:
  1773  0D27                     l1569:
  1774  0D27  0870               	movf	___bmul@multiplicand,w
  1775  0D28  00F1               	movwf	??___bmul
  1776  0D29  0871               	movf	??___bmul,w
  1777  0D2A  07F2               	addwf	___bmul@product,f
  1778  0D2B                     l1571:
  1779  0D2B  1003               	clrc
  1780  0D2C  0DF0               	rlf	___bmul@multiplicand,f
  1781  0D2D                     l1573:
  1782  0D2D  1003               	clrc
  1783  0D2E  0CF3               	rrf	___bmul@multiplier,f
  1784  0D2F  0873               	movf	___bmul@multiplier,w
  1785  0D30  1D03               	btfss	3,2
  1786  0D31  2D33               	goto	u1821
  1787  0D32  2D34               	goto	u1820
  1788  0D33                     u1821:
  1789  0D33  2D23               	goto	l1567
  1790  0D34                     u1820:
  1791  0D34                     l1575:
  1792  0D34  0872               	movf	___bmul@product,w
  1793  0D35                     l315:
  1794  0D35  0008               	return
  1795  0D36                     __end_of___bmul:
  1796                           
  1797                           	psect	text7
  1798  0EE3                     __ptext7:	
  1799 ;; *************** function ___awmod *****************
  1800 ;; Defined at:
  1801 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awmod.c"
  1802 ;; Parameters:    Size  Location     Type
  1803 ;;  divisor         2    0[COMMON] int 
  1804 ;;  dividend        2    2[COMMON] int 
  1805 ;; Auto vars:     Size  Location     Type
  1806 ;;  sign            1    6[COMMON] unsigned char 
  1807 ;;  counter         1    5[COMMON] unsigned char 
  1808 ;; Return value:  Size  Location     Type
  1809 ;;                  2    0[COMMON] int 
  1810 ;; Registers used:
  1811 ;;		wreg, status,2, status,0
  1812 ;; Tracked objects:
  1813 ;;		On entry : 0/0
  1814 ;;		On exit  : 0/0
  1815 ;;		Unchanged: 0/0
  1816 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1817 ;;      Params:         4       0       0       0       0
  1818 ;;      Locals:         2       0       0       0       0
  1819 ;;      Temps:          1       0       0       0       0
  1820 ;;      Totals:         7       0       0       0       0
  1821 ;;Total ram usage:        7 bytes
  1822 ;; Hardware stack levels used:    1
  1823 ;; This function calls:
  1824 ;;		Nothing
  1825 ;; This function is called by:
  1826 ;;		_int2String
  1827 ;; This function uses a non-reentrant model
  1828 ;;
  1829                           
  1830                           
  1831                           ;psect for function ___awmod
  1832  0EE3                     ___awmod:
  1833  0EE3                     l1647:	
  1834                           ;incstack = 0
  1835                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  1836                           
  1837  0EE3  01F6               	clrf	___awmod@sign
  1838  0EE4                     l1649:
  1839  0EE4  1FF3               	btfss	___awmod@dividend+1,7
  1840  0EE5  2EE7               	goto	u2001
  1841  0EE6  2EE8               	goto	u2000
  1842  0EE7                     u2001:
  1843  0EE7  2EEF               	goto	l1655
  1844  0EE8                     u2000:
  1845  0EE8                     l1651:
  1846  0EE8  09F2               	comf	___awmod@dividend,f
  1847  0EE9  09F3               	comf	___awmod@dividend+1,f
  1848  0EEA  0AF2               	incf	___awmod@dividend,f
  1849  0EEB  1903               	skipnz
  1850  0EEC  0AF3               	incf	___awmod@dividend+1,f
  1851  0EED                     l1653:
  1852  0EED  01F6               	clrf	___awmod@sign
  1853  0EEE  0AF6               	incf	___awmod@sign,f
  1854  0EEF                     l1655:
  1855  0EEF  1FF1               	btfss	___awmod@divisor+1,7
  1856  0EF0  2EF2               	goto	u2011
  1857  0EF1  2EF3               	goto	u2010
  1858  0EF2                     u2011:
  1859  0EF2  2EF8               	goto	l1659
  1860  0EF3                     u2010:
  1861  0EF3                     l1657:
  1862  0EF3  09F0               	comf	___awmod@divisor,f
  1863  0EF4  09F1               	comf	___awmod@divisor+1,f
  1864  0EF5  0AF0               	incf	___awmod@divisor,f
  1865  0EF6  1903               	skipnz
  1866  0EF7  0AF1               	incf	___awmod@divisor+1,f
  1867  0EF8                     l1659:
  1868  0EF8  0870               	movf	___awmod@divisor,w
  1869  0EF9  0471               	iorwf	___awmod@divisor+1,w
  1870  0EFA  1903               	btfsc	3,2
  1871  0EFB  2EFD               	goto	u2021
  1872  0EFC  2EFE               	goto	u2020
  1873  0EFD                     u2021:
  1874  0EFD  2F2D               	goto	l1677
  1875  0EFE                     u2020:
  1876  0EFE                     l1661:
  1877  0EFE  01F5               	clrf	___awmod@counter
  1878  0EFF  0AF5               	incf	___awmod@counter,f
  1879  0F00  2F0C               	goto	l1667
  1880  0F01                     l1663:
  1881  0F01  3001               	movlw	1
  1882  0F02                     u2035:
  1883  0F02  1003               	clrc
  1884  0F03  0DF0               	rlf	___awmod@divisor,f
  1885  0F04  0DF1               	rlf	___awmod@divisor+1,f
  1886  0F05  3EFF               	addlw	-1
  1887  0F06  1D03               	skipz
  1888  0F07  2F02               	goto	u2035
  1889  0F08                     l1665:
  1890  0F08  3001               	movlw	1
  1891  0F09  00F4               	movwf	??___awmod
  1892  0F0A  0874               	movf	??___awmod,w
  1893  0F0B  07F5               	addwf	___awmod@counter,f
  1894  0F0C                     l1667:
  1895  0F0C  1FF1               	btfss	___awmod@divisor+1,7
  1896  0F0D  2F0F               	goto	u2041
  1897  0F0E  2F10               	goto	u2040
  1898  0F0F                     u2041:
  1899  0F0F  2F01               	goto	l1663
  1900  0F10                     u2040:
  1901  0F10                     l1669:
  1902  0F10  0871               	movf	___awmod@divisor+1,w
  1903  0F11  0273               	subwf	___awmod@dividend+1,w
  1904  0F12  1D03               	skipz
  1905  0F13  2F16               	goto	u2055
  1906  0F14  0870               	movf	___awmod@divisor,w
  1907  0F15  0272               	subwf	___awmod@dividend,w
  1908  0F16                     u2055:
  1909  0F16  1C03               	skipc
  1910  0F17  2F19               	goto	u2051
  1911  0F18  2F1A               	goto	u2050
  1912  0F19                     u2051:
  1913  0F19  2F20               	goto	l1673
  1914  0F1A                     u2050:
  1915  0F1A                     l1671:
  1916  0F1A  0870               	movf	___awmod@divisor,w
  1917  0F1B  02F2               	subwf	___awmod@dividend,f
  1918  0F1C  0871               	movf	___awmod@divisor+1,w
  1919  0F1D  1C03               	skipc
  1920  0F1E  03F3               	decf	___awmod@dividend+1,f
  1921  0F1F  02F3               	subwf	___awmod@dividend+1,f
  1922  0F20                     l1673:
  1923  0F20  3001               	movlw	1
  1924  0F21                     u2065:
  1925  0F21  1003               	clrc
  1926  0F22  0CF1               	rrf	___awmod@divisor+1,f
  1927  0F23  0CF0               	rrf	___awmod@divisor,f
  1928  0F24  3EFF               	addlw	-1
  1929  0F25  1D03               	skipz
  1930  0F26  2F21               	goto	u2065
  1931  0F27                     l1675:
  1932  0F27  3001               	movlw	1
  1933  0F28  02F5               	subwf	___awmod@counter,f
  1934  0F29  1D03               	btfss	3,2
  1935  0F2A  2F2C               	goto	u2071
  1936  0F2B  2F2D               	goto	u2070
  1937  0F2C                     u2071:
  1938  0F2C  2F10               	goto	l1669
  1939  0F2D                     u2070:
  1940  0F2D                     l1677:
  1941  0F2D  0876               	movf	___awmod@sign,w
  1942  0F2E  1903               	btfsc	3,2
  1943  0F2F  2F31               	goto	u2081
  1944  0F30  2F32               	goto	u2080
  1945  0F31                     u2081:
  1946  0F31  2F37               	goto	l1681
  1947  0F32                     u2080:
  1948  0F32                     l1679:
  1949  0F32  09F2               	comf	___awmod@dividend,f
  1950  0F33  09F3               	comf	___awmod@dividend+1,f
  1951  0F34  0AF2               	incf	___awmod@dividend,f
  1952  0F35  1903               	skipnz
  1953  0F36  0AF3               	incf	___awmod@dividend+1,f
  1954  0F37                     l1681:
  1955  0F37  0873               	movf	___awmod@dividend+1,w
  1956  0F38  00F1               	movwf	?___awmod+1
  1957  0F39  0872               	movf	___awmod@dividend,w
  1958  0F3A  00F0               	movwf	?___awmod
  1959  0F3B                     l455:
  1960  0F3B  0008               	return
  1961  0F3C                     __end_of___awmod:
  1962                           
  1963                           	psect	text8
  1964  002C                     __ptext8:	
  1965 ;; *************** function ___awdiv *****************
  1966 ;; Defined at:
  1967 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awdiv.c"
  1968 ;; Parameters:    Size  Location     Type
  1969 ;;  divisor         2    0[COMMON] int 
  1970 ;;  dividend        2    2[COMMON] int 
  1971 ;; Auto vars:     Size  Location     Type
  1972 ;;  quotient        2    7[COMMON] int 
  1973 ;;  sign            1    6[COMMON] unsigned char 
  1974 ;;  counter         1    5[COMMON] unsigned char 
  1975 ;; Return value:  Size  Location     Type
  1976 ;;                  2    0[COMMON] int 
  1977 ;; Registers used:
  1978 ;;		wreg, status,2, status,0
  1979 ;; Tracked objects:
  1980 ;;		On entry : 0/0
  1981 ;;		On exit  : 0/0
  1982 ;;		Unchanged: 0/0
  1983 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1984 ;;      Params:         4       0       0       0       0
  1985 ;;      Locals:         4       0       0       0       0
  1986 ;;      Temps:          1       0       0       0       0
  1987 ;;      Totals:         9       0       0       0       0
  1988 ;;Total ram usage:        9 bytes
  1989 ;; Hardware stack levels used:    1
  1990 ;; This function calls:
  1991 ;;		Nothing
  1992 ;; This function is called by:
  1993 ;;		_int2String
  1994 ;; This function uses a non-reentrant model
  1995 ;;
  1996                           
  1997                           
  1998                           ;psect for function ___awdiv
  1999  002C                     ___awdiv:
  2000  002C                     l1603:	
  2001                           ;incstack = 0
  2002                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  2003                           
  2004  002C  01F6               	clrf	___awdiv@sign
  2005  002D                     l1605:
  2006  002D  1FF1               	btfss	___awdiv@divisor+1,7
  2007  002E  2830               	goto	u1901
  2008  002F  2831               	goto	u1900
  2009  0030                     u1901:
  2010  0030  2838               	goto	l1611
  2011  0031                     u1900:
  2012  0031                     l1607:
  2013  0031  09F0               	comf	___awdiv@divisor,f
  2014  0032  09F1               	comf	___awdiv@divisor+1,f
  2015  0033  0AF0               	incf	___awdiv@divisor,f
  2016  0034  1903               	skipnz
  2017  0035  0AF1               	incf	___awdiv@divisor+1,f
  2018  0036                     l1609:
  2019  0036  01F6               	clrf	___awdiv@sign
  2020  0037  0AF6               	incf	___awdiv@sign,f
  2021  0038                     l1611:
  2022  0038  1FF3               	btfss	___awdiv@dividend+1,7
  2023  0039  283B               	goto	u1911
  2024  003A  283C               	goto	u1910
  2025  003B                     u1911:
  2026  003B  2845               	goto	l1617
  2027  003C                     u1910:
  2028  003C                     l1613:
  2029  003C  09F2               	comf	___awdiv@dividend,f
  2030  003D  09F3               	comf	___awdiv@dividend+1,f
  2031  003E  0AF2               	incf	___awdiv@dividend,f
  2032  003F  1903               	skipnz
  2033  0040  0AF3               	incf	___awdiv@dividend+1,f
  2034  0041                     l1615:
  2035  0041  3001               	movlw	1
  2036  0042  00F4               	movwf	??___awdiv
  2037  0043  0874               	movf	??___awdiv,w
  2038  0044  06F6               	xorwf	___awdiv@sign,f
  2039  0045                     l1617:
  2040  0045  01F7               	clrf	___awdiv@quotient
  2041  0046  01F8               	clrf	___awdiv@quotient+1
  2042  0047                     l1619:
  2043  0047  0870               	movf	___awdiv@divisor,w
  2044  0048  0471               	iorwf	___awdiv@divisor+1,w
  2045  0049  1903               	btfsc	3,2
  2046  004A  284C               	goto	u1921
  2047  004B  284D               	goto	u1920
  2048  004C                     u1921:
  2049  004C  2884               	goto	l1639
  2050  004D                     u1920:
  2051  004D                     l1621:
  2052  004D  01F5               	clrf	___awdiv@counter
  2053  004E  0AF5               	incf	___awdiv@counter,f
  2054  004F  285B               	goto	l1627
  2055  0050                     l1623:
  2056  0050  3001               	movlw	1
  2057  0051                     u1935:
  2058  0051  1003               	clrc
  2059  0052  0DF0               	rlf	___awdiv@divisor,f
  2060  0053  0DF1               	rlf	___awdiv@divisor+1,f
  2061  0054  3EFF               	addlw	-1
  2062  0055  1D03               	skipz
  2063  0056  2851               	goto	u1935
  2064  0057                     l1625:
  2065  0057  3001               	movlw	1
  2066  0058  00F4               	movwf	??___awdiv
  2067  0059  0874               	movf	??___awdiv,w
  2068  005A  07F5               	addwf	___awdiv@counter,f
  2069  005B                     l1627:
  2070  005B  1FF1               	btfss	___awdiv@divisor+1,7
  2071  005C  285E               	goto	u1941
  2072  005D  285F               	goto	u1940
  2073  005E                     u1941:
  2074  005E  2850               	goto	l1623
  2075  005F                     u1940:
  2076  005F                     l1629:
  2077  005F  3001               	movlw	1
  2078  0060                     u1955:
  2079  0060  1003               	clrc
  2080  0061  0DF7               	rlf	___awdiv@quotient,f
  2081  0062  0DF8               	rlf	___awdiv@quotient+1,f
  2082  0063  3EFF               	addlw	-1
  2083  0064  1D03               	skipz
  2084  0065  2860               	goto	u1955
  2085  0066  0871               	movf	___awdiv@divisor+1,w
  2086  0067  0273               	subwf	___awdiv@dividend+1,w
  2087  0068  1D03               	skipz
  2088  0069  286C               	goto	u1965
  2089  006A  0870               	movf	___awdiv@divisor,w
  2090  006B  0272               	subwf	___awdiv@dividend,w
  2091  006C                     u1965:
  2092  006C  1C03               	skipc
  2093  006D  286F               	goto	u1961
  2094  006E  2870               	goto	u1960
  2095  006F                     u1961:
  2096  006F  2877               	goto	l1635
  2097  0070                     u1960:
  2098  0070                     l1631:
  2099  0070  0870               	movf	___awdiv@divisor,w
  2100  0071  02F2               	subwf	___awdiv@dividend,f
  2101  0072  0871               	movf	___awdiv@divisor+1,w
  2102  0073  1C03               	skipc
  2103  0074  03F3               	decf	___awdiv@dividend+1,f
  2104  0075  02F3               	subwf	___awdiv@dividend+1,f
  2105  0076                     l1633:
  2106  0076  1477               	bsf	___awdiv@quotient,0
  2107  0077                     l1635:
  2108  0077  3001               	movlw	1
  2109  0078                     u1975:
  2110  0078  1003               	clrc
  2111  0079  0CF1               	rrf	___awdiv@divisor+1,f
  2112  007A  0CF0               	rrf	___awdiv@divisor,f
  2113  007B  3EFF               	addlw	-1
  2114  007C  1D03               	skipz
  2115  007D  2878               	goto	u1975
  2116  007E                     l1637:
  2117  007E  3001               	movlw	1
  2118  007F  02F5               	subwf	___awdiv@counter,f
  2119  0080  1D03               	btfss	3,2
  2120  0081  2883               	goto	u1981
  2121  0082  2884               	goto	u1980
  2122  0083                     u1981:
  2123  0083  285F               	goto	l1629
  2124  0084                     u1980:
  2125  0084                     l1639:
  2126  0084  0876               	movf	___awdiv@sign,w
  2127  0085  1903               	btfsc	3,2
  2128  0086  2888               	goto	u1991
  2129  0087  2889               	goto	u1990
  2130  0088                     u1991:
  2131  0088  288E               	goto	l1643
  2132  0089                     u1990:
  2133  0089                     l1641:
  2134  0089  09F7               	comf	___awdiv@quotient,f
  2135  008A  09F8               	comf	___awdiv@quotient+1,f
  2136  008B  0AF7               	incf	___awdiv@quotient,f
  2137  008C  1903               	skipnz
  2138  008D  0AF8               	incf	___awdiv@quotient+1,f
  2139  008E                     l1643:
  2140  008E  0878               	movf	___awdiv@quotient+1,w
  2141  008F  00F1               	movwf	?___awdiv+1
  2142  0090  0877               	movf	___awdiv@quotient,w
  2143  0091  00F0               	movwf	?___awdiv
  2144  0092                     l442:
  2145  0092  0008               	return
  2146  0093                     __end_of___awdiv:
  2147                           
  2148                           	psect	text9
  2149  0208                     __ptext9:	
  2150 ;; *************** function _adcToString *****************
  2151 ;; Defined at:
  2152 ;;		line 115 in file "main.c"
  2153 ;; Parameters:    Size  Location     Type
  2154 ;;  value           2   37[BANK0 ] unsigned int 
  2155 ;; Auto vars:     Size  Location     Type
  2156 ;;  salida          5   40[BANK0 ] unsigned char [5]
  2157 ;;  digito          2   45[BANK0 ] unsigned int 
  2158 ;; Return value:  Size  Location     Type
  2159 ;;                  1    wreg      PTR unsigned char 
  2160 ;; Registers used:
  2161 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  2162 ;; Tracked objects:
  2163 ;;		On entry : 0/0
  2164 ;;		On exit  : 0/0
  2165 ;;		Unchanged: 0/0
  2166 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2167 ;;      Params:         0       2       0       0       0
  2168 ;;      Locals:         0       7       0       0       0
  2169 ;;      Temps:          0       1       0       0       0
  2170 ;;      Totals:         0      10       0       0       0
  2171 ;;Total ram usage:       10 bytes
  2172 ;; Hardware stack levels used:    1
  2173 ;; Hardware stack levels required when called:    2
  2174 ;; This function calls:
  2175 ;;		___flmul
  2176 ;;		___fltol
  2177 ;;		___lwdiv
  2178 ;;		___lwmod
  2179 ;;		___wmul
  2180 ;;		___xxtofl
  2181 ;; This function is called by:
  2182 ;;		_main
  2183 ;; This function uses a non-reentrant model
  2184 ;;
  2185                           
  2186                           
  2187                           ;psect for function _adcToString
  2188  0208                     _adcToString:
  2189  0208                     l2033:	
  2190                           ;incstack = 0
  2191                           ; Regs used in _adcToString: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  2192                           
  2193                           
  2194                           ;main.c: 116:     char salida[5];;main.c: 117:     uint16_t digito;;main.c: 119:     val
      +                          ue = value*1.96;
  2195  0208  1283               	bcf	3,5	;RP0=0, select bank0
  2196  0209  1303               	bcf	3,6	;RP1=0, select bank0
  2197  020A  0845               	movf	adcToString@value,w
  2198  020B  00F0               	movwf	___xxtofl@val
  2199  020C  0846               	movf	adcToString@value+1,w
  2200  020D  00F1               	movwf	___xxtofl@val+1
  2201  020E  01F2               	clrf	___xxtofl@val+2
  2202  020F  01F3               	clrf	___xxtofl@val+3
  2203  0210  3000               	movlw	0
  2204  0211  120A  118A  22A6  120A  118A  	fcall	___xxtofl
  2205  0216  0873               	movf	?___xxtofl+3,w
  2206  0217  1283               	bcf	3,5	;RP0=0, select bank0
  2207  0218  1303               	bcf	3,6	;RP1=0, select bank0
  2208  0219  00A7               	movwf	___flmul@a+3
  2209  021A  0872               	movf	?___xxtofl+2,w
  2210  021B  00A6               	movwf	___flmul@a+2
  2211  021C  0871               	movf	?___xxtofl+1,w
  2212  021D  00A5               	movwf	___flmul@a+1
  2213  021E  0870               	movf	?___xxtofl,w
  2214  021F  00A4               	movwf	___flmul@a
  2215  0220  303F               	movlw	63
  2216  0221  00A3               	movwf	___flmul@b+3
  2217  0222  30FA               	movlw	250
  2218  0223  00A2               	movwf	___flmul@b+2
  2219  0224  30E1               	movlw	225
  2220  0225  00A1               	movwf	___flmul@b+1
  2221  0226  3048               	movlw	72
  2222  0227  00A0               	movwf	___flmul@b
  2223  0228  120A  118A  2493  120A  118A  	fcall	___flmul
  2224  022D  1283               	bcf	3,5	;RP0=0, select bank0
  2225  022E  1303               	bcf	3,6	;RP1=0, select bank0
  2226  022F  0823               	movf	?___flmul+3,w
  2227  0230  00BD               	movwf	___fltol@f1+3
  2228  0231  0822               	movf	?___flmul+2,w
  2229  0232  00BC               	movwf	___fltol@f1+2
  2230  0233  0821               	movf	?___flmul+1,w
  2231  0234  00BB               	movwf	___fltol@f1+1
  2232  0235  0820               	movf	?___flmul,w
  2233  0236  00BA               	movwf	___fltol@f1
  2234  0237  120A  118A  2102  120A  118A  	fcall	___fltol
  2235  023C  1283               	bcf	3,5	;RP0=0, select bank0
  2236  023D  1303               	bcf	3,6	;RP1=0, select bank0
  2237  023E  083B               	movf	?___fltol+1,w
  2238  023F  00C6               	movwf	adcToString@value+1
  2239  0240  083A               	movf	?___fltol,w
  2240  0241  00C5               	movwf	adcToString@value
  2241  0242                     l2035:
  2242                           
  2243                           ;main.c: 120:     digito = value/100 ;
  2244  0242  3064               	movlw	100
  2245  0243  00F0               	movwf	___lwdiv@divisor
  2246  0244  3000               	movlw	0
  2247  0245  00F1               	movwf	___lwdiv@divisor+1
  2248  0246  0846               	movf	adcToString@value+1,w
  2249  0247  00F3               	movwf	___lwdiv@dividend+1
  2250  0248  0845               	movf	adcToString@value,w
  2251  0249  00F2               	movwf	___lwdiv@dividend
  2252  024A  120A  158A  265A  120A  118A  	fcall	___lwdiv
  2253  024F  0871               	movf	?___lwdiv+1,w
  2254  0250  1283               	bcf	3,5	;RP0=0, select bank0
  2255  0251  1303               	bcf	3,6	;RP1=0, select bank0
  2256  0252  00CE               	movwf	adcToString@digito+1
  2257  0253  0870               	movf	?___lwdiv,w
  2258  0254  00CD               	movwf	adcToString@digito
  2259  0255                     l2037:
  2260                           
  2261                           ;main.c: 122:     salida[0] = digito + 48;
  2262  0255  084D               	movf	adcToString@digito,w
  2263  0256  3E30               	addlw	48
  2264  0257  00C7               	movwf	??_adcToString
  2265  0258  0847               	movf	??_adcToString,w
  2266  0259  00C8               	movwf	adcToString@salida
  2267  025A                     l2039:
  2268                           
  2269                           ;main.c: 123:     salida[1] = '.';
  2270  025A  302E               	movlw	46
  2271  025B  00C7               	movwf	??_adcToString
  2272  025C  0847               	movf	??_adcToString,w
  2273  025D  00C9               	movwf	adcToString@salida+1
  2274  025E                     l2041:
  2275                           
  2276                           ;main.c: 124:     value -= digito*100;
  2277  025E  084E               	movf	adcToString@digito+1,w
  2278  025F  00F1               	movwf	___wmul@multiplier+1
  2279  0260  084D               	movf	adcToString@digito,w
  2280  0261  00F0               	movwf	___wmul@multiplier
  2281  0262  3064               	movlw	100
  2282  0263  00F2               	movwf	___wmul@multiplicand
  2283  0264  3000               	movlw	0
  2284  0265  00F3               	movwf	___wmul@multiplicand+1
  2285  0266  120A  158A  2589  120A  118A  	fcall	___wmul
  2286  026B  0870               	movf	?___wmul,w
  2287  026C  1283               	bcf	3,5	;RP0=0, select bank0
  2288  026D  1303               	bcf	3,6	;RP1=0, select bank0
  2289  026E  02C5               	subwf	adcToString@value,f
  2290  026F  0871               	movf	?___wmul+1,w
  2291  0270  1C03               	skipc
  2292  0271  03C6               	decf	adcToString@value+1,f
  2293  0272  02C6               	subwf	adcToString@value+1,f
  2294  0273                     l2043:
  2295                           
  2296                           ;main.c: 126:     digito = value/10;
  2297  0273  300A               	movlw	10
  2298  0274  00F0               	movwf	___lwdiv@divisor
  2299  0275  3000               	movlw	0
  2300  0276  00F1               	movwf	___lwdiv@divisor+1
  2301  0277  0846               	movf	adcToString@value+1,w
  2302  0278  00F3               	movwf	___lwdiv@dividend+1
  2303  0279  0845               	movf	adcToString@value,w
  2304  027A  00F2               	movwf	___lwdiv@dividend
  2305  027B  120A  158A  265A  120A  118A  	fcall	___lwdiv
  2306  0280  0871               	movf	?___lwdiv+1,w
  2307  0281  1283               	bcf	3,5	;RP0=0, select bank0
  2308  0282  1303               	bcf	3,6	;RP1=0, select bank0
  2309  0283  00CE               	movwf	adcToString@digito+1
  2310  0284  0870               	movf	?___lwdiv,w
  2311  0285  00CD               	movwf	adcToString@digito
  2312  0286                     l2045:
  2313                           
  2314                           ;main.c: 127:     salida[2] = digito +48;
  2315  0286  084D               	movf	adcToString@digito,w
  2316  0287  3E30               	addlw	48
  2317  0288  00C7               	movwf	??_adcToString
  2318  0289  0847               	movf	??_adcToString,w
  2319  028A  00CA               	movwf	adcToString@salida+2
  2320  028B                     l2047:
  2321                           
  2322                           ;main.c: 128:     digito = value % 10;
  2323  028B  300A               	movlw	10
  2324  028C  00F0               	movwf	___lwmod@divisor
  2325  028D  3000               	movlw	0
  2326  028E  00F1               	movwf	___lwmod@divisor+1
  2327  028F  0846               	movf	adcToString@value+1,w
  2328  0290  00F3               	movwf	___lwmod@dividend+1
  2329  0291  0845               	movf	adcToString@value,w
  2330  0292  00F2               	movwf	___lwmod@dividend
  2331  0293  120A  158A  25DE  120A  118A  	fcall	___lwmod
  2332  0298  0871               	movf	?___lwmod+1,w
  2333  0299  1283               	bcf	3,5	;RP0=0, select bank0
  2334  029A  1303               	bcf	3,6	;RP1=0, select bank0
  2335  029B  00CE               	movwf	adcToString@digito+1
  2336  029C  0870               	movf	?___lwmod,w
  2337  029D  00CD               	movwf	adcToString@digito
  2338  029E                     l2049:
  2339                           
  2340                           ;main.c: 129:     salida[3] = digito +48;
  2341  029E  084D               	movf	adcToString@digito,w
  2342  029F  3E30               	addlw	48
  2343  02A0  00C7               	movwf	??_adcToString
  2344  02A1  0847               	movf	??_adcToString,w
  2345  02A2  00CB               	movwf	adcToString@salida+3
  2346  02A3                     l2051:
  2347                           
  2348                           ;main.c: 130:     salida[4] = '\0';
  2349  02A3  01CC               	clrf	adcToString@salida+4
  2350  02A4                     l2053:
  2351                           
  2352                           ;main.c: 131:     return salida;
  2353  02A4  3048               	movlw	(low (adcToString@salida| 0))& (0+255)
  2354  02A5                     l59:
  2355  02A5  0008               	return
  2356  02A6                     __end_of_adcToString:
  2357                           
  2358                           	psect	text10
  2359  02A6                     __ptext10:	
  2360 ;; *************** function ___xxtofl *****************
  2361 ;; Defined at:
  2362 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\xxtofl.c"
  2363 ;; Parameters:    Size  Location     Type
  2364 ;;  sign            1    wreg     unsigned char 
  2365 ;;  val             4    0[COMMON] long 
  2366 ;; Auto vars:     Size  Location     Type
  2367 ;;  sign            1    8[COMMON] unsigned char 
  2368 ;;  arg             4   10[COMMON] unsigned long 
  2369 ;;  exp             1    9[COMMON] unsigned char 
  2370 ;; Return value:  Size  Location     Type
  2371 ;;                  4    0[COMMON] unsigned char 
  2372 ;; Registers used:
  2373 ;;		wreg, status,2, status,0
  2374 ;; Tracked objects:
  2375 ;;		On entry : 0/0
  2376 ;;		On exit  : 0/0
  2377 ;;		Unchanged: 0/0
  2378 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2379 ;;      Params:         4       0       0       0       0
  2380 ;;      Locals:         6       0       0       0       0
  2381 ;;      Temps:          4       0       0       0       0
  2382 ;;      Totals:        14       0       0       0       0
  2383 ;;Total ram usage:       14 bytes
  2384 ;; Hardware stack levels used:    1
  2385 ;; This function calls:
  2386 ;;		Nothing
  2387 ;; This function is called by:
  2388 ;;		_adcToString
  2389 ;; This function uses a non-reentrant model
  2390 ;;
  2391                           
  2392                           
  2393                           ;psect for function ___xxtofl
  2394  02A6                     ___xxtofl:
  2395                           
  2396                           ;incstack = 0
  2397                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  2398                           ;___xxtofl@sign stored from wreg
  2399  02A6  00F8               	movwf	___xxtofl@sign
  2400  02A7                     l1909:
  2401  02A7  0878               	movf	___xxtofl@sign,w
  2402  02A8  1903               	btfsc	3,2
  2403  02A9  2AAB               	goto	u2691
  2404  02AA  2AAC               	goto	u2690
  2405  02AB                     u2691:
  2406  02AB  2AC0               	goto	l1915
  2407  02AC                     u2690:
  2408  02AC                     l1911:
  2409  02AC  1FF3               	btfss	___xxtofl@val+3,7
  2410  02AD  2AAF               	goto	u2701
  2411  02AE  2AB0               	goto	u2700
  2412  02AF                     u2701:
  2413  02AF  2AC0               	goto	l1915
  2414  02B0                     u2700:
  2415  02B0                     l1913:
  2416  02B0  0970               	comf	___xxtofl@val,w
  2417  02B1  00FA               	movwf	___xxtofl@arg
  2418  02B2  0971               	comf	___xxtofl@val+1,w
  2419  02B3  00FB               	movwf	___xxtofl@arg+1
  2420  02B4  0972               	comf	___xxtofl@val+2,w
  2421  02B5  00FC               	movwf	___xxtofl@arg+2
  2422  02B6  0973               	comf	___xxtofl@val+3,w
  2423  02B7  00FD               	movwf	___xxtofl@arg+3
  2424  02B8  0AFA               	incf	___xxtofl@arg,f
  2425  02B9  1903               	skipnz
  2426  02BA  0AFB               	incf	___xxtofl@arg+1,f
  2427  02BB  1903               	skipnz
  2428  02BC  0AFC               	incf	___xxtofl@arg+2,f
  2429  02BD  1903               	skipnz
  2430  02BE  0AFD               	incf	___xxtofl@arg+3,f
  2431  02BF  2AC8               	goto	l722
  2432  02C0                     l1915:
  2433  02C0  0873               	movf	___xxtofl@val+3,w
  2434  02C1  00FD               	movwf	___xxtofl@arg+3
  2435  02C2  0872               	movf	___xxtofl@val+2,w
  2436  02C3  00FC               	movwf	___xxtofl@arg+2
  2437  02C4  0871               	movf	___xxtofl@val+1,w
  2438  02C5  00FB               	movwf	___xxtofl@arg+1
  2439  02C6  0870               	movf	___xxtofl@val,w
  2440  02C7  00FA               	movwf	___xxtofl@arg
  2441  02C8                     l722:
  2442  02C8  0873               	movf	___xxtofl@val+3,w
  2443  02C9  0472               	iorwf	___xxtofl@val+2,w
  2444  02CA  0471               	iorwf	___xxtofl@val+1,w
  2445  02CB  0470               	iorwf	___xxtofl@val,w
  2446  02CC  1D03               	skipz
  2447  02CD  2ACF               	goto	u2711
  2448  02CE  2AD0               	goto	u2710
  2449  02CF                     u2711:
  2450  02CF  2AD9               	goto	l1921
  2451  02D0                     u2710:
  2452  02D0                     l1917:
  2453  02D0  3000               	movlw	0
  2454  02D1  00F3               	movwf	?___xxtofl+3
  2455  02D2  3000               	movlw	0
  2456  02D3  00F2               	movwf	?___xxtofl+2
  2457  02D4  3000               	movlw	0
  2458  02D5  00F1               	movwf	?___xxtofl+1
  2459  02D6  3000               	movlw	0
  2460  02D7  00F0               	movwf	?___xxtofl
  2461  02D8  2B5F               	goto	l724
  2462  02D9                     l1921:
  2463  02D9  3096               	movlw	150
  2464  02DA  00F4               	movwf	??___xxtofl
  2465  02DB  0874               	movf	??___xxtofl,w
  2466  02DC  00F9               	movwf	___xxtofl@exp
  2467  02DD  2AEB               	goto	l1925
  2468  02DE                     l1923:
  2469  02DE  3001               	movlw	1
  2470  02DF  00F4               	movwf	??___xxtofl
  2471  02E0  0874               	movf	??___xxtofl,w
  2472  02E1  07F9               	addwf	___xxtofl@exp,f
  2473  02E2  3001               	movlw	1
  2474  02E3                     u2725:
  2475  02E3  1003               	clrc
  2476  02E4  0CFD               	rrf	___xxtofl@arg+3,f
  2477  02E5  0CFC               	rrf	___xxtofl@arg+2,f
  2478  02E6  0CFB               	rrf	___xxtofl@arg+1,f
  2479  02E7  0CFA               	rrf	___xxtofl@arg,f
  2480  02E8  3EFF               	addlw	-1
  2481  02E9  1D03               	skipz
  2482  02EA  2AE3               	goto	u2725
  2483  02EB                     l1925:
  2484  02EB  30FE               	movlw	254
  2485  02EC  057D               	andwf	___xxtofl@arg+3,w
  2486  02ED  1D03               	btfss	3,2
  2487  02EE  2AF0               	goto	u2731
  2488  02EF  2AF1               	goto	u2730
  2489  02F0                     u2731:
  2490  02F0  2ADE               	goto	l1923
  2491  02F1                     u2730:
  2492  02F1  2B0D               	goto	l728
  2493  02F2                     l1927:
  2494  02F2  3001               	movlw	1
  2495  02F3  00F4               	movwf	??___xxtofl
  2496  02F4  0874               	movf	??___xxtofl,w
  2497  02F5  07F9               	addwf	___xxtofl@exp,f
  2498  02F6                     l1929:
  2499  02F6  3001               	movlw	1
  2500  02F7  07FA               	addwf	___xxtofl@arg,f
  2501  02F8  3000               	movlw	0
  2502  02F9  1803               	skipnc
  2503  02FA  3001               	movlw	1
  2504  02FB  07FB               	addwf	___xxtofl@arg+1,f
  2505  02FC  3000               	movlw	0
  2506  02FD  1803               	skipnc
  2507  02FE  3001               	movlw	1
  2508  02FF  07FC               	addwf	___xxtofl@arg+2,f
  2509  0300  3000               	movlw	0
  2510  0301  1803               	skipnc
  2511  0302  3001               	movlw	1
  2512  0303  07FD               	addwf	___xxtofl@arg+3,f
  2513  0304                     l1931:
  2514  0304  3001               	movlw	1
  2515  0305                     u2745:
  2516  0305  1003               	clrc
  2517  0306  0CFD               	rrf	___xxtofl@arg+3,f
  2518  0307  0CFC               	rrf	___xxtofl@arg+2,f
  2519  0308  0CFB               	rrf	___xxtofl@arg+1,f
  2520  0309  0CFA               	rrf	___xxtofl@arg,f
  2521  030A  3EFF               	addlw	-1
  2522  030B  1D03               	skipz
  2523  030C  2B05               	goto	u2745
  2524  030D                     l728:
  2525  030D  30FF               	movlw	255
  2526  030E  057D               	andwf	___xxtofl@arg+3,w
  2527  030F  1D03               	btfss	3,2
  2528  0310  2B12               	goto	u2751
  2529  0311  2B13               	goto	u2750
  2530  0312                     u2751:
  2531  0312  2AF2               	goto	l1927
  2532  0313                     u2750:
  2533  0313  2B1F               	goto	l1935
  2534  0314                     l1933:
  2535  0314  3001               	movlw	1
  2536  0315  02F9               	subwf	___xxtofl@exp,f
  2537  0316  3001               	movlw	1
  2538  0317  00F4               	movwf	??___xxtofl
  2539  0318                     u2765:
  2540  0318  1003               	clrc
  2541  0319  0DFA               	rlf	___xxtofl@arg,f
  2542  031A  0DFB               	rlf	___xxtofl@arg+1,f
  2543  031B  0DFC               	rlf	___xxtofl@arg+2,f
  2544  031C  0DFD               	rlf	___xxtofl@arg+3,f
  2545  031D  0BF4               	decfsz	??___xxtofl,f
  2546  031E  2B18               	goto	u2765
  2547  031F                     l1935:
  2548  031F  1BFC               	btfsc	___xxtofl@arg+2,7
  2549  0320  2B22               	goto	u2771
  2550  0321  2B23               	goto	u2770
  2551  0322                     u2771:
  2552  0322  2B29               	goto	l735
  2553  0323                     u2770:
  2554  0323                     l1937:
  2555  0323  3002               	movlw	2
  2556  0324  0279               	subwf	___xxtofl@exp,w
  2557  0325  1803               	skipnc
  2558  0326  2B28               	goto	u2781
  2559  0327  2B29               	goto	u2780
  2560  0328                     u2781:
  2561  0328  2B14               	goto	l1933
  2562  0329                     u2780:
  2563  0329                     l735:
  2564  0329  1879               	btfsc	___xxtofl@exp,0
  2565  032A  2B2C               	goto	u2791
  2566  032B  2B2D               	goto	u2790
  2567  032C                     u2791:
  2568  032C  2B35               	goto	l736
  2569  032D                     u2790:
  2570  032D                     l1939:
  2571  032D  30FF               	movlw	255
  2572  032E  05FA               	andwf	___xxtofl@arg,f
  2573  032F  30FF               	movlw	255
  2574  0330  05FB               	andwf	___xxtofl@arg+1,f
  2575  0331  307F               	movlw	127
  2576  0332  05FC               	andwf	___xxtofl@arg+2,f
  2577  0333  30FF               	movlw	255
  2578  0334  05FD               	andwf	___xxtofl@arg+3,f
  2579  0335                     l736:
  2580  0335  1003               	clrc
  2581  0336  0CF9               	rrf	___xxtofl@exp,f
  2582  0337                     l1941:
  2583  0337  0879               	movf	___xxtofl@exp,w
  2584  0338  00F4               	movwf	??___xxtofl
  2585  0339  01F5               	clrf	??___xxtofl+1
  2586  033A  01F6               	clrf	??___xxtofl+2
  2587  033B  01F7               	clrf	??___xxtofl+3
  2588  033C  3018               	movlw	24
  2589  033D                     u2805:
  2590  033D  1003               	clrc
  2591  033E  0DF4               	rlf	??___xxtofl,f
  2592  033F  0DF5               	rlf	??___xxtofl+1,f
  2593  0340  0DF6               	rlf	??___xxtofl+2,f
  2594  0341  0DF7               	rlf	??___xxtofl+3,f
  2595  0342                     u2800:
  2596  0342  3EFF               	addlw	-1
  2597  0343  1D03               	skipz
  2598  0344  2B3D               	goto	u2805
  2599  0345  0874               	movf	??___xxtofl,w
  2600  0346  04FA               	iorwf	___xxtofl@arg,f
  2601  0347  0875               	movf	??___xxtofl+1,w
  2602  0348  04FB               	iorwf	___xxtofl@arg+1,f
  2603  0349  0876               	movf	??___xxtofl+2,w
  2604  034A  04FC               	iorwf	___xxtofl@arg+2,f
  2605  034B  0877               	movf	??___xxtofl+3,w
  2606  034C  04FD               	iorwf	___xxtofl@arg+3,f
  2607  034D                     l1943:
  2608  034D  0878               	movf	___xxtofl@sign,w
  2609  034E  1903               	btfsc	3,2
  2610  034F  2B51               	goto	u2811
  2611  0350  2B52               	goto	u2810
  2612  0351                     u2811:
  2613  0351  2B57               	goto	l1949
  2614  0352                     u2810:
  2615  0352                     l1945:
  2616  0352  1FF3               	btfss	___xxtofl@val+3,7
  2617  0353  2B55               	goto	u2821
  2618  0354  2B56               	goto	u2820
  2619  0355                     u2821:
  2620  0355  2B57               	goto	l1949
  2621  0356                     u2820:
  2622  0356                     l1947:
  2623  0356  17FD               	bsf	___xxtofl@arg+3,7
  2624  0357                     l1949:
  2625  0357  087D               	movf	___xxtofl@arg+3,w
  2626  0358  00F3               	movwf	?___xxtofl+3
  2627  0359  087C               	movf	___xxtofl@arg+2,w
  2628  035A  00F2               	movwf	?___xxtofl+2
  2629  035B  087B               	movf	___xxtofl@arg+1,w
  2630  035C  00F1               	movwf	?___xxtofl+1
  2631  035D  087A               	movf	___xxtofl@arg,w
  2632  035E  00F0               	movwf	?___xxtofl
  2633  035F                     l724:
  2634  035F  0008               	return
  2635  0360                     __end_of___xxtofl:
  2636                           
  2637                           	psect	text11
  2638  0D89                     __ptext11:	
  2639 ;; *************** function ___wmul *****************
  2640 ;; Defined at:
  2641 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul16.c"
  2642 ;; Parameters:    Size  Location     Type
  2643 ;;  multiplier      2    0[COMMON] unsigned int 
  2644 ;;  multiplicand    2    2[COMMON] unsigned int 
  2645 ;; Auto vars:     Size  Location     Type
  2646 ;;  product         2    4[COMMON] unsigned int 
  2647 ;; Return value:  Size  Location     Type
  2648 ;;                  2    0[COMMON] unsigned int 
  2649 ;; Registers used:
  2650 ;;		wreg, status,2, status,0
  2651 ;; Tracked objects:
  2652 ;;		On entry : 0/0
  2653 ;;		On exit  : 0/0
  2654 ;;		Unchanged: 0/0
  2655 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2656 ;;      Params:         4       0       0       0       0
  2657 ;;      Locals:         2       0       0       0       0
  2658 ;;      Temps:          0       0       0       0       0
  2659 ;;      Totals:         6       0       0       0       0
  2660 ;;Total ram usage:        6 bytes
  2661 ;; Hardware stack levels used:    1
  2662 ;; This function calls:
  2663 ;;		Nothing
  2664 ;; This function is called by:
  2665 ;;		_adcToString
  2666 ;; This function uses a non-reentrant model
  2667 ;;
  2668                           
  2669                           
  2670                           ;psect for function ___wmul
  2671  0D89                     ___wmul:
  2672  0D89                     l1551:	
  2673                           ;incstack = 0
  2674                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  2675                           
  2676  0D89  01F4               	clrf	___wmul@product
  2677  0D8A  01F5               	clrf	___wmul@product+1
  2678  0D8B                     l1553:
  2679  0D8B  1C70               	btfss	___wmul@multiplier,0
  2680  0D8C  2D8E               	goto	u1771
  2681  0D8D  2D8F               	goto	u1770
  2682  0D8E                     u1771:
  2683  0D8E  2D95               	goto	l289
  2684  0D8F                     u1770:
  2685  0D8F                     l1555:
  2686  0D8F  0872               	movf	___wmul@multiplicand,w
  2687  0D90  07F4               	addwf	___wmul@product,f
  2688  0D91  1803               	skipnc
  2689  0D92  0AF5               	incf	___wmul@product+1,f
  2690  0D93  0873               	movf	___wmul@multiplicand+1,w
  2691  0D94  07F5               	addwf	___wmul@product+1,f
  2692  0D95                     l289:
  2693  0D95  3001               	movlw	1
  2694  0D96                     u1785:
  2695  0D96  1003               	clrc
  2696  0D97  0DF2               	rlf	___wmul@multiplicand,f
  2697  0D98  0DF3               	rlf	___wmul@multiplicand+1,f
  2698  0D99  3EFF               	addlw	-1
  2699  0D9A  1D03               	skipz
  2700  0D9B  2D96               	goto	u1785
  2701  0D9C                     l1557:
  2702  0D9C  3001               	movlw	1
  2703  0D9D                     u1795:
  2704  0D9D  1003               	clrc
  2705  0D9E  0CF1               	rrf	___wmul@multiplier+1,f
  2706  0D9F  0CF0               	rrf	___wmul@multiplier,f
  2707  0DA0  3EFF               	addlw	-1
  2708  0DA1  1D03               	skipz
  2709  0DA2  2D9D               	goto	u1795
  2710  0DA3                     l1559:
  2711  0DA3  0870               	movf	___wmul@multiplier,w
  2712  0DA4  0471               	iorwf	___wmul@multiplier+1,w
  2713  0DA5  1D03               	btfss	3,2
  2714  0DA6  2DA8               	goto	u1801
  2715  0DA7  2DA9               	goto	u1800
  2716  0DA8                     u1801:
  2717  0DA8  2D8B               	goto	l1553
  2718  0DA9                     u1800:
  2719  0DA9                     l1561:
  2720  0DA9  0875               	movf	___wmul@product+1,w
  2721  0DAA  00F1               	movwf	?___wmul+1
  2722  0DAB  0874               	movf	___wmul@product,w
  2723  0DAC  00F0               	movwf	?___wmul
  2724  0DAD                     l291:
  2725  0DAD  0008               	return
  2726  0DAE                     __end_of___wmul:
  2727                           
  2728                           	psect	text12
  2729  0DDE                     __ptext12:	
  2730 ;; *************** function ___lwmod *****************
  2731 ;; Defined at:
  2732 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwmod.c"
  2733 ;; Parameters:    Size  Location     Type
  2734 ;;  divisor         2    0[COMMON] unsigned int 
  2735 ;;  dividend        2    2[COMMON] unsigned int 
  2736 ;; Auto vars:     Size  Location     Type
  2737 ;;  counter         1    5[COMMON] unsigned char 
  2738 ;; Return value:  Size  Location     Type
  2739 ;;                  2    0[COMMON] unsigned int 
  2740 ;; Registers used:
  2741 ;;		wreg, status,2, status,0
  2742 ;; Tracked objects:
  2743 ;;		On entry : 0/0
  2744 ;;		On exit  : 0/0
  2745 ;;		Unchanged: 0/0
  2746 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2747 ;;      Params:         4       0       0       0       0
  2748 ;;      Locals:         1       0       0       0       0
  2749 ;;      Temps:          1       0       0       0       0
  2750 ;;      Totals:         6       0       0       0       0
  2751 ;;Total ram usage:        6 bytes
  2752 ;; Hardware stack levels used:    1
  2753 ;; This function calls:
  2754 ;;		Nothing
  2755 ;; This function is called by:
  2756 ;;		_adcToString
  2757 ;; This function uses a non-reentrant model
  2758 ;;
  2759                           
  2760                           
  2761                           ;psect for function ___lwmod
  2762  0DDE                     ___lwmod:
  2763  0DDE                     l1747:	
  2764                           ;incstack = 0
  2765                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  2766                           
  2767  0DDE  0870               	movf	___lwmod@divisor,w
  2768  0DDF  0471               	iorwf	___lwmod@divisor+1,w
  2769  0DE0  1903               	btfsc	3,2
  2770  0DE1  2DE3               	goto	u2261
  2771  0DE2  2DE4               	goto	u2260
  2772  0DE3                     u2261:
  2773  0DE3  2E13               	goto	l1765
  2774  0DE4                     u2260:
  2775  0DE4                     l1749:
  2776  0DE4  01F5               	clrf	___lwmod@counter
  2777  0DE5  0AF5               	incf	___lwmod@counter,f
  2778  0DE6  2DF2               	goto	l1755
  2779  0DE7                     l1751:
  2780  0DE7  3001               	movlw	1
  2781  0DE8                     u2275:
  2782  0DE8  1003               	clrc
  2783  0DE9  0DF0               	rlf	___lwmod@divisor,f
  2784  0DEA  0DF1               	rlf	___lwmod@divisor+1,f
  2785  0DEB  3EFF               	addlw	-1
  2786  0DEC  1D03               	skipz
  2787  0DED  2DE8               	goto	u2275
  2788  0DEE                     l1753:
  2789  0DEE  3001               	movlw	1
  2790  0DEF  00F4               	movwf	??___lwmod
  2791  0DF0  0874               	movf	??___lwmod,w
  2792  0DF1  07F5               	addwf	___lwmod@counter,f
  2793  0DF2                     l1755:
  2794  0DF2  1FF1               	btfss	___lwmod@divisor+1,7
  2795  0DF3  2DF5               	goto	u2281
  2796  0DF4  2DF6               	goto	u2280
  2797  0DF5                     u2281:
  2798  0DF5  2DE7               	goto	l1751
  2799  0DF6                     u2280:
  2800  0DF6                     l1757:
  2801  0DF6  0871               	movf	___lwmod@divisor+1,w
  2802  0DF7  0273               	subwf	___lwmod@dividend+1,w
  2803  0DF8  1D03               	skipz
  2804  0DF9  2DFC               	goto	u2295
  2805  0DFA  0870               	movf	___lwmod@divisor,w
  2806  0DFB  0272               	subwf	___lwmod@dividend,w
  2807  0DFC                     u2295:
  2808  0DFC  1C03               	skipc
  2809  0DFD  2DFF               	goto	u2291
  2810  0DFE  2E00               	goto	u2290
  2811  0DFF                     u2291:
  2812  0DFF  2E06               	goto	l1761
  2813  0E00                     u2290:
  2814  0E00                     l1759:
  2815  0E00  0870               	movf	___lwmod@divisor,w
  2816  0E01  02F2               	subwf	___lwmod@dividend,f
  2817  0E02  0871               	movf	___lwmod@divisor+1,w
  2818  0E03  1C03               	skipc
  2819  0E04  03F3               	decf	___lwmod@dividend+1,f
  2820  0E05  02F3               	subwf	___lwmod@dividend+1,f
  2821  0E06                     l1761:
  2822  0E06  3001               	movlw	1
  2823  0E07                     u2305:
  2824  0E07  1003               	clrc
  2825  0E08  0CF1               	rrf	___lwmod@divisor+1,f
  2826  0E09  0CF0               	rrf	___lwmod@divisor,f
  2827  0E0A  3EFF               	addlw	-1
  2828  0E0B  1D03               	skipz
  2829  0E0C  2E07               	goto	u2305
  2830  0E0D                     l1763:
  2831  0E0D  3001               	movlw	1
  2832  0E0E  02F5               	subwf	___lwmod@counter,f
  2833  0E0F  1D03               	btfss	3,2
  2834  0E10  2E12               	goto	u2311
  2835  0E11  2E13               	goto	u2310
  2836  0E12                     u2311:
  2837  0E12  2DF6               	goto	l1757
  2838  0E13                     u2310:
  2839  0E13                     l1765:
  2840  0E13  0873               	movf	___lwmod@dividend+1,w
  2841  0E14  00F1               	movwf	?___lwmod+1
  2842  0E15  0872               	movf	___lwmod@dividend,w
  2843  0E16  00F0               	movwf	?___lwmod
  2844  0E17                     l571:
  2845  0E17  0008               	return
  2846  0E18                     __end_of___lwmod:
  2847                           
  2848                           	psect	text13
  2849  0E5A                     __ptext13:	
  2850 ;; *************** function ___lwdiv *****************
  2851 ;; Defined at:
  2852 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwdiv.c"
  2853 ;; Parameters:    Size  Location     Type
  2854 ;;  divisor         2    0[COMMON] unsigned int 
  2855 ;;  dividend        2    2[COMMON] unsigned int 
  2856 ;; Auto vars:     Size  Location     Type
  2857 ;;  quotient        2    5[COMMON] unsigned int 
  2858 ;;  counter         1    7[COMMON] unsigned char 
  2859 ;; Return value:  Size  Location     Type
  2860 ;;                  2    0[COMMON] unsigned int 
  2861 ;; Registers used:
  2862 ;;		wreg, status,2, status,0
  2863 ;; Tracked objects:
  2864 ;;		On entry : 0/0
  2865 ;;		On exit  : 0/0
  2866 ;;		Unchanged: 0/0
  2867 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2868 ;;      Params:         4       0       0       0       0
  2869 ;;      Locals:         3       0       0       0       0
  2870 ;;      Temps:          1       0       0       0       0
  2871 ;;      Totals:         8       0       0       0       0
  2872 ;;Total ram usage:        8 bytes
  2873 ;; Hardware stack levels used:    1
  2874 ;; This function calls:
  2875 ;;		Nothing
  2876 ;; This function is called by:
  2877 ;;		_adcToString
  2878 ;; This function uses a non-reentrant model
  2879 ;;
  2880                           
  2881                           
  2882                           ;psect for function ___lwdiv
  2883  0E5A                     ___lwdiv:
  2884  0E5A                     l1721:	
  2885                           ;incstack = 0
  2886                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  2887                           
  2888  0E5A  01F5               	clrf	___lwdiv@quotient
  2889  0E5B  01F6               	clrf	___lwdiv@quotient+1
  2890  0E5C                     l1723:
  2891  0E5C  0870               	movf	___lwdiv@divisor,w
  2892  0E5D  0471               	iorwf	___lwdiv@divisor+1,w
  2893  0E5E  1903               	btfsc	3,2
  2894  0E5F  2E61               	goto	u2191
  2895  0E60  2E62               	goto	u2190
  2896  0E61                     u2191:
  2897  0E61  2E99               	goto	l1743
  2898  0E62                     u2190:
  2899  0E62                     l1725:
  2900  0E62  01F7               	clrf	___lwdiv@counter
  2901  0E63  0AF7               	incf	___lwdiv@counter,f
  2902  0E64  2E70               	goto	l1731
  2903  0E65                     l1727:
  2904  0E65  3001               	movlw	1
  2905  0E66                     u2205:
  2906  0E66  1003               	clrc
  2907  0E67  0DF0               	rlf	___lwdiv@divisor,f
  2908  0E68  0DF1               	rlf	___lwdiv@divisor+1,f
  2909  0E69  3EFF               	addlw	-1
  2910  0E6A  1D03               	skipz
  2911  0E6B  2E66               	goto	u2205
  2912  0E6C                     l1729:
  2913  0E6C  3001               	movlw	1
  2914  0E6D  00F4               	movwf	??___lwdiv
  2915  0E6E  0874               	movf	??___lwdiv,w
  2916  0E6F  07F7               	addwf	___lwdiv@counter,f
  2917  0E70                     l1731:
  2918  0E70  1FF1               	btfss	___lwdiv@divisor+1,7
  2919  0E71  2E73               	goto	u2211
  2920  0E72  2E74               	goto	u2210
  2921  0E73                     u2211:
  2922  0E73  2E65               	goto	l1727
  2923  0E74                     u2210:
  2924  0E74                     l1733:
  2925  0E74  3001               	movlw	1
  2926  0E75                     u2225:
  2927  0E75  1003               	clrc
  2928  0E76  0DF5               	rlf	___lwdiv@quotient,f
  2929  0E77  0DF6               	rlf	___lwdiv@quotient+1,f
  2930  0E78  3EFF               	addlw	-1
  2931  0E79  1D03               	skipz
  2932  0E7A  2E75               	goto	u2225
  2933  0E7B  0871               	movf	___lwdiv@divisor+1,w
  2934  0E7C  0273               	subwf	___lwdiv@dividend+1,w
  2935  0E7D  1D03               	skipz
  2936  0E7E  2E81               	goto	u2235
  2937  0E7F  0870               	movf	___lwdiv@divisor,w
  2938  0E80  0272               	subwf	___lwdiv@dividend,w
  2939  0E81                     u2235:
  2940  0E81  1C03               	skipc
  2941  0E82  2E84               	goto	u2231
  2942  0E83  2E85               	goto	u2230
  2943  0E84                     u2231:
  2944  0E84  2E8C               	goto	l1739
  2945  0E85                     u2230:
  2946  0E85                     l1735:
  2947  0E85  0870               	movf	___lwdiv@divisor,w
  2948  0E86  02F2               	subwf	___lwdiv@dividend,f
  2949  0E87  0871               	movf	___lwdiv@divisor+1,w
  2950  0E88  1C03               	skipc
  2951  0E89  03F3               	decf	___lwdiv@dividend+1,f
  2952  0E8A  02F3               	subwf	___lwdiv@dividend+1,f
  2953  0E8B                     l1737:
  2954  0E8B  1475               	bsf	___lwdiv@quotient,0
  2955  0E8C                     l1739:
  2956  0E8C  3001               	movlw	1
  2957  0E8D                     u2245:
  2958  0E8D  1003               	clrc
  2959  0E8E  0CF1               	rrf	___lwdiv@divisor+1,f
  2960  0E8F  0CF0               	rrf	___lwdiv@divisor,f
  2961  0E90  3EFF               	addlw	-1
  2962  0E91  1D03               	skipz
  2963  0E92  2E8D               	goto	u2245
  2964  0E93                     l1741:
  2965  0E93  3001               	movlw	1
  2966  0E94  02F7               	subwf	___lwdiv@counter,f
  2967  0E95  1D03               	btfss	3,2
  2968  0E96  2E98               	goto	u2251
  2969  0E97  2E99               	goto	u2250
  2970  0E98                     u2251:
  2971  0E98  2E74               	goto	l1733
  2972  0E99                     u2250:
  2973  0E99                     l1743:
  2974  0E99  0876               	movf	___lwdiv@quotient+1,w
  2975  0E9A  00F1               	movwf	?___lwdiv+1
  2976  0E9B  0875               	movf	___lwdiv@quotient,w
  2977  0E9C  00F0               	movwf	?___lwdiv
  2978  0E9D                     l561:
  2979  0E9D  0008               	return
  2980  0E9E                     __end_of___lwdiv:
  2981                           
  2982                           	psect	text14
  2983  0102                     __ptext14:	
  2984 ;; *************** function ___fltol *****************
  2985 ;; Defined at:
  2986 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\fltol.c"
  2987 ;; Parameters:    Size  Location     Type
  2988 ;;  f1              4   26[BANK0 ] unsigned int 
  2989 ;; Auto vars:     Size  Location     Type
  2990 ;;  exp1            1   36[BANK0 ] unsigned char 
  2991 ;;  sign1           1   35[BANK0 ] unsigned char 
  2992 ;; Return value:  Size  Location     Type
  2993 ;;                  4   26[BANK0 ] long 
  2994 ;; Registers used:
  2995 ;;		wreg, status,2, status,0
  2996 ;; Tracked objects:
  2997 ;;		On entry : 0/0
  2998 ;;		On exit  : 0/0
  2999 ;;		Unchanged: 0/0
  3000 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3001 ;;      Params:         0       4       0       0       0
  3002 ;;      Locals:         0       2       0       0       0
  3003 ;;      Temps:          0       5       0       0       0
  3004 ;;      Totals:         0      11       0       0       0
  3005 ;;Total ram usage:       11 bytes
  3006 ;; Hardware stack levels used:    1
  3007 ;; This function calls:
  3008 ;;		Nothing
  3009 ;; This function is called by:
  3010 ;;		_adcToString
  3011 ;; This function uses a non-reentrant model
  3012 ;;
  3013                           
  3014                           
  3015                           ;psect for function ___fltol
  3016  0102                     ___fltol:
  3017  0102                     l1685:	
  3018                           ;incstack = 0
  3019                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  3020                           
  3021  0102  1003               	clrc
  3022  0103  1283               	bcf	3,5	;RP0=0, select bank0
  3023  0104  1303               	bcf	3,6	;RP1=0, select bank0
  3024  0105  0D3C               	rlf	___fltol@f1+2,w
  3025  0106  0D3D               	rlf	___fltol@f1+3,w
  3026  0107  00BE               	movwf	??___fltol
  3027  0108  083E               	movf	??___fltol,w
  3028  0109  00C4               	movwf	___fltol@exp1
  3029  010A  0844               	movf	___fltol@exp1,w
  3030  010B  1D03               	btfss	3,2
  3031  010C  290E               	goto	u2091
  3032  010D  290F               	goto	u2090
  3033  010E                     u2091:
  3034  010E  2918               	goto	l1691
  3035  010F                     u2090:
  3036  010F                     l1687:
  3037  010F  3000               	movlw	0
  3038  0110  00BD               	movwf	?___fltol+3
  3039  0111  3000               	movlw	0
  3040  0112  00BC               	movwf	?___fltol+2
  3041  0113  3000               	movlw	0
  3042  0114  00BB               	movwf	?___fltol+1
  3043  0115  3000               	movlw	0
  3044  0116  00BA               	movwf	?___fltol
  3045  0117  297D               	goto	l475
  3046  0118                     l1691:
  3047  0118  083A               	movf	___fltol@f1,w
  3048  0119  00BE               	movwf	??___fltol
  3049  011A  083B               	movf	___fltol@f1+1,w
  3050  011B  00BF               	movwf	??___fltol+1
  3051  011C  083C               	movf	___fltol@f1+2,w
  3052  011D  00C0               	movwf	??___fltol+2
  3053  011E  083D               	movf	___fltol@f1+3,w
  3054  011F  00C1               	movwf	??___fltol+3
  3055  0120  301F               	movlw	31
  3056  0121                     u2105:
  3057  0121  1003               	clrc
  3058  0122  0CC1               	rrf	??___fltol+3,f
  3059  0123  0CC0               	rrf	??___fltol+2,f
  3060  0124  0CBF               	rrf	??___fltol+1,f
  3061  0125  0CBE               	rrf	??___fltol,f
  3062  0126                     u2100:
  3063  0126  3EFF               	addlw	-1
  3064  0127  1D03               	skipz
  3065  0128  2921               	goto	u2105
  3066  0129  083E               	movf	??___fltol,w
  3067  012A  00C2               	movwf	??___fltol+4
  3068  012B  0842               	movf	??___fltol+4,w
  3069  012C  00C3               	movwf	___fltol@sign1
  3070  012D                     l1693:
  3071  012D  17BC               	bsf	___fltol@f1+2,7
  3072  012E                     l1695:
  3073  012E  30FF               	movlw	255
  3074  012F  05BA               	andwf	___fltol@f1,f
  3075  0130  30FF               	movlw	255
  3076  0131  05BB               	andwf	___fltol@f1+1,f
  3077  0132  30FF               	movlw	255
  3078  0133  05BC               	andwf	___fltol@f1+2,f
  3079  0134  3000               	movlw	0
  3080  0135  05BD               	andwf	___fltol@f1+3,f
  3081  0136                     l1697:
  3082  0136  3096               	movlw	150
  3083  0137  02C4               	subwf	___fltol@exp1,f
  3084  0138                     l1699:
  3085  0138  1FC4               	btfss	___fltol@exp1,7
  3086  0139  293B               	goto	u2111
  3087  013A  293C               	goto	u2110
  3088  013B                     u2111:
  3089  013B  2956               	goto	l1709
  3090  013C                     u2110:
  3091  013C                     l1701:
  3092  013C  0844               	movf	___fltol@exp1,w
  3093  013D  3A80               	xorlw	128
  3094  013E  3E97               	addlw	151
  3095  013F  1803               	skipnc
  3096  0140  2942               	goto	u2121
  3097  0141  2943               	goto	u2120
  3098  0142                     u2121:
  3099  0142  2944               	goto	l1707
  3100  0143                     u2120:
  3101  0143  290F               	goto	l1687
  3102  0144                     l1707:
  3103  0144  3001               	movlw	1
  3104  0145                     u2135:
  3105  0145  1003               	clrc
  3106  0146  0CBD               	rrf	___fltol@f1+3,f
  3107  0147  0CBC               	rrf	___fltol@f1+2,f
  3108  0148  0CBB               	rrf	___fltol@f1+1,f
  3109  0149  0CBA               	rrf	___fltol@f1,f
  3110  014A  3EFF               	addlw	-1
  3111  014B  1D03               	skipz
  3112  014C  2945               	goto	u2135
  3113  014D  3001               	movlw	1
  3114  014E  00BE               	movwf	??___fltol
  3115  014F  083E               	movf	??___fltol,w
  3116  0150  07C4               	addwf	___fltol@exp1,f
  3117  0151  1D03               	btfss	3,2
  3118  0152  2954               	goto	u2141
  3119  0153  2955               	goto	u2140
  3120  0154                     u2141:
  3121  0154  2944               	goto	l1707
  3122  0155                     u2140:
  3123  0155  296D               	goto	l1717
  3124  0156                     l1709:
  3125  0156  3020               	movlw	32
  3126  0157  0244               	subwf	___fltol@exp1,w
  3127  0158  1C03               	skipc
  3128  0159  295B               	goto	u2151
  3129  015A  295C               	goto	u2150
  3130  015B                     u2151:
  3131  015B  2968               	goto	l482
  3132  015C                     u2150:
  3133  015C  290F               	goto	l1687
  3134  015D                     l1715:
  3135  015D  3001               	movlw	1
  3136  015E  00BE               	movwf	??___fltol
  3137  015F                     u2165:
  3138  015F  1003               	clrc
  3139  0160  0DBA               	rlf	___fltol@f1,f
  3140  0161  0DBB               	rlf	___fltol@f1+1,f
  3141  0162  0DBC               	rlf	___fltol@f1+2,f
  3142  0163  0DBD               	rlf	___fltol@f1+3,f
  3143  0164  0BBE               	decfsz	??___fltol,f
  3144  0165  295F               	goto	u2165
  3145  0166  3001               	movlw	1
  3146  0167  02C4               	subwf	___fltol@exp1,f
  3147  0168                     l482:
  3148  0168  0844               	movf	___fltol@exp1,w
  3149  0169  1D03               	btfss	3,2
  3150  016A  296C               	goto	u2171
  3151  016B  296D               	goto	u2170
  3152  016C                     u2171:
  3153  016C  295D               	goto	l1715
  3154  016D                     u2170:
  3155  016D                     l1717:
  3156  016D  0843               	movf	___fltol@sign1,w
  3157  016E  1903               	btfsc	3,2
  3158  016F  2971               	goto	u2181
  3159  0170  2972               	goto	u2180
  3160  0171                     u2181:
  3161  0171  297D               	goto	l485
  3162  0172                     u2180:
  3163  0172                     l1719:
  3164  0172  09BA               	comf	___fltol@f1,f
  3165  0173  09BB               	comf	___fltol@f1+1,f
  3166  0174  09BC               	comf	___fltol@f1+2,f
  3167  0175  09BD               	comf	___fltol@f1+3,f
  3168  0176  0ABA               	incf	___fltol@f1,f
  3169  0177  1903               	skipnz
  3170  0178  0ABB               	incf	___fltol@f1+1,f
  3171  0179  1903               	skipnz
  3172  017A  0ABC               	incf	___fltol@f1+2,f
  3173  017B  1903               	skipnz
  3174  017C  0ABD               	incf	___fltol@f1+3,f
  3175  017D                     l485:
  3176  017D                     l475:
  3177  017D  0008               	return
  3178  017E                     __end_of___fltol:
  3179                           
  3180                           	psect	text15
  3181  0493                     __ptext15:	
  3182 ;; *************** function ___flmul *****************
  3183 ;; Defined at:
  3184 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcmul.c"
  3185 ;; Parameters:    Size  Location     Type
  3186 ;;  b               4    0[BANK0 ] long 
  3187 ;;  a               4    4[BANK0 ] long 
  3188 ;; Auto vars:     Size  Location     Type
  3189 ;;  prod            4   20[BANK0 ] struct .
  3190 ;;  grs             4   14[BANK0 ] unsigned long 
  3191 ;;  temp            2   24[BANK0 ] struct .
  3192 ;;  bexp            1   19[BANK0 ] unsigned char 
  3193 ;;  aexp            1   18[BANK0 ] unsigned char 
  3194 ;;  sign            1   13[BANK0 ] unsigned char 
  3195 ;; Return value:  Size  Location     Type
  3196 ;;                  4    0[BANK0 ] unsigned char 
  3197 ;; Registers used:
  3198 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  3199 ;; Tracked objects:
  3200 ;;		On entry : 0/0
  3201 ;;		On exit  : 0/0
  3202 ;;		Unchanged: 0/0
  3203 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3204 ;;      Params:         0       8       0       0       0
  3205 ;;      Locals:         0      13       0       0       0
  3206 ;;      Temps:          0       5       0       0       0
  3207 ;;      Totals:         0      26       0       0       0
  3208 ;;Total ram usage:       26 bytes
  3209 ;; Hardware stack levels used:    1
  3210 ;; Hardware stack levels required when called:    1
  3211 ;; This function calls:
  3212 ;;		__Umul8_16
  3213 ;; This function is called by:
  3214 ;;		_adcToString
  3215 ;; This function uses a non-reentrant model
  3216 ;;
  3217                           
  3218                           
  3219                           ;psect for function ___flmul
  3220  0493                     ___flmul:
  3221  0493                     l1769:	
  3222                           ;incstack = 0
  3223                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  3224                           
  3225  0493  1283               	bcf	3,5	;RP0=0, select bank0
  3226  0494  1303               	bcf	3,6	;RP1=0, select bank0
  3227  0495  0823               	movf	___flmul@b+3,w
  3228  0496  3980               	andlw	128
  3229  0497  00A8               	movwf	??___flmul
  3230  0498  0828               	movf	??___flmul,w
  3231  0499  00AD               	movwf	___flmul@sign
  3232  049A                     l1771:
  3233  049A  0823               	movf	___flmul@b+3,w
  3234  049B  00A8               	movwf	??___flmul
  3235  049C  0728               	addwf	??___flmul,w
  3236  049D  00A9               	movwf	??___flmul+1
  3237  049E  0829               	movf	??___flmul+1,w
  3238  049F  00B3               	movwf	___flmul@bexp
  3239  04A0                     l1773:
  3240  04A0  1FA2               	btfss	___flmul@b+2,7
  3241  04A1  2CA3               	goto	u2321
  3242  04A2  2CA4               	goto	u2320
  3243  04A3                     u2321:
  3244  04A3  2CA5               	goto	l1777
  3245  04A4                     u2320:
  3246  04A4                     l1775:
  3247  04A4  1433               	bsf	___flmul@bexp,0
  3248  04A5                     l1777:
  3249  04A5  0833               	movf	___flmul@bexp,w
  3250  04A6  1903               	btfsc	3,2
  3251  04A7  2CA9               	goto	u2331
  3252  04A8  2CAA               	goto	u2330
  3253  04A9                     u2331:
  3254  04A9  2CB9               	goto	l1785
  3255  04AA                     u2330:
  3256  04AA                     l1779:
  3257  04AA  0A33               	incf	___flmul@bexp,w
  3258  04AB  1D03               	btfss	3,2
  3259  04AC  2CAE               	goto	u2341
  3260  04AD  2CAF               	goto	u2340
  3261  04AE                     u2341:
  3262  04AE  2CB7               	goto	l1783
  3263  04AF                     u2340:
  3264  04AF                     l1781:
  3265  04AF  3000               	movlw	0
  3266  04B0  00A3               	movwf	___flmul@b+3
  3267  04B1  3000               	movlw	0
  3268  04B2  00A2               	movwf	___flmul@b+2
  3269  04B3  3000               	movlw	0
  3270  04B4  00A1               	movwf	___flmul@b+1
  3271  04B5  3000               	movlw	0
  3272  04B6  00A0               	movwf	___flmul@b
  3273  04B7                     l1783:
  3274  04B7  17A2               	bsf	___flmul@b+2,7
  3275  04B8  2CC1               	goto	l1787
  3276  04B9                     l1785:
  3277  04B9  3000               	movlw	0
  3278  04BA  00A3               	movwf	___flmul@b+3
  3279  04BB  3000               	movlw	0
  3280  04BC  00A2               	movwf	___flmul@b+2
  3281  04BD  3000               	movlw	0
  3282  04BE  00A1               	movwf	___flmul@b+1
  3283  04BF  3000               	movlw	0
  3284  04C0  00A0               	movwf	___flmul@b
  3285  04C1                     l1787:
  3286  04C1  0827               	movf	___flmul@a+3,w
  3287  04C2  3980               	andlw	128
  3288  04C3  00A8               	movwf	??___flmul
  3289  04C4  0828               	movf	??___flmul,w
  3290  04C5  06AD               	xorwf	___flmul@sign,f
  3291  04C6                     l1789:
  3292  04C6  0827               	movf	___flmul@a+3,w
  3293  04C7  00A8               	movwf	??___flmul
  3294  04C8  0728               	addwf	??___flmul,w
  3295  04C9  00A9               	movwf	??___flmul+1
  3296  04CA  0829               	movf	??___flmul+1,w
  3297  04CB  00B2               	movwf	___flmul@aexp
  3298  04CC                     l1791:
  3299  04CC  1FA6               	btfss	___flmul@a+2,7
  3300  04CD  2CCF               	goto	u2351
  3301  04CE  2CD0               	goto	u2350
  3302  04CF                     u2351:
  3303  04CF  2CD1               	goto	l1795
  3304  04D0                     u2350:
  3305  04D0                     l1793:
  3306  04D0  1432               	bsf	___flmul@aexp,0
  3307  04D1                     l1795:
  3308  04D1  0832               	movf	___flmul@aexp,w
  3309  04D2  1903               	btfsc	3,2
  3310  04D3  2CD5               	goto	u2361
  3311  04D4  2CD6               	goto	u2360
  3312  04D5                     u2361:
  3313  04D5  2CE5               	goto	l1803
  3314  04D6                     u2360:
  3315  04D6                     l1797:
  3316  04D6  0A32               	incf	___flmul@aexp,w
  3317  04D7  1D03               	btfss	3,2
  3318  04D8  2CDA               	goto	u2371
  3319  04D9  2CDB               	goto	u2370
  3320  04DA                     u2371:
  3321  04DA  2CE3               	goto	l1801
  3322  04DB                     u2370:
  3323  04DB                     l1799:
  3324  04DB  3000               	movlw	0
  3325  04DC  00A7               	movwf	___flmul@a+3
  3326  04DD  3000               	movlw	0
  3327  04DE  00A6               	movwf	___flmul@a+2
  3328  04DF  3000               	movlw	0
  3329  04E0  00A5               	movwf	___flmul@a+1
  3330  04E1  3000               	movlw	0
  3331  04E2  00A4               	movwf	___flmul@a
  3332  04E3                     l1801:
  3333  04E3  17A6               	bsf	___flmul@a+2,7
  3334  04E4  2CED               	goto	l1805
  3335  04E5                     l1803:
  3336  04E5  3000               	movlw	0
  3337  04E6  00A7               	movwf	___flmul@a+3
  3338  04E7  3000               	movlw	0
  3339  04E8  00A6               	movwf	___flmul@a+2
  3340  04E9  3000               	movlw	0
  3341  04EA  00A5               	movwf	___flmul@a+1
  3342  04EB  3000               	movlw	0
  3343  04EC  00A4               	movwf	___flmul@a
  3344  04ED                     l1805:
  3345  04ED  0832               	movf	___flmul@aexp,w
  3346  04EE  1903               	btfsc	3,2
  3347  04EF  2CF1               	goto	u2381
  3348  04F0  2CF2               	goto	u2380
  3349  04F1                     u2381:
  3350  04F1  2CF7               	goto	l1809
  3351  04F2                     u2380:
  3352  04F2                     l1807:
  3353  04F2  0833               	movf	___flmul@bexp,w
  3354  04F3  1D03               	btfss	3,2
  3355  04F4  2CF6               	goto	u2391
  3356  04F5  2CF7               	goto	u2390
  3357  04F6                     u2391:
  3358  04F6  2D00               	goto	l1813
  3359  04F7                     u2390:
  3360  04F7                     l1809:
  3361  04F7  3000               	movlw	0
  3362  04F8  00A3               	movwf	?___flmul+3
  3363  04F9  3000               	movlw	0
  3364  04FA  00A2               	movwf	?___flmul+2
  3365  04FB  3000               	movlw	0
  3366  04FC  00A1               	movwf	?___flmul+1
  3367  04FD  3000               	movlw	0
  3368  04FE  00A0               	movwf	?___flmul
  3369  04FF  2FF3               	goto	l678
  3370  0500                     l1813:
  3371  0500  0820               	movf	___flmul@b,w
  3372  0501  00A8               	movwf	??___flmul
  3373  0502  0828               	movf	??___flmul,w
  3374  0503  00F0               	movwf	__Umul8_16@multiplicand
  3375  0504  0826               	movf	___flmul@a+2,w
  3376  0505  120A  118A  2005  120A  118A  	fcall	__Umul8_16
  3377  050A  0871               	movf	?__Umul8_16+1,w
  3378  050B  1283               	bcf	3,5	;RP0=0, select bank0
  3379  050C  1303               	bcf	3,6	;RP1=0, select bank0
  3380  050D  00B9               	movwf	___flmul@temp+1
  3381  050E  0870               	movf	?__Umul8_16,w
  3382  050F  00B8               	movwf	___flmul@temp
  3383  0510                     l1815:
  3384  0510  0838               	movf	___flmul@temp,w
  3385  0511  00A8               	movwf	??___flmul
  3386  0512  01A9               	clrf	??___flmul+1
  3387  0513  01AA               	clrf	??___flmul+2
  3388  0514  01AB               	clrf	??___flmul+3
  3389  0515  082B               	movf	??___flmul+3,w
  3390  0516  00B1               	movwf	___flmul@grs+3
  3391  0517  082A               	movf	??___flmul+2,w
  3392  0518  00B0               	movwf	___flmul@grs+2
  3393  0519  0829               	movf	??___flmul+1,w
  3394  051A  00AF               	movwf	___flmul@grs+1
  3395  051B  0828               	movf	??___flmul,w
  3396  051C  00AE               	movwf	___flmul@grs
  3397  051D                     l1817:
  3398  051D  0839               	movf	___flmul@temp+1,w
  3399  051E  00A8               	movwf	??___flmul
  3400  051F  01A9               	clrf	??___flmul+1
  3401  0520  01AA               	clrf	??___flmul+2
  3402  0521  01AB               	clrf	??___flmul+3
  3403  0522  082B               	movf	??___flmul+3,w
  3404  0523  00B7               	movwf	___flmul@prod+3
  3405  0524  082A               	movf	??___flmul+2,w
  3406  0525  00B6               	movwf	___flmul@prod+2
  3407  0526  0829               	movf	??___flmul+1,w
  3408  0527  00B5               	movwf	___flmul@prod+1
  3409  0528  0828               	movf	??___flmul,w
  3410  0529  00B4               	movwf	___flmul@prod
  3411  052A  0821               	movf	___flmul@b+1,w
  3412  052B  00A8               	movwf	??___flmul
  3413  052C  0828               	movf	??___flmul,w
  3414  052D  00F0               	movwf	__Umul8_16@multiplicand
  3415  052E  0825               	movf	___flmul@a+1,w
  3416  052F  120A  118A  2005  120A  118A  	fcall	__Umul8_16
  3417  0534  0871               	movf	?__Umul8_16+1,w
  3418  0535  1283               	bcf	3,5	;RP0=0, select bank0
  3419  0536  1303               	bcf	3,6	;RP1=0, select bank0
  3420  0537  00B9               	movwf	___flmul@temp+1
  3421  0538  0870               	movf	?__Umul8_16,w
  3422  0539  00B8               	movwf	___flmul@temp
  3423  053A                     l1819:
  3424  053A  0838               	movf	___flmul@temp,w
  3425  053B  00A8               	movwf	??___flmul
  3426  053C  01A9               	clrf	??___flmul+1
  3427  053D  01AA               	clrf	??___flmul+2
  3428  053E  01AB               	clrf	??___flmul+3
  3429  053F  0828               	movf	??___flmul,w
  3430  0540  07AE               	addwf	___flmul@grs,f
  3431  0541  0829               	movf	??___flmul+1,w
  3432  0542  1103               	clrz
  3433  0543  1803               	skipnc
  3434  0544  3E01               	addlw	1
  3435  0545  1903               	skipnz
  3436  0546  2D48               	goto	u2401
  3437  0547  07AF               	addwf	___flmul@grs+1,f
  3438  0548                     u2401:
  3439  0548  082A               	movf	??___flmul+2,w
  3440  0549  1103               	clrz
  3441  054A  1803               	skipnc
  3442  054B  3E01               	addlw	1
  3443  054C  1903               	skipnz
  3444  054D  2D4F               	goto	u2402
  3445  054E  07B0               	addwf	___flmul@grs+2,f
  3446  054F                     u2402:
  3447  054F  082B               	movf	??___flmul+3,w
  3448  0550  1103               	clrz
  3449  0551  1803               	skipnc
  3450  0552  3E01               	addlw	1
  3451  0553  1903               	skipnz
  3452  0554  2D56               	goto	u2403
  3453  0555  07B1               	addwf	___flmul@grs+3,f
  3454  0556                     u2403:
  3455  0556                     l1821:
  3456  0556  0839               	movf	___flmul@temp+1,w
  3457  0557  00A8               	movwf	??___flmul
  3458  0558  01A9               	clrf	??___flmul+1
  3459  0559  01AA               	clrf	??___flmul+2
  3460  055A  01AB               	clrf	??___flmul+3
  3461  055B  0828               	movf	??___flmul,w
  3462  055C  07B4               	addwf	___flmul@prod,f
  3463  055D  0829               	movf	??___flmul+1,w
  3464  055E  1103               	clrz
  3465  055F  1803               	skipnc
  3466  0560  3E01               	addlw	1
  3467  0561  1903               	skipnz
  3468  0562  2D64               	goto	u2411
  3469  0563  07B5               	addwf	___flmul@prod+1,f
  3470  0564                     u2411:
  3471  0564  082A               	movf	??___flmul+2,w
  3472  0565  1103               	clrz
  3473  0566  1803               	skipnc
  3474  0567  3E01               	addlw	1
  3475  0568  1903               	skipnz
  3476  0569  2D6B               	goto	u2412
  3477  056A  07B6               	addwf	___flmul@prod+2,f
  3478  056B                     u2412:
  3479  056B  082B               	movf	??___flmul+3,w
  3480  056C  1103               	clrz
  3481  056D  1803               	skipnc
  3482  056E  3E01               	addlw	1
  3483  056F  1903               	skipnz
  3484  0570  2D72               	goto	u2413
  3485  0571  07B7               	addwf	___flmul@prod+3,f
  3486  0572                     u2413:
  3487  0572  0822               	movf	___flmul@b+2,w
  3488  0573  00A8               	movwf	??___flmul
  3489  0574  0828               	movf	??___flmul,w
  3490  0575  00F0               	movwf	__Umul8_16@multiplicand
  3491  0576  0824               	movf	___flmul@a,w
  3492  0577  120A  118A  2005  120A  118A  	fcall	__Umul8_16
  3493  057C  0871               	movf	?__Umul8_16+1,w
  3494  057D  1283               	bcf	3,5	;RP0=0, select bank0
  3495  057E  1303               	bcf	3,6	;RP1=0, select bank0
  3496  057F  00B9               	movwf	___flmul@temp+1
  3497  0580  0870               	movf	?__Umul8_16,w
  3498  0581  00B8               	movwf	___flmul@temp
  3499  0582                     l1823:
  3500  0582  0838               	movf	___flmul@temp,w
  3501  0583  00A8               	movwf	??___flmul
  3502  0584  01A9               	clrf	??___flmul+1
  3503  0585  01AA               	clrf	??___flmul+2
  3504  0586  01AB               	clrf	??___flmul+3
  3505  0587  0828               	movf	??___flmul,w
  3506  0588  07AE               	addwf	___flmul@grs,f
  3507  0589  0829               	movf	??___flmul+1,w
  3508  058A  1103               	clrz
  3509  058B  1803               	skipnc
  3510  058C  3E01               	addlw	1
  3511  058D  1903               	skipnz
  3512  058E  2D90               	goto	u2421
  3513  058F  07AF               	addwf	___flmul@grs+1,f
  3514  0590                     u2421:
  3515  0590  082A               	movf	??___flmul+2,w
  3516  0591  1103               	clrz
  3517  0592  1803               	skipnc
  3518  0593  3E01               	addlw	1
  3519  0594  1903               	skipnz
  3520  0595  2D97               	goto	u2422
  3521  0596  07B0               	addwf	___flmul@grs+2,f
  3522  0597                     u2422:
  3523  0597  082B               	movf	??___flmul+3,w
  3524  0598  1103               	clrz
  3525  0599  1803               	skipnc
  3526  059A  3E01               	addlw	1
  3527  059B  1903               	skipnz
  3528  059C  2D9E               	goto	u2423
  3529  059D  07B1               	addwf	___flmul@grs+3,f
  3530  059E                     u2423:
  3531  059E                     l1825:
  3532  059E  0839               	movf	___flmul@temp+1,w
  3533  059F  00A8               	movwf	??___flmul
  3534  05A0  01A9               	clrf	??___flmul+1
  3535  05A1  01AA               	clrf	??___flmul+2
  3536  05A2  01AB               	clrf	??___flmul+3
  3537  05A3  0828               	movf	??___flmul,w
  3538  05A4  07B4               	addwf	___flmul@prod,f
  3539  05A5  0829               	movf	??___flmul+1,w
  3540  05A6  1103               	clrz
  3541  05A7  1803               	skipnc
  3542  05A8  3E01               	addlw	1
  3543  05A9  1903               	skipnz
  3544  05AA  2DAC               	goto	u2431
  3545  05AB  07B5               	addwf	___flmul@prod+1,f
  3546  05AC                     u2431:
  3547  05AC  082A               	movf	??___flmul+2,w
  3548  05AD  1103               	clrz
  3549  05AE  1803               	skipnc
  3550  05AF  3E01               	addlw	1
  3551  05B0  1903               	skipnz
  3552  05B1  2DB3               	goto	u2432
  3553  05B2  07B6               	addwf	___flmul@prod+2,f
  3554  05B3                     u2432:
  3555  05B3  082B               	movf	??___flmul+3,w
  3556  05B4  1103               	clrz
  3557  05B5  1803               	skipnc
  3558  05B6  3E01               	addlw	1
  3559  05B7  1903               	skipnz
  3560  05B8  2DBA               	goto	u2433
  3561  05B9  07B7               	addwf	___flmul@prod+3,f
  3562  05BA                     u2433:
  3563  05BA                     l1827:
  3564  05BA  3008               	movlw	8
  3565  05BB  00A8               	movwf	??___flmul
  3566  05BC                     u2445:
  3567  05BC  1003               	clrc
  3568  05BD  0DAE               	rlf	___flmul@grs,f
  3569  05BE  0DAF               	rlf	___flmul@grs+1,f
  3570  05BF  0DB0               	rlf	___flmul@grs+2,f
  3571  05C0  0DB1               	rlf	___flmul@grs+3,f
  3572  05C1  0BA8               	decfsz	??___flmul,f
  3573  05C2  2DBC               	goto	u2445
  3574  05C3                     l1829:
  3575  05C3  0821               	movf	___flmul@b+1,w
  3576  05C4  00A8               	movwf	??___flmul
  3577  05C5  0828               	movf	??___flmul,w
  3578  05C6  00F0               	movwf	__Umul8_16@multiplicand
  3579  05C7  0824               	movf	___flmul@a,w
  3580  05C8  120A  118A  2005  120A  118A  	fcall	__Umul8_16
  3581  05CD  0871               	movf	?__Umul8_16+1,w
  3582  05CE  1283               	bcf	3,5	;RP0=0, select bank0
  3583  05CF  1303               	bcf	3,6	;RP1=0, select bank0
  3584  05D0  00B9               	movwf	___flmul@temp+1
  3585  05D1  0870               	movf	?__Umul8_16,w
  3586  05D2  00B8               	movwf	___flmul@temp
  3587  05D3                     l1831:
  3588  05D3  0838               	movf	___flmul@temp,w
  3589  05D4  00A8               	movwf	??___flmul
  3590  05D5  0839               	movf	___flmul@temp+1,w
  3591  05D6  00A9               	movwf	??___flmul+1
  3592  05D7  01AA               	clrf	??___flmul+2
  3593  05D8  01AB               	clrf	??___flmul+3
  3594  05D9  0828               	movf	??___flmul,w
  3595  05DA  07AE               	addwf	___flmul@grs,f
  3596  05DB  0829               	movf	??___flmul+1,w
  3597  05DC  1103               	clrz
  3598  05DD  1803               	skipnc
  3599  05DE  3E01               	addlw	1
  3600  05DF  1903               	skipnz
  3601  05E0  2DE2               	goto	u2451
  3602  05E1  07AF               	addwf	___flmul@grs+1,f
  3603  05E2                     u2451:
  3604  05E2  082A               	movf	??___flmul+2,w
  3605  05E3  1103               	clrz
  3606  05E4  1803               	skipnc
  3607  05E5  3E01               	addlw	1
  3608  05E6  1903               	skipnz
  3609  05E7  2DE9               	goto	u2452
  3610  05E8  07B0               	addwf	___flmul@grs+2,f
  3611  05E9                     u2452:
  3612  05E9  082B               	movf	??___flmul+3,w
  3613  05EA  1103               	clrz
  3614  05EB  1803               	skipnc
  3615  05EC  3E01               	addlw	1
  3616  05ED  1903               	skipnz
  3617  05EE  2DF0               	goto	u2453
  3618  05EF  07B1               	addwf	___flmul@grs+3,f
  3619  05F0                     u2453:
  3620  05F0                     l1833:
  3621  05F0  0820               	movf	___flmul@b,w
  3622  05F1  00A8               	movwf	??___flmul
  3623  05F2  0828               	movf	??___flmul,w
  3624  05F3  00F0               	movwf	__Umul8_16@multiplicand
  3625  05F4  0825               	movf	___flmul@a+1,w
  3626  05F5  120A  118A  2005  120A  118A  	fcall	__Umul8_16
  3627  05FA  0871               	movf	?__Umul8_16+1,w
  3628  05FB  1283               	bcf	3,5	;RP0=0, select bank0
  3629  05FC  1303               	bcf	3,6	;RP1=0, select bank0
  3630  05FD  00B9               	movwf	___flmul@temp+1
  3631  05FE  0870               	movf	?__Umul8_16,w
  3632  05FF  00B8               	movwf	___flmul@temp
  3633  0600                     l1835:
  3634  0600  0838               	movf	___flmul@temp,w
  3635  0601  00A8               	movwf	??___flmul
  3636  0602  0839               	movf	___flmul@temp+1,w
  3637  0603  00A9               	movwf	??___flmul+1
  3638  0604  01AA               	clrf	??___flmul+2
  3639  0605  01AB               	clrf	??___flmul+3
  3640  0606  0828               	movf	??___flmul,w
  3641  0607  07AE               	addwf	___flmul@grs,f
  3642  0608  0829               	movf	??___flmul+1,w
  3643  0609  1103               	clrz
  3644  060A  1803               	skipnc
  3645  060B  3E01               	addlw	1
  3646  060C  1903               	skipnz
  3647  060D  2E0F               	goto	u2461
  3648  060E  07AF               	addwf	___flmul@grs+1,f
  3649  060F                     u2461:
  3650  060F  082A               	movf	??___flmul+2,w
  3651  0610  1103               	clrz
  3652  0611  1803               	skipnc
  3653  0612  3E01               	addlw	1
  3654  0613  1903               	skipnz
  3655  0614  2E16               	goto	u2462
  3656  0615  07B0               	addwf	___flmul@grs+2,f
  3657  0616                     u2462:
  3658  0616  082B               	movf	??___flmul+3,w
  3659  0617  1103               	clrz
  3660  0618  1803               	skipnc
  3661  0619  3E01               	addlw	1
  3662  061A  1903               	skipnz
  3663  061B  2E1D               	goto	u2463
  3664  061C  07B1               	addwf	___flmul@grs+3,f
  3665  061D                     u2463:
  3666  061D                     l1837:
  3667  061D  3008               	movlw	8
  3668  061E  00A8               	movwf	??___flmul
  3669  061F                     u2475:
  3670  061F  1003               	clrc
  3671  0620  0DAE               	rlf	___flmul@grs,f
  3672  0621  0DAF               	rlf	___flmul@grs+1,f
  3673  0622  0DB0               	rlf	___flmul@grs+2,f
  3674  0623  0DB1               	rlf	___flmul@grs+3,f
  3675  0624  0BA8               	decfsz	??___flmul,f
  3676  0625  2E1F               	goto	u2475
  3677  0626  0820               	movf	___flmul@b,w
  3678  0627  00A8               	movwf	??___flmul
  3679  0628  0828               	movf	??___flmul,w
  3680  0629  00F0               	movwf	__Umul8_16@multiplicand
  3681  062A  0824               	movf	___flmul@a,w
  3682  062B  120A  118A  2005  120A  118A  	fcall	__Umul8_16
  3683  0630  0871               	movf	?__Umul8_16+1,w
  3684  0631  1283               	bcf	3,5	;RP0=0, select bank0
  3685  0632  1303               	bcf	3,6	;RP1=0, select bank0
  3686  0633  00B9               	movwf	___flmul@temp+1
  3687  0634  0870               	movf	?__Umul8_16,w
  3688  0635  00B8               	movwf	___flmul@temp
  3689  0636                     l1839:
  3690  0636  0838               	movf	___flmul@temp,w
  3691  0637  00A8               	movwf	??___flmul
  3692  0638  0839               	movf	___flmul@temp+1,w
  3693  0639  00A9               	movwf	??___flmul+1
  3694  063A  01AA               	clrf	??___flmul+2
  3695  063B  01AB               	clrf	??___flmul+3
  3696  063C  0828               	movf	??___flmul,w
  3697  063D  07AE               	addwf	___flmul@grs,f
  3698  063E  0829               	movf	??___flmul+1,w
  3699  063F  1103               	clrz
  3700  0640  1803               	skipnc
  3701  0641  3E01               	addlw	1
  3702  0642  1903               	skipnz
  3703  0643  2E45               	goto	u2481
  3704  0644  07AF               	addwf	___flmul@grs+1,f
  3705  0645                     u2481:
  3706  0645  082A               	movf	??___flmul+2,w
  3707  0646  1103               	clrz
  3708  0647  1803               	skipnc
  3709  0648  3E01               	addlw	1
  3710  0649  1903               	skipnz
  3711  064A  2E4C               	goto	u2482
  3712  064B  07B0               	addwf	___flmul@grs+2,f
  3713  064C                     u2482:
  3714  064C  082B               	movf	??___flmul+3,w
  3715  064D  1103               	clrz
  3716  064E  1803               	skipnc
  3717  064F  3E01               	addlw	1
  3718  0650  1903               	skipnz
  3719  0651  2E53               	goto	u2483
  3720  0652  07B1               	addwf	___flmul@grs+3,f
  3721  0653                     u2483:
  3722  0653                     l1841:
  3723  0653  0821               	movf	___flmul@b+1,w
  3724  0654  00A8               	movwf	??___flmul
  3725  0655  0828               	movf	??___flmul,w
  3726  0656  00F0               	movwf	__Umul8_16@multiplicand
  3727  0657  0826               	movf	___flmul@a+2,w
  3728  0658  120A  118A  2005  120A  118A  	fcall	__Umul8_16
  3729  065D  0871               	movf	?__Umul8_16+1,w
  3730  065E  1283               	bcf	3,5	;RP0=0, select bank0
  3731  065F  1303               	bcf	3,6	;RP1=0, select bank0
  3732  0660  00B9               	movwf	___flmul@temp+1
  3733  0661  0870               	movf	?__Umul8_16,w
  3734  0662  00B8               	movwf	___flmul@temp
  3735  0663  0838               	movf	___flmul@temp,w
  3736  0664  00A8               	movwf	??___flmul
  3737  0665  0839               	movf	___flmul@temp+1,w
  3738  0666  00A9               	movwf	??___flmul+1
  3739  0667  01AA               	clrf	??___flmul+2
  3740  0668  01AB               	clrf	??___flmul+3
  3741  0669  0828               	movf	??___flmul,w
  3742  066A  07B4               	addwf	___flmul@prod,f
  3743  066B  0829               	movf	??___flmul+1,w
  3744  066C  1103               	clrz
  3745  066D  1803               	skipnc
  3746  066E  3E01               	addlw	1
  3747  066F  1903               	skipnz
  3748  0670  2E72               	goto	u2491
  3749  0671  07B5               	addwf	___flmul@prod+1,f
  3750  0672                     u2491:
  3751  0672  082A               	movf	??___flmul+2,w
  3752  0673  1103               	clrz
  3753  0674  1803               	skipnc
  3754  0675  3E01               	addlw	1
  3755  0676  1903               	skipnz
  3756  0677  2E79               	goto	u2492
  3757  0678  07B6               	addwf	___flmul@prod+2,f
  3758  0679                     u2492:
  3759  0679  082B               	movf	??___flmul+3,w
  3760  067A  1103               	clrz
  3761  067B  1803               	skipnc
  3762  067C  3E01               	addlw	1
  3763  067D  1903               	skipnz
  3764  067E  2E80               	goto	u2493
  3765  067F  07B7               	addwf	___flmul@prod+3,f
  3766  0680                     u2493:
  3767  0680                     l1843:
  3768  0680  0822               	movf	___flmul@b+2,w
  3769  0681  00A8               	movwf	??___flmul
  3770  0682  0828               	movf	??___flmul,w
  3771  0683  00F0               	movwf	__Umul8_16@multiplicand
  3772  0684  0825               	movf	___flmul@a+1,w
  3773  0685  120A  118A  2005  120A  118A  	fcall	__Umul8_16
  3774  068A  0871               	movf	?__Umul8_16+1,w
  3775  068B  1283               	bcf	3,5	;RP0=0, select bank0
  3776  068C  1303               	bcf	3,6	;RP1=0, select bank0
  3777  068D  00B9               	movwf	___flmul@temp+1
  3778  068E  0870               	movf	?__Umul8_16,w
  3779  068F  00B8               	movwf	___flmul@temp
  3780  0690                     l1845:
  3781  0690  0838               	movf	___flmul@temp,w
  3782  0691  00A8               	movwf	??___flmul
  3783  0692  0839               	movf	___flmul@temp+1,w
  3784  0693  00A9               	movwf	??___flmul+1
  3785  0694  01AA               	clrf	??___flmul+2
  3786  0695  01AB               	clrf	??___flmul+3
  3787  0696  0828               	movf	??___flmul,w
  3788  0697  07B4               	addwf	___flmul@prod,f
  3789  0698  0829               	movf	??___flmul+1,w
  3790  0699  1103               	clrz
  3791  069A  1803               	skipnc
  3792  069B  3E01               	addlw	1
  3793  069C  1903               	skipnz
  3794  069D  2E9F               	goto	u2501
  3795  069E  07B5               	addwf	___flmul@prod+1,f
  3796  069F                     u2501:
  3797  069F  082A               	movf	??___flmul+2,w
  3798  06A0  1103               	clrz
  3799  06A1  1803               	skipnc
  3800  06A2  3E01               	addlw	1
  3801  06A3  1903               	skipnz
  3802  06A4  2EA6               	goto	u2502
  3803  06A5  07B6               	addwf	___flmul@prod+2,f
  3804  06A6                     u2502:
  3805  06A6  082B               	movf	??___flmul+3,w
  3806  06A7  1103               	clrz
  3807  06A8  1803               	skipnc
  3808  06A9  3E01               	addlw	1
  3809  06AA  1903               	skipnz
  3810  06AB  2EAD               	goto	u2503
  3811  06AC  07B7               	addwf	___flmul@prod+3,f
  3812  06AD                     u2503:
  3813  06AD  0822               	movf	___flmul@b+2,w
  3814  06AE  00A8               	movwf	??___flmul
  3815  06AF  0828               	movf	??___flmul,w
  3816  06B0  00F0               	movwf	__Umul8_16@multiplicand
  3817  06B1  0826               	movf	___flmul@a+2,w
  3818  06B2  120A  118A  2005  120A  118A  	fcall	__Umul8_16
  3819  06B7  0871               	movf	?__Umul8_16+1,w
  3820  06B8  1283               	bcf	3,5	;RP0=0, select bank0
  3821  06B9  1303               	bcf	3,6	;RP1=0, select bank0
  3822  06BA  00B9               	movwf	___flmul@temp+1
  3823  06BB  0870               	movf	?__Umul8_16,w
  3824  06BC  00B8               	movwf	___flmul@temp
  3825  06BD                     l1847:
  3826  06BD  0838               	movf	___flmul@temp,w
  3827  06BE  00A8               	movwf	??___flmul
  3828  06BF  0839               	movf	___flmul@temp+1,w
  3829  06C0  00A9               	movwf	??___flmul+1
  3830  06C1  01AA               	clrf	??___flmul+2
  3831  06C2  01AB               	clrf	??___flmul+3
  3832  06C3  3008               	movlw	8
  3833  06C4                     u2515:
  3834  06C4  1003               	clrc
  3835  06C5  0DA8               	rlf	??___flmul,f
  3836  06C6  0DA9               	rlf	??___flmul+1,f
  3837  06C7  0DAA               	rlf	??___flmul+2,f
  3838  06C8  0DAB               	rlf	??___flmul+3,f
  3839  06C9                     u2510:
  3840  06C9  3EFF               	addlw	-1
  3841  06CA  1D03               	skipz
  3842  06CB  2EC4               	goto	u2515
  3843  06CC  0828               	movf	??___flmul,w
  3844  06CD  07B4               	addwf	___flmul@prod,f
  3845  06CE  0829               	movf	??___flmul+1,w
  3846  06CF  1103               	clrz
  3847  06D0  1803               	skipnc
  3848  06D1  3E01               	addlw	1
  3849  06D2  1903               	skipnz
  3850  06D3  2ED5               	goto	u2521
  3851  06D4  07B5               	addwf	___flmul@prod+1,f
  3852  06D5                     u2521:
  3853  06D5  082A               	movf	??___flmul+2,w
  3854  06D6  1103               	clrz
  3855  06D7  1803               	skipnc
  3856  06D8  3E01               	addlw	1
  3857  06D9  1903               	skipnz
  3858  06DA  2EDC               	goto	u2522
  3859  06DB  07B6               	addwf	___flmul@prod+2,f
  3860  06DC                     u2522:
  3861  06DC  082B               	movf	??___flmul+3,w
  3862  06DD  1103               	clrz
  3863  06DE  1803               	skipnc
  3864  06DF  3E01               	addlw	1
  3865  06E0  1903               	skipnz
  3866  06E1  2EE3               	goto	u2523
  3867  06E2  07B7               	addwf	___flmul@prod+3,f
  3868  06E3                     u2523:
  3869  06E3                     l1849:
  3870  06E3  082E               	movf	___flmul@grs,w
  3871  06E4  00A8               	movwf	??___flmul
  3872  06E5  082F               	movf	___flmul@grs+1,w
  3873  06E6  00A9               	movwf	??___flmul+1
  3874  06E7  0830               	movf	___flmul@grs+2,w
  3875  06E8  00AA               	movwf	??___flmul+2
  3876  06E9  0831               	movf	___flmul@grs+3,w
  3877  06EA  00AB               	movwf	??___flmul+3
  3878  06EB  3018               	movlw	24
  3879  06EC                     u2535:
  3880  06EC  1003               	clrc
  3881  06ED  0CAB               	rrf	??___flmul+3,f
  3882  06EE  0CAA               	rrf	??___flmul+2,f
  3883  06EF  0CA9               	rrf	??___flmul+1,f
  3884  06F0  0CA8               	rrf	??___flmul,f
  3885  06F1                     u2530:
  3886  06F1  3EFF               	addlw	-1
  3887  06F2  1D03               	skipz
  3888  06F3  2EEC               	goto	u2535
  3889  06F4  0828               	movf	??___flmul,w
  3890  06F5  07B4               	addwf	___flmul@prod,f
  3891  06F6  0829               	movf	??___flmul+1,w
  3892  06F7  1103               	clrz
  3893  06F8  1803               	skipnc
  3894  06F9  3E01               	addlw	1
  3895  06FA  1903               	skipnz
  3896  06FB  2EFD               	goto	u2541
  3897  06FC  07B5               	addwf	___flmul@prod+1,f
  3898  06FD                     u2541:
  3899  06FD  082A               	movf	??___flmul+2,w
  3900  06FE  1103               	clrz
  3901  06FF  1803               	skipnc
  3902  0700  3E01               	addlw	1
  3903  0701  1903               	skipnz
  3904  0702  2F04               	goto	u2542
  3905  0703  07B6               	addwf	___flmul@prod+2,f
  3906  0704                     u2542:
  3907  0704  082B               	movf	??___flmul+3,w
  3908  0705  1103               	clrz
  3909  0706  1803               	skipnc
  3910  0707  3E01               	addlw	1
  3911  0708  1903               	skipnz
  3912  0709  2F0B               	goto	u2543
  3913  070A  07B7               	addwf	___flmul@prod+3,f
  3914  070B                     u2543:
  3915  070B                     l1851:
  3916  070B  3008               	movlw	8
  3917  070C  00A8               	movwf	??___flmul
  3918  070D                     u2555:
  3919  070D  1003               	clrc
  3920  070E  0DAE               	rlf	___flmul@grs,f
  3921  070F  0DAF               	rlf	___flmul@grs+1,f
  3922  0710  0DB0               	rlf	___flmul@grs+2,f
  3923  0711  0DB1               	rlf	___flmul@grs+3,f
  3924  0712  0BA8               	decfsz	??___flmul,f
  3925  0713  2F0D               	goto	u2555
  3926  0714                     l1853:
  3927  0714  0833               	movf	___flmul@bexp,w
  3928  0715  0732               	addwf	___flmul@aexp,w
  3929  0716  00A8               	movwf	??___flmul
  3930  0717  01A9               	clrf	??___flmul+1
  3931  0718  0DA9               	rlf	??___flmul+1,f
  3932  0719  0828               	movf	??___flmul,w
  3933  071A  3E82               	addlw	130
  3934  071B  00B8               	movwf	___flmul@temp
  3935  071C  0829               	movf	??___flmul+1,w
  3936  071D  1803               	skipnc
  3937  071E  3E01               	addlw	1
  3938  071F  3EFF               	addlw	255
  3939  0720  00B9               	movwf	___flmul@temp+1
  3940  0721  2F3F               	goto	l1865
  3941  0722                     l1855:
  3942  0722  3001               	movlw	1
  3943  0723  00A8               	movwf	??___flmul
  3944  0724                     u2565:
  3945  0724  1003               	clrc
  3946  0725  0DB4               	rlf	___flmul@prod,f
  3947  0726  0DB5               	rlf	___flmul@prod+1,f
  3948  0727  0DB6               	rlf	___flmul@prod+2,f
  3949  0728  0DB7               	rlf	___flmul@prod+3,f
  3950  0729  0BA8               	decfsz	??___flmul,f
  3951  072A  2F24               	goto	u2565
  3952  072B                     l1857:
  3953  072B  1FB1               	btfss	___flmul@grs+3,7
  3954  072C  2F2E               	goto	u2571
  3955  072D  2F2F               	goto	u2570
  3956  072E                     u2571:
  3957  072E  2F30               	goto	l1861
  3958  072F                     u2570:
  3959  072F                     l1859:
  3960  072F  1434               	bsf	___flmul@prod,0
  3961  0730                     l1861:
  3962  0730  3001               	movlw	1
  3963  0731  00A8               	movwf	??___flmul
  3964  0732                     u2585:
  3965  0732  1003               	clrc
  3966  0733  0DAE               	rlf	___flmul@grs,f
  3967  0734  0DAF               	rlf	___flmul@grs+1,f
  3968  0735  0DB0               	rlf	___flmul@grs+2,f
  3969  0736  0DB1               	rlf	___flmul@grs+3,f
  3970  0737  0BA8               	decfsz	??___flmul,f
  3971  0738  2F32               	goto	u2585
  3972  0739                     l1863:
  3973  0739  30FF               	movlw	255
  3974  073A  07B8               	addwf	___flmul@temp,f
  3975  073B  1803               	skipnc
  3976  073C  0AB9               	incf	___flmul@temp+1,f
  3977  073D  30FF               	movlw	255
  3978  073E  07B9               	addwf	___flmul@temp+1,f
  3979  073F                     l1865:
  3980  073F  1FB6               	btfss	___flmul@prod+2,7
  3981  0740  2F42               	goto	u2591
  3982  0741  2F43               	goto	u2590
  3983  0742                     u2591:
  3984  0742  2F22               	goto	l1855
  3985  0743                     u2590:
  3986  0743                     l1867:
  3987  0743  01B2               	clrf	___flmul@aexp
  3988  0744                     l1869:
  3989  0744  1FB1               	btfss	___flmul@grs+3,7
  3990  0745  2F47               	goto	u2601
  3991  0746  2F48               	goto	u2600
  3992  0747                     u2601:
  3993  0747  2F64               	goto	l1877
  3994  0748                     u2600:
  3995  0748                     l1871:
  3996  0748  30FF               	movlw	255
  3997  0749  052E               	andwf	___flmul@grs,w
  3998  074A  00A8               	movwf	??___flmul
  3999  074B  30FF               	movlw	255
  4000  074C  052F               	andwf	___flmul@grs+1,w
  4001  074D  00A9               	movwf	??___flmul+1
  4002  074E  30FF               	movlw	255
  4003  074F  0530               	andwf	___flmul@grs+2,w
  4004  0750  00AA               	movwf	??___flmul+2
  4005  0751  307F               	movlw	127
  4006  0752  0531               	andwf	___flmul@grs+3,w
  4007  0753  00AB               	movwf	??___flmul+3
  4008  0754  082B               	movf	??___flmul+3,w
  4009  0755  042A               	iorwf	??___flmul+2,w
  4010  0756  0429               	iorwf	??___flmul+1,w
  4011  0757  0428               	iorwf	??___flmul,w
  4012  0758  1903               	skipnz
  4013  0759  2F5B               	goto	u2611
  4014  075A  2F5C               	goto	u2610
  4015  075B                     u2611:
  4016  075B  2F5F               	goto	l684
  4017  075C                     u2610:
  4018  075C                     l1873:
  4019  075C  01B2               	clrf	___flmul@aexp
  4020  075D  0AB2               	incf	___flmul@aexp,f
  4021  075E  2F64               	goto	l1877
  4022  075F                     l684:
  4023  075F  1C34               	btfss	___flmul@prod,0
  4024  0760  2F62               	goto	u2621
  4025  0761  2F63               	goto	u2620
  4026  0762                     u2621:
  4027  0762  2F64               	goto	l1877
  4028  0763                     u2620:
  4029  0763  2F5C               	goto	l1873
  4030  0764                     l1877:
  4031  0764  0832               	movf	___flmul@aexp,w
  4032  0765  1903               	btfsc	3,2
  4033  0766  2F68               	goto	u2631
  4034  0767  2F69               	goto	u2630
  4035  0768                     u2631:
  4036  0768  2F9A               	goto	l1887
  4037  0769                     u2630:
  4038  0769                     l1879:
  4039  0769  3001               	movlw	1
  4040  076A  07B4               	addwf	___flmul@prod,f
  4041  076B  3000               	movlw	0
  4042  076C  1803               	skipnc
  4043  076D  3001               	movlw	1
  4044  076E  07B5               	addwf	___flmul@prod+1,f
  4045  076F  3000               	movlw	0
  4046  0770  1803               	skipnc
  4047  0771  3001               	movlw	1
  4048  0772  07B6               	addwf	___flmul@prod+2,f
  4049  0773  3000               	movlw	0
  4050  0774  1803               	skipnc
  4051  0775  3001               	movlw	1
  4052  0776  07B7               	addwf	___flmul@prod+3,f
  4053  0777                     l1881:
  4054  0777  1C37               	btfss	___flmul@prod+3,0
  4055  0778  2F7A               	goto	u2641
  4056  0779  2F7B               	goto	u2640
  4057  077A                     u2641:
  4058  077A  2F9A               	goto	l1887
  4059  077B                     u2640:
  4060  077B                     l1883:
  4061  077B  0834               	movf	___flmul@prod,w
  4062  077C  00A8               	movwf	??___flmul
  4063  077D  0835               	movf	___flmul@prod+1,w
  4064  077E  00A9               	movwf	??___flmul+1
  4065  077F  0836               	movf	___flmul@prod+2,w
  4066  0780  00AA               	movwf	??___flmul+2
  4067  0781  0837               	movf	___flmul@prod+3,w
  4068  0782  00AB               	movwf	??___flmul+3
  4069  0783  3001               	movlw	1
  4070  0784  00AC               	movwf	??___flmul+4
  4071  0785                     u2655:
  4072  0785  0D2B               	rlf	??___flmul+3,w
  4073  0786  0CAB               	rrf	??___flmul+3,f
  4074  0787  0CAA               	rrf	??___flmul+2,f
  4075  0788  0CA9               	rrf	??___flmul+1,f
  4076  0789  0CA8               	rrf	??___flmul,f
  4077  078A                     u2650:
  4078  078A  0BAC               	decfsz	??___flmul+4,f
  4079  078B  2F85               	goto	u2655
  4080  078C  082B               	movf	??___flmul+3,w
  4081  078D  00B7               	movwf	___flmul@prod+3
  4082  078E  082A               	movf	??___flmul+2,w
  4083  078F  00B6               	movwf	___flmul@prod+2
  4084  0790  0829               	movf	??___flmul+1,w
  4085  0791  00B5               	movwf	___flmul@prod+1
  4086  0792  0828               	movf	??___flmul,w
  4087  0793  00B4               	movwf	___flmul@prod
  4088  0794                     l1885:
  4089  0794  3001               	movlw	1
  4090  0795  07B8               	addwf	___flmul@temp,f
  4091  0796  1803               	skipnc
  4092  0797  0AB9               	incf	___flmul@temp+1,f
  4093  0798  3000               	movlw	0
  4094  0799  07B9               	addwf	___flmul@temp+1,f
  4095  079A                     l1887:
  4096  079A  0839               	movf	___flmul@temp+1,w
  4097  079B  3A80               	xorlw	128
  4098  079C  00FF               	movwf	btemp+1
  4099  079D  3080               	movlw	128
  4100  079E  027F               	subwf	btemp+1,w
  4101  079F  1D03               	skipz
  4102  07A0  2FA3               	goto	u2665
  4103  07A1  30FF               	movlw	255
  4104  07A2  0238               	subwf	___flmul@temp,w
  4105  07A3                     u2665:
  4106  07A3  1C03               	skipc
  4107  07A4  2FA6               	goto	u2661
  4108  07A5  2FA7               	goto	u2660
  4109  07A6                     u2661:
  4110  07A6  2FB2               	goto	l1891
  4111  07A7                     u2660:
  4112  07A7                     l1889:
  4113  07A7  307F               	movlw	127
  4114  07A8  1283               	bcf	3,5	;RP0=0, select bank0
  4115  07A9  1303               	bcf	3,6	;RP1=0, select bank0
  4116  07AA  00B7               	movwf	___flmul@prod+3
  4117  07AB  3080               	movlw	128
  4118  07AC  00B6               	movwf	___flmul@prod+2
  4119  07AD  3000               	movlw	0
  4120  07AE  00B5               	movwf	___flmul@prod+1
  4121  07AF  3000               	movlw	0
  4122  07B0  00B4               	movwf	___flmul@prod
  4123  07B1  2FE7               	goto	l690
  4124  07B2                     l1891:
  4125  07B2  1283               	bcf	3,5	;RP0=0, select bank0
  4126  07B3  1303               	bcf	3,6	;RP1=0, select bank0
  4127  07B4  0839               	movf	___flmul@temp+1,w
  4128  07B5  3A80               	xorlw	128
  4129  07B6  00FF               	movwf	btemp+1
  4130  07B7  3080               	movlw	128
  4131  07B8  027F               	subwf	btemp+1,w
  4132  07B9  1D03               	skipz
  4133  07BA  2FBD               	goto	u2675
  4134  07BB  3001               	movlw	1
  4135  07BC  0238               	subwf	___flmul@temp,w
  4136  07BD                     u2675:
  4137  07BD  1803               	skipnc
  4138  07BE  2FC0               	goto	u2671
  4139  07BF  2FC1               	goto	u2670
  4140  07C0                     u2671:
  4141  07C0  2FCD               	goto	l1897
  4142  07C1                     u2670:
  4143  07C1                     l1893:
  4144  07C1  3000               	movlw	0
  4145  07C2  1283               	bcf	3,5	;RP0=0, select bank0
  4146  07C3  1303               	bcf	3,6	;RP1=0, select bank0
  4147  07C4  00B7               	movwf	___flmul@prod+3
  4148  07C5  3000               	movlw	0
  4149  07C6  00B6               	movwf	___flmul@prod+2
  4150  07C7  3000               	movlw	0
  4151  07C8  00B5               	movwf	___flmul@prod+1
  4152  07C9  3000               	movlw	0
  4153  07CA  00B4               	movwf	___flmul@prod
  4154  07CB                     l1895:
  4155  07CB  01AD               	clrf	___flmul@sign
  4156  07CC  2FE7               	goto	l690
  4157  07CD                     l1897:
  4158  07CD  1283               	bcf	3,5	;RP0=0, select bank0
  4159  07CE  1303               	bcf	3,6	;RP1=0, select bank0
  4160  07CF  0838               	movf	___flmul@temp,w
  4161  07D0  00A8               	movwf	??___flmul
  4162  07D1  0828               	movf	??___flmul,w
  4163  07D2  00B3               	movwf	___flmul@bexp
  4164  07D3  30FF               	movlw	255
  4165  07D4  05B4               	andwf	___flmul@prod,f
  4166  07D5  30FF               	movlw	255
  4167  07D6  05B5               	andwf	___flmul@prod+1,f
  4168  07D7  307F               	movlw	127
  4169  07D8  05B6               	andwf	___flmul@prod+2,f
  4170  07D9  3000               	movlw	0
  4171  07DA  05B7               	andwf	___flmul@prod+3,f
  4172  07DB                     l1899:
  4173  07DB  1C33               	btfss	___flmul@bexp,0
  4174  07DC  2FDE               	goto	u2681
  4175  07DD  2FDF               	goto	u2680
  4176  07DE                     u2681:
  4177  07DE  2FE0               	goto	l1903
  4178  07DF                     u2680:
  4179  07DF                     l1901:
  4180  07DF  17B6               	bsf	___flmul@prod+2,7
  4181  07E0                     l1903:
  4182  07E0  0833               	movf	___flmul@bexp,w
  4183  07E1  00A8               	movwf	??___flmul
  4184  07E2  1003               	clrc
  4185  07E3  0C28               	rrf	??___flmul,w
  4186  07E4  00A9               	movwf	??___flmul+1
  4187  07E5  0829               	movf	??___flmul+1,w
  4188  07E6  00B7               	movwf	___flmul@prod+3
  4189  07E7                     l690:
  4190  07E7  082D               	movf	___flmul@sign,w
  4191  07E8  00A8               	movwf	??___flmul
  4192  07E9  0828               	movf	??___flmul,w
  4193  07EA  04B7               	iorwf	___flmul@prod+3,f
  4194  07EB                     l1905:
  4195  07EB  0837               	movf	___flmul@prod+3,w
  4196  07EC  00A3               	movwf	?___flmul+3
  4197  07ED  0836               	movf	___flmul@prod+2,w
  4198  07EE  00A2               	movwf	?___flmul+2
  4199  07EF  0835               	movf	___flmul@prod+1,w
  4200  07F0  00A1               	movwf	?___flmul+1
  4201  07F1  0834               	movf	___flmul@prod,w
  4202  07F2  00A0               	movwf	?___flmul
  4203  07F3                     l678:
  4204  07F3  0008               	return
  4205  07F4                     __end_of___flmul:
  4206                           
  4207                           	psect	text16
  4208  0005                     __ptext16:	
  4209 ;; *************** function __Umul8_16 *****************
  4210 ;; Defined at:
  4211 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul8_16.c"
  4212 ;; Parameters:    Size  Location     Type
  4213 ;;  multiplier      1    wreg     unsigned char 
  4214 ;;  multiplicand    1    0[COMMON] unsigned char 
  4215 ;; Auto vars:     Size  Location     Type
  4216 ;;  multiplier      1    8[COMMON] unsigned char 
  4217 ;;  word_mpld       2    6[COMMON] unsigned int 
  4218 ;;  product         2    4[COMMON] unsigned int 
  4219 ;; Return value:  Size  Location     Type
  4220 ;;                  2    0[COMMON] unsigned int 
  4221 ;; Registers used:
  4222 ;;		wreg, status,2, status,0
  4223 ;; Tracked objects:
  4224 ;;		On entry : 0/0
  4225 ;;		On exit  : 0/0
  4226 ;;		Unchanged: 0/0
  4227 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4228 ;;      Params:         2       0       0       0       0
  4229 ;;      Locals:         5       0       0       0       0
  4230 ;;      Temps:          2       0       0       0       0
  4231 ;;      Totals:         9       0       0       0       0
  4232 ;;Total ram usage:        9 bytes
  4233 ;; Hardware stack levels used:    1
  4234 ;; This function calls:
  4235 ;;		Nothing
  4236 ;; This function is called by:
  4237 ;;		___flmul
  4238 ;; This function uses a non-reentrant model
  4239 ;;
  4240                           
  4241                           
  4242                           ;psect for function __Umul8_16
  4243  0005                     __Umul8_16:
  4244                           
  4245                           ;incstack = 0
  4246                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  4247                           ;__Umul8_16@multiplier stored from wreg
  4248  0005  00F8               	movwf	__Umul8_16@multiplier
  4249  0006                     l1511:
  4250  0006  01F4               	clrf	__Umul8_16@product
  4251  0007  01F5               	clrf	__Umul8_16@product+1
  4252  0008                     l1513:
  4253  0008  0870               	movf	__Umul8_16@multiplicand,w
  4254  0009  00F2               	movwf	??__Umul8_16
  4255  000A  01F3               	clrf	??__Umul8_16+1
  4256  000B  0872               	movf	??__Umul8_16,w
  4257  000C  00F6               	movwf	__Umul8_16@word_mpld
  4258  000D  0873               	movf	??__Umul8_16+1,w
  4259  000E  00F7               	movwf	__Umul8_16@word_mpld+1
  4260  000F                     l1515:
  4261  000F  1C78               	btfss	__Umul8_16@multiplier,0
  4262  0010  2812               	goto	u1721
  4263  0011  2813               	goto	u1720
  4264  0012                     u1721:
  4265  0012  2819               	goto	l697
  4266  0013                     u1720:
  4267  0013                     l1517:
  4268  0013  0876               	movf	__Umul8_16@word_mpld,w
  4269  0014  07F4               	addwf	__Umul8_16@product,f
  4270  0015  1803               	skipnc
  4271  0016  0AF5               	incf	__Umul8_16@product+1,f
  4272  0017  0877               	movf	__Umul8_16@word_mpld+1,w
  4273  0018  07F5               	addwf	__Umul8_16@product+1,f
  4274  0019                     l697:
  4275  0019  3001               	movlw	1
  4276  001A                     u1735:
  4277  001A  1003               	clrc
  4278  001B  0DF6               	rlf	__Umul8_16@word_mpld,f
  4279  001C  0DF7               	rlf	__Umul8_16@word_mpld+1,f
  4280  001D  3EFF               	addlw	-1
  4281  001E  1D03               	skipz
  4282  001F  281A               	goto	u1735
  4283  0020  1003               	clrc
  4284  0021  0CF8               	rrf	__Umul8_16@multiplier,f
  4285  0022                     l1519:
  4286  0022  0878               	movf	__Umul8_16@multiplier,w
  4287  0023  1D03               	btfss	3,2
  4288  0024  2826               	goto	u1741
  4289  0025  2827               	goto	u1740
  4290  0026                     u1741:
  4291  0026  280F               	goto	l1515
  4292  0027                     u1740:
  4293  0027                     l1521:
  4294  0027  0875               	movf	__Umul8_16@product+1,w
  4295  0028  00F1               	movwf	?__Umul8_16+1
  4296  0029  0874               	movf	__Umul8_16@product,w
  4297  002A  00F0               	movwf	?__Umul8_16
  4298  002B                     l699:
  4299  002B  0008               	return
  4300  002C                     __end_of__Umul8_16:
  4301                           
  4302                           	psect	text17
  4303  0DAE                     __ptext17:	
  4304 ;; *************** function _UARTSendString *****************
  4305 ;; Defined at:
  4306 ;;		line 49 in file "UART.c"
  4307 ;; Parameters:    Size  Location     Type
  4308 ;;  str             1    wreg     PTR const unsigned char 
  4309 ;;		 -> NULL(0), int2String@cadena(4), adcToString@salida(5), 
  4310 ;;  max_length      1    1[COMMON] const unsigned char 
  4311 ;; Auto vars:     Size  Location     Type
  4312 ;;  str             1    3[COMMON] PTR const unsigned char 
  4313 ;;		 -> NULL(0), int2String@cadena(4), adcToString@salida(5), 
  4314 ;;  i               2    4[COMMON] int 
  4315 ;; Return value:  Size  Location     Type
  4316 ;;                  1    wreg      void 
  4317 ;; Registers used:
  4318 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4319 ;; Tracked objects:
  4320 ;;		On entry : 0/0
  4321 ;;		On exit  : 0/0
  4322 ;;		Unchanged: 0/0
  4323 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4324 ;;      Params:         1       0       0       0       0
  4325 ;;      Locals:         3       0       0       0       0
  4326 ;;      Temps:          1       0       0       0       0
  4327 ;;      Totals:         5       0       0       0       0
  4328 ;;Total ram usage:        5 bytes
  4329 ;; Hardware stack levels used:    1
  4330 ;; Hardware stack levels required when called:    1
  4331 ;; This function calls:
  4332 ;;		_UARTSendChar
  4333 ;; This function is called by:
  4334 ;;		_main
  4335 ;; This function uses a non-reentrant model
  4336 ;;
  4337                           
  4338                           
  4339                           ;psect for function _UARTSendString
  4340  0DAE                     _UARTSendString:
  4341                           
  4342                           ;incstack = 0
  4343                           ; Regs used in _UARTSendString: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4344                           ;UARTSendString@str stored from wreg
  4345  0DAE  00F3               	movwf	UARTSendString@str
  4346  0DAF                     l2057:
  4347                           
  4348                           ;UART.c: 50:     int i = 0;
  4349  0DAF  01F4               	clrf	UARTSendString@i
  4350  0DB0  01F5               	clrf	UARTSendString@i+1
  4351                           
  4352                           ;UART.c: 51:     for (i=0 ; i<max_length && str[i]!='\0' ; i++) {
  4353  0DB1  01F4               	clrf	UARTSendString@i
  4354  0DB2  01F5               	clrf	UARTSendString@i+1
  4355  0DB3  2DC5               	goto	l2063
  4356  0DB4                     l2059:
  4357                           
  4358                           ;UART.c: 52:         UARTSendChar(str[i]);
  4359  0DB4  0874               	movf	UARTSendString@i,w
  4360  0DB5  0773               	addwf	UARTSendString@str,w
  4361  0DB6  00F2               	movwf	??_UARTSendString
  4362  0DB7  0872               	movf	??_UARTSendString,w
  4363  0DB8  0084               	movwf	4
  4364  0DB9  0800               	movf	0,w
  4365  0DBA  120A  158A  2500  120A  158A  	fcall	_UARTSendChar
  4366  0DBF                     l2061:
  4367                           
  4368                           ;UART.c: 53:     }
  4369  0DBF  3001               	movlw	1
  4370  0DC0  07F4               	addwf	UARTSendString@i,f
  4371  0DC1  1803               	skipnc
  4372  0DC2  0AF5               	incf	UARTSendString@i+1,f
  4373  0DC3  3000               	movlw	0
  4374  0DC4  07F5               	addwf	UARTSendString@i+1,f
  4375  0DC5                     l2063:
  4376  0DC5  0875               	movf	UARTSendString@i+1,w
  4377  0DC6  3A80               	xorlw	128
  4378  0DC7  00F2               	movwf	??_UARTSendString
  4379  0DC8  3080               	movlw	128
  4380  0DC9  0272               	subwf	??_UARTSendString,w
  4381  0DCA  1D03               	skipz
  4382  0DCB  2DCE               	goto	u2905
  4383  0DCC  0871               	movf	UARTSendString@max_length,w
  4384  0DCD  0274               	subwf	UARTSendString@i,w
  4385  0DCE                     u2905:
  4386  0DCE  1803               	skipnc
  4387  0DCF  2DD1               	goto	u2901
  4388  0DD0  2DD2               	goto	u2900
  4389  0DD1                     u2901:
  4390  0DD1  2DDD               	goto	l95
  4391  0DD2                     u2900:
  4392  0DD2                     l2065:
  4393  0DD2  0874               	movf	UARTSendString@i,w
  4394  0DD3  0773               	addwf	UARTSendString@str,w
  4395  0DD4  00F2               	movwf	??_UARTSendString
  4396  0DD5  0872               	movf	??_UARTSendString,w
  4397  0DD6  0084               	movwf	4
  4398  0DD7  1383               	bcf	3,7	;select IRP bank0
  4399  0DD8  0800               	movf	0,w
  4400  0DD9  1D03               	btfss	3,2
  4401  0DDA  2DDC               	goto	u2911
  4402  0DDB  2DDD               	goto	u2910
  4403  0DDC                     u2911:
  4404  0DDC  2DB4               	goto	l2059
  4405  0DDD                     u2910:
  4406  0DDD                     l95:
  4407  0DDD  0008               	return
  4408  0DDE                     __end_of_UARTSendString:
  4409                           
  4410                           	psect	text18
  4411  0D00                     __ptext18:	
  4412 ;; *************** function _UARTSendChar *****************
  4413 ;; Defined at:
  4414 ;;		line 39 in file "UART.c"
  4415 ;; Parameters:    Size  Location     Type
  4416 ;;  c               1    wreg     const unsigned char 
  4417 ;; Auto vars:     Size  Location     Type
  4418 ;;  c               1    0[COMMON] const unsigned char 
  4419 ;; Return value:  Size  Location     Type
  4420 ;;                  1    wreg      void 
  4421 ;; Registers used:
  4422 ;;		wreg
  4423 ;; Tracked objects:
  4424 ;;		On entry : 0/0
  4425 ;;		On exit  : 0/0
  4426 ;;		Unchanged: 0/0
  4427 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4428 ;;      Params:         0       0       0       0       0
  4429 ;;      Locals:         1       0       0       0       0
  4430 ;;      Temps:          0       0       0       0       0
  4431 ;;      Totals:         1       0       0       0       0
  4432 ;;Total ram usage:        1 bytes
  4433 ;; Hardware stack levels used:    1
  4434 ;; This function calls:
  4435 ;;		Nothing
  4436 ;; This function is called by:
  4437 ;;		_main
  4438 ;;		_UARTSendString
  4439 ;; This function uses a non-reentrant model
  4440 ;;
  4441                           
  4442                           
  4443                           ;psect for function _UARTSendChar
  4444  0D00                     _UARTSendChar:
  4445                           
  4446                           ;incstack = 0
  4447                           ; Regs used in _UARTSendChar: [wreg]
  4448                           ;UARTSendChar@c stored from wreg
  4449  0D00  00F0               	movwf	UARTSendChar@c
  4450  0D01                     l1525:
  4451  0D01                     l84:	
  4452                           ;UART.c: 40:     while (TXSTAbits.TRMT == 0);
  4453                           
  4454  0D01  1683               	bsf	3,5	;RP0=1, select bank1
  4455  0D02  1303               	bcf	3,6	;RP1=0, select bank1
  4456  0D03  1C98               	btfss	24,1	;volatile
  4457  0D04  2D06               	goto	u1751
  4458  0D05  2D07               	goto	u1750
  4459  0D06                     u1751:
  4460  0D06  2D01               	goto	l84
  4461  0D07                     u1750:
  4462  0D07                     l1527:
  4463                           
  4464                           ;UART.c: 41:     TXREG = c;
  4465  0D07  0870               	movf	UARTSendChar@c,w
  4466  0D08  1283               	bcf	3,5	;RP0=0, select bank0
  4467  0D09  1303               	bcf	3,6	;RP1=0, select bank0
  4468  0D0A  0099               	movwf	25	;volatile
  4469  0D0B                     l87:
  4470  0D0B  0008               	return
  4471  0D0C                     __end_of_UARTSendChar:
  4472                           
  4473                           	psect	text19
  4474  0093                     __ptext19:	
  4475 ;; *************** function _UARTInit *****************
  4476 ;; Defined at:
  4477 ;;		line 8 in file "UART.c"
  4478 ;; Parameters:    Size  Location     Type
  4479 ;;  baud_rate       4    0[BANK0 ] const unsigned long 
  4480 ;;  BRGH            1    4[BANK0 ] const unsigned char 
  4481 ;; Auto vars:     Size  Location     Type
  4482 ;;		None
  4483 ;; Return value:  Size  Location     Type
  4484 ;;                  1    wreg      void 
  4485 ;; Registers used:
  4486 ;;		wreg, status,2, status,0, pclath, cstack
  4487 ;; Tracked objects:
  4488 ;;		On entry : 0/0
  4489 ;;		On exit  : 0/0
  4490 ;;		Unchanged: 0/0
  4491 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4492 ;;      Params:         0       5       0       0       0
  4493 ;;      Locals:         0       0       0       0       0
  4494 ;;      Temps:          0       4       0       0       0
  4495 ;;      Totals:         0       9       0       0       0
  4496 ;;Total ram usage:        9 bytes
  4497 ;; Hardware stack levels used:    1
  4498 ;; Hardware stack levels required when called:    1
  4499 ;; This function calls:
  4500 ;;		___lldiv
  4501 ;; This function is called by:
  4502 ;;		_main
  4503 ;; This function uses a non-reentrant model
  4504 ;;
  4505                           
  4506                           
  4507                           ;psect for function _UARTInit
  4508  0093                     _UARTInit:
  4509  0093                     l1973:	
  4510                           ;incstack = 0
  4511                           ; Regs used in _UARTInit: [wreg+status,2+status,0+pclath+cstack]
  4512                           
  4513                           
  4514                           ;UART.c: 10:     if (BRGH == 0) {
  4515  0093  1283               	bcf	3,5	;RP0=0, select bank0
  4516  0094  1303               	bcf	3,6	;RP1=0, select bank0
  4517  0095  0824               	movf	UARTInit@BRGH,w
  4518  0096  1D03               	btfss	3,2
  4519  0097  2899               	goto	u2841
  4520  0098  289A               	goto	u2840
  4521  0099                     u2841:
  4522  0099  28C7               	goto	l1979
  4523  009A                     u2840:
  4524  009A                     l1975:
  4525                           
  4526                           ;UART.c: 11:         SPBRG = 4000000/(64*baud_rate) - 1;
  4527  009A  0820               	movf	UARTInit@baud_rate,w
  4528  009B  00A5               	movwf	??_UARTInit
  4529  009C  0821               	movf	UARTInit@baud_rate+1,w
  4530  009D  00A6               	movwf	??_UARTInit+1
  4531  009E  0822               	movf	UARTInit@baud_rate+2,w
  4532  009F  00A7               	movwf	??_UARTInit+2
  4533  00A0  0823               	movf	UARTInit@baud_rate+3,w
  4534  00A1  00A8               	movwf	??_UARTInit+3
  4535  00A2  3006               	movlw	6
  4536  00A3                     u2855:
  4537  00A3  1003               	clrc
  4538  00A4  0DA5               	rlf	??_UARTInit,f
  4539  00A5  0DA6               	rlf	??_UARTInit+1,f
  4540  00A6  0DA7               	rlf	??_UARTInit+2,f
  4541  00A7  0DA8               	rlf	??_UARTInit+3,f
  4542  00A8                     u2850:
  4543  00A8  3EFF               	addlw	-1
  4544  00A9  1D03               	skipz
  4545  00AA  28A3               	goto	u2855
  4546  00AB  0828               	movf	??_UARTInit+3,w
  4547  00AC  00F3               	movwf	___lldiv@divisor+3
  4548  00AD  0827               	movf	??_UARTInit+2,w
  4549  00AE  00F2               	movwf	___lldiv@divisor+2
  4550  00AF  0826               	movf	??_UARTInit+1,w
  4551  00B0  00F1               	movwf	___lldiv@divisor+1
  4552  00B1  0825               	movf	??_UARTInit,w
  4553  00B2  00F0               	movwf	___lldiv@divisor
  4554  00B3  3000               	movlw	0
  4555  00B4  00F7               	movwf	___lldiv@dividend+3
  4556  00B5  303D               	movlw	61
  4557  00B6  00F6               	movwf	___lldiv@dividend+2
  4558  00B7  3009               	movlw	9
  4559  00B8  00F5               	movwf	___lldiv@dividend+1
  4560  00B9  3000               	movlw	0
  4561  00BA  00F4               	movwf	___lldiv@dividend
  4562  00BB  120A  158A  279A  120A  118A  	fcall	___lldiv
  4563  00C0  0870               	movf	?___lldiv,w
  4564  00C1  3EFF               	addlw	255
  4565  00C2  1683               	bsf	3,5	;RP0=1, select bank1
  4566  00C3  1303               	bcf	3,6	;RP1=0, select bank1
  4567  00C4  0099               	movwf	25	;volatile
  4568  00C5                     l1977:
  4569                           
  4570                           ;UART.c: 12:         TXSTAbits.BRGH = 0;
  4571  00C5  1118               	bcf	24,2	;volatile
  4572                           
  4573                           ;UART.c: 13:     } else {
  4574  00C6  28F3               	goto	l1983
  4575  00C7                     l1979:
  4576                           
  4577                           ;UART.c: 14:         SPBRG = 4000000/(16*baud_rate) - 1;
  4578  00C7  0820               	movf	UARTInit@baud_rate,w
  4579  00C8  00A5               	movwf	??_UARTInit
  4580  00C9  0821               	movf	UARTInit@baud_rate+1,w
  4581  00CA  00A6               	movwf	??_UARTInit+1
  4582  00CB  0822               	movf	UARTInit@baud_rate+2,w
  4583  00CC  00A7               	movwf	??_UARTInit+2
  4584  00CD  0823               	movf	UARTInit@baud_rate+3,w
  4585  00CE  00A8               	movwf	??_UARTInit+3
  4586  00CF  3004               	movlw	4
  4587  00D0                     u2865:
  4588  00D0  1003               	clrc
  4589  00D1  0DA5               	rlf	??_UARTInit,f
  4590  00D2  0DA6               	rlf	??_UARTInit+1,f
  4591  00D3  0DA7               	rlf	??_UARTInit+2,f
  4592  00D4  0DA8               	rlf	??_UARTInit+3,f
  4593  00D5                     u2860:
  4594  00D5  3EFF               	addlw	-1
  4595  00D6  1D03               	skipz
  4596  00D7  28D0               	goto	u2865
  4597  00D8  0828               	movf	??_UARTInit+3,w
  4598  00D9  00F3               	movwf	___lldiv@divisor+3
  4599  00DA  0827               	movf	??_UARTInit+2,w
  4600  00DB  00F2               	movwf	___lldiv@divisor+2
  4601  00DC  0826               	movf	??_UARTInit+1,w
  4602  00DD  00F1               	movwf	___lldiv@divisor+1
  4603  00DE  0825               	movf	??_UARTInit,w
  4604  00DF  00F0               	movwf	___lldiv@divisor
  4605  00E0  3000               	movlw	0
  4606  00E1  00F7               	movwf	___lldiv@dividend+3
  4607  00E2  303D               	movlw	61
  4608  00E3  00F6               	movwf	___lldiv@dividend+2
  4609  00E4  3009               	movlw	9
  4610  00E5  00F5               	movwf	___lldiv@dividend+1
  4611  00E6  3000               	movlw	0
  4612  00E7  00F4               	movwf	___lldiv@dividend
  4613  00E8  120A  158A  279A  120A  118A  	fcall	___lldiv
  4614  00ED  0870               	movf	?___lldiv,w
  4615  00EE  3EFF               	addlw	255
  4616  00EF  1683               	bsf	3,5	;RP0=1, select bank1
  4617  00F0  1303               	bcf	3,6	;RP1=0, select bank1
  4618  00F1  0099               	movwf	25	;volatile
  4619  00F2                     l1981:
  4620                           
  4621                           ;UART.c: 15:         TXSTAbits.BRGH = 1;
  4622  00F2  1518               	bsf	24,2	;volatile
  4623  00F3                     l1983:
  4624                           
  4625                           ;UART.c: 19:     TXSTAbits.TX9 = 0;
  4626  00F3  1318               	bcf	24,6	;volatile
  4627  00F4                     l1985:
  4628                           
  4629                           ;UART.c: 20:     TXSTAbits.TXEN = 1;
  4630  00F4  1698               	bsf	24,5	;volatile
  4631  00F5                     l1987:
  4632                           
  4633                           ;UART.c: 21:     TXSTAbits.SYNC = 0;
  4634  00F5  1218               	bcf	24,4	;volatile
  4635  00F6                     l1989:
  4636                           
  4637                           ;UART.c: 24:     RCSTAbits.SPEN = 1;
  4638  00F6  1283               	bcf	3,5	;RP0=0, select bank0
  4639  00F7  1303               	bcf	3,6	;RP1=0, select bank0
  4640  00F8  1798               	bsf	24,7	;volatile
  4641  00F9                     l1991:
  4642                           
  4643                           ;UART.c: 25:     RCSTAbits.RX9 = 0;
  4644  00F9  1318               	bcf	24,6	;volatile
  4645  00FA                     l1993:
  4646                           
  4647                           ;UART.c: 26:     RCSTAbits.CREN = 1;
  4648  00FA  1618               	bsf	24,4	;volatile
  4649  00FB                     l1995:
  4650                           
  4651                           ;UART.c: 27:     RCSTAbits.FERR = 0;
  4652  00FB  1118               	bcf	24,2	;volatile
  4653  00FC                     l1997:
  4654                           
  4655                           ;UART.c: 28:     RCSTAbits.OERR = 0;
  4656  00FC  1098               	bcf	24,1	;volatile
  4657  00FD                     l1999:
  4658                           
  4659                           ;UART.c: 31:     TRISCbits.TRISC7 = 1;
  4660  00FD  1683               	bsf	3,5	;RP0=1, select bank1
  4661  00FE  1303               	bcf	3,6	;RP1=0, select bank1
  4662  00FF  1787               	bsf	7,7	;volatile
  4663  0100                     l2001:
  4664                           
  4665                           ;UART.c: 32:     TRISCbits.TRISC6 = 0;
  4666  0100  1307               	bcf	7,6	;volatile
  4667  0101                     l81:
  4668  0101  0008               	return
  4669  0102                     __end_of_UARTInit:
  4670                           
  4671                           	psect	text20
  4672  0F9A                     __ptext20:	
  4673 ;; *************** function ___lldiv *****************
  4674 ;; Defined at:
  4675 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\__lldiv.c"
  4676 ;; Parameters:    Size  Location     Type
  4677 ;;  divisor         4    0[COMMON] unsigned long 
  4678 ;;  dividend        4    4[COMMON] unsigned long 
  4679 ;; Auto vars:     Size  Location     Type
  4680 ;;  quotient        4    9[COMMON] unsigned long 
  4681 ;;  counter         1   13[COMMON] unsigned char 
  4682 ;; Return value:  Size  Location     Type
  4683 ;;                  4    0[COMMON] unsigned long 
  4684 ;; Registers used:
  4685 ;;		wreg, status,2, status,0
  4686 ;; Tracked objects:
  4687 ;;		On entry : 0/0
  4688 ;;		On exit  : 0/0
  4689 ;;		Unchanged: 0/0
  4690 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4691 ;;      Params:         8       0       0       0       0
  4692 ;;      Locals:         5       0       0       0       0
  4693 ;;      Temps:          1       0       0       0       0
  4694 ;;      Totals:        14       0       0       0       0
  4695 ;;Total ram usage:       14 bytes
  4696 ;; Hardware stack levels used:    1
  4697 ;; This function calls:
  4698 ;;		Nothing
  4699 ;; This function is called by:
  4700 ;;		_UARTInit
  4701 ;; This function uses a non-reentrant model
  4702 ;;
  4703                           
  4704                           
  4705                           ;psect for function ___lldiv
  4706  0F9A                     ___lldiv:
  4707  0F9A                     l1579:	
  4708                           ;incstack = 0
  4709                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  4710                           
  4711  0F9A  3000               	movlw	0
  4712  0F9B  00FC               	movwf	___lldiv@quotient+3
  4713  0F9C  3000               	movlw	0
  4714  0F9D  00FB               	movwf	___lldiv@quotient+2
  4715  0F9E  3000               	movlw	0
  4716  0F9F  00FA               	movwf	___lldiv@quotient+1
  4717  0FA0  3000               	movlw	0
  4718  0FA1  00F9               	movwf	___lldiv@quotient
  4719  0FA2  0873               	movf	___lldiv@divisor+3,w
  4720  0FA3  0472               	iorwf	___lldiv@divisor+2,w
  4721  0FA4  0471               	iorwf	___lldiv@divisor+1,w
  4722  0FA5  0470               	iorwf	___lldiv@divisor,w
  4723  0FA6  1903               	skipnz
  4724  0FA7  2FA9               	goto	u1831
  4725  0FA8  2FAA               	goto	u1830
  4726  0FA9                     u1831:
  4727  0FA9  2FF7               	goto	l1599
  4728  0FAA                     u1830:
  4729  0FAA                     l1581:
  4730  0FAA  01FD               	clrf	___lldiv@counter
  4731  0FAB  0AFD               	incf	___lldiv@counter,f
  4732  0FAC  2FBA               	goto	l1585
  4733  0FAD                     l1583:
  4734  0FAD  3001               	movlw	1
  4735  0FAE  00F8               	movwf	??___lldiv
  4736  0FAF                     u1845:
  4737  0FAF  1003               	clrc
  4738  0FB0  0DF0               	rlf	___lldiv@divisor,f
  4739  0FB1  0DF1               	rlf	___lldiv@divisor+1,f
  4740  0FB2  0DF2               	rlf	___lldiv@divisor+2,f
  4741  0FB3  0DF3               	rlf	___lldiv@divisor+3,f
  4742  0FB4  0BF8               	decfsz	??___lldiv,f
  4743  0FB5  2FAF               	goto	u1845
  4744  0FB6  3001               	movlw	1
  4745  0FB7  00F8               	movwf	??___lldiv
  4746  0FB8  0878               	movf	??___lldiv,w
  4747  0FB9  07FD               	addwf	___lldiv@counter,f
  4748  0FBA                     l1585:
  4749  0FBA  1FF3               	btfss	___lldiv@divisor+3,7
  4750  0FBB  2FBD               	goto	u1851
  4751  0FBC  2FBE               	goto	u1850
  4752  0FBD                     u1851:
  4753  0FBD  2FAD               	goto	l1583
  4754  0FBE                     u1850:
  4755  0FBE                     l1587:
  4756  0FBE  3001               	movlw	1
  4757  0FBF  00F8               	movwf	??___lldiv
  4758  0FC0                     u1865:
  4759  0FC0  1003               	clrc
  4760  0FC1  0DF9               	rlf	___lldiv@quotient,f
  4761  0FC2  0DFA               	rlf	___lldiv@quotient+1,f
  4762  0FC3  0DFB               	rlf	___lldiv@quotient+2,f
  4763  0FC4  0DFC               	rlf	___lldiv@quotient+3,f
  4764  0FC5  0BF8               	decfsz	??___lldiv,f
  4765  0FC6  2FC0               	goto	u1865
  4766  0FC7                     l1589:
  4767  0FC7  0873               	movf	___lldiv@divisor+3,w
  4768  0FC8  0277               	subwf	___lldiv@dividend+3,w
  4769  0FC9  1D03               	skipz
  4770  0FCA  2FD5               	goto	u1875
  4771  0FCB  0872               	movf	___lldiv@divisor+2,w
  4772  0FCC  0276               	subwf	___lldiv@dividend+2,w
  4773  0FCD  1D03               	skipz
  4774  0FCE  2FD5               	goto	u1875
  4775  0FCF  0871               	movf	___lldiv@divisor+1,w
  4776  0FD0  0275               	subwf	___lldiv@dividend+1,w
  4777  0FD1  1D03               	skipz
  4778  0FD2  2FD5               	goto	u1875
  4779  0FD3  0870               	movf	___lldiv@divisor,w
  4780  0FD4  0274               	subwf	___lldiv@dividend,w
  4781  0FD5                     u1875:
  4782  0FD5  1C03               	skipc
  4783  0FD6  2FD8               	goto	u1871
  4784  0FD7  2FD9               	goto	u1870
  4785  0FD8                     u1871:
  4786  0FD8  2FE8               	goto	l1595
  4787  0FD9                     u1870:
  4788  0FD9                     l1591:
  4789  0FD9  0870               	movf	___lldiv@divisor,w
  4790  0FDA  02F4               	subwf	___lldiv@dividend,f
  4791  0FDB  0871               	movf	___lldiv@divisor+1,w
  4792  0FDC  1C03               	skipc
  4793  0FDD  0F71               	incfsz	___lldiv@divisor+1,w
  4794  0FDE  02F5               	subwf	___lldiv@dividend+1,f
  4795  0FDF  0872               	movf	___lldiv@divisor+2,w
  4796  0FE0  1C03               	skipc
  4797  0FE1  0F72               	incfsz	___lldiv@divisor+2,w
  4798  0FE2  02F6               	subwf	___lldiv@dividend+2,f
  4799  0FE3  0873               	movf	___lldiv@divisor+3,w
  4800  0FE4  1C03               	skipc
  4801  0FE5  0F73               	incfsz	___lldiv@divisor+3,w
  4802  0FE6  02F7               	subwf	___lldiv@dividend+3,f
  4803  0FE7                     l1593:
  4804  0FE7  1479               	bsf	___lldiv@quotient,0
  4805  0FE8                     l1595:
  4806  0FE8  3001               	movlw	1
  4807  0FE9                     u1885:
  4808  0FE9  1003               	clrc
  4809  0FEA  0CF3               	rrf	___lldiv@divisor+3,f
  4810  0FEB  0CF2               	rrf	___lldiv@divisor+2,f
  4811  0FEC  0CF1               	rrf	___lldiv@divisor+1,f
  4812  0FED  0CF0               	rrf	___lldiv@divisor,f
  4813  0FEE  3EFF               	addlw	-1
  4814  0FEF  1D03               	skipz
  4815  0FF0  2FE9               	goto	u1885
  4816  0FF1                     l1597:
  4817  0FF1  3001               	movlw	1
  4818  0FF2  02FD               	subwf	___lldiv@counter,f
  4819  0FF3  1D03               	btfss	3,2
  4820  0FF4  2FF6               	goto	u1891
  4821  0FF5  2FF7               	goto	u1890
  4822  0FF6                     u1891:
  4823  0FF6  2FBE               	goto	l1587
  4824  0FF7                     u1890:
  4825  0FF7                     l1599:
  4826  0FF7  087C               	movf	___lldiv@quotient+3,w
  4827  0FF8  00F3               	movwf	?___lldiv+3
  4828  0FF9  087B               	movf	___lldiv@quotient+2,w
  4829  0FFA  00F2               	movwf	?___lldiv+2
  4830  0FFB  087A               	movf	___lldiv@quotient+1,w
  4831  0FFC  00F1               	movwf	?___lldiv+1
  4832  0FFD  0879               	movf	___lldiv@quotient,w
  4833  0FFE  00F0               	movwf	?___lldiv
  4834  0FFF                     l325:
  4835  0FFF  0008               	return
  4836  1000                     __end_of___lldiv:
  4837                           
  4838                           	psect	text21
  4839  0E18                     __ptext21:	
  4840 ;; *************** function _LcdWriteString *****************
  4841 ;; Defined at:
  4842 ;;		line 64 in file "LCD8btis.c"
  4843 ;; Parameters:    Size  Location     Type
  4844 ;;  value           2    4[COMMON] PTR const unsigned char 
  4845 ;;		 -> NULL(0), int2String@cadena(4), adcToString@salida(5), STR_2(3), 
  4846 ;;		 -> STR_1(17), 
  4847 ;; Auto vars:     Size  Location     Type
  4848 ;;  i               2    9[COMMON] int 
  4849 ;; Return value:  Size  Location     Type
  4850 ;;                  1    wreg      void 
  4851 ;; Registers used:
  4852 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4853 ;; Tracked objects:
  4854 ;;		On entry : 0/0
  4855 ;;		On exit  : 0/0
  4856 ;;		Unchanged: 0/0
  4857 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4858 ;;      Params:         2       0       0       0       0
  4859 ;;      Locals:         2       0       0       0       0
  4860 ;;      Temps:          3       0       0       0       0
  4861 ;;      Totals:         7       0       0       0       0
  4862 ;;Total ram usage:        7 bytes
  4863 ;; Hardware stack levels used:    1
  4864 ;; Hardware stack levels required when called:    2
  4865 ;; This function calls:
  4866 ;;		_LcdWriteChar
  4867 ;; This function is called by:
  4868 ;;		_main
  4869 ;; This function uses a non-reentrant model
  4870 ;;
  4871                           
  4872                           
  4873                           ;psect for function _LcdWriteString
  4874  0E18                     _LcdWriteString:
  4875  0E18                     l2017:	
  4876                           ;incstack = 0
  4877                           ; Regs used in _LcdWriteString: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4878                           
  4879                           
  4880                           ;LCD8btis.c: 66:     for (int i = 0; value[i] != '\0'; i++)
  4881  0E18  01F9               	clrf	LcdWriteString@i
  4882  0E19  01FA               	clrf	LcdWriteString@i+1
  4883  0E1A  2E3D               	goto	l2023
  4884  0E1B                     l2019:
  4885                           
  4886                           ;LCD8btis.c: 67:         LcdWriteChar(value[i]);
  4887  0E1B  0879               	movf	LcdWriteString@i,w
  4888  0E1C  0774               	addwf	LcdWriteString@value,w
  4889  0E1D  00F7               	movwf	??_LcdWriteString+1
  4890  0E1E  0875               	movf	LcdWriteString@value+1,w
  4891  0E1F  00F6               	movwf	??_LcdWriteString
  4892  0E20  1803               	skipnc
  4893  0E21  0AF6               	incf	??_LcdWriteString,f
  4894  0E22  1FF9               	btfss	LcdWriteString@i,7
  4895  0E23  2E25               	goto	u2870
  4896  0E24  03F6               	decf	??_LcdWriteString,f
  4897  0E25                     u2870:
  4898  0E25  0876               	movf	??_LcdWriteString,w
  4899  0E26  00F8               	movwf	??_LcdWriteString+2
  4900  0E27  0878               	movf	??_LcdWriteString+2,w
  4901  0E28  1283               	bcf	3,5	;RP0=0, select bank0
  4902  0E29  1303               	bcf	3,6	;RP1=0, select bank0
  4903  0E2A  00FF               	movwf	btemp+1
  4904  0E2B  0877               	movf	??_LcdWriteString+1,w
  4905  0E2C  0084               	movwf	4
  4906  0E2D  120A  158A  2000  120A  158A  	fcall	stringtab
  4907  0E32  120A  158A  250C  120A  158A  	fcall	_LcdWriteChar
  4908  0E37                     l2021:
  4909  0E37  3001               	movlw	1
  4910  0E38  07F9               	addwf	LcdWriteString@i,f
  4911  0E39  1803               	skipnc
  4912  0E3A  0AFA               	incf	LcdWriteString@i+1,f
  4913  0E3B  3000               	movlw	0
  4914  0E3C  07FA               	addwf	LcdWriteString@i+1,f
  4915  0E3D                     l2023:
  4916  0E3D  0879               	movf	LcdWriteString@i,w
  4917  0E3E  0774               	addwf	LcdWriteString@value,w
  4918  0E3F  00F7               	movwf	??_LcdWriteString+1
  4919  0E40  0875               	movf	LcdWriteString@value+1,w
  4920  0E41  00F6               	movwf	??_LcdWriteString
  4921  0E42  1803               	skipnc
  4922  0E43  0AF6               	incf	??_LcdWriteString,f
  4923  0E44  1FF9               	btfss	LcdWriteString@i,7
  4924  0E45  2E47               	goto	u2880
  4925  0E46  03F6               	decf	??_LcdWriteString,f
  4926  0E47                     u2880:
  4927  0E47  0876               	movf	??_LcdWriteString,w
  4928  0E48  00F8               	movwf	??_LcdWriteString+2
  4929  0E49  0878               	movf	??_LcdWriteString+2,w
  4930  0E4A  1283               	bcf	3,5	;RP0=0, select bank0
  4931  0E4B  1303               	bcf	3,6	;RP1=0, select bank0
  4932  0E4C  00FF               	movwf	btemp+1
  4933  0E4D  0877               	movf	??_LcdWriteString+1,w
  4934  0E4E  0084               	movwf	4
  4935  0E4F  120A  158A  2000  120A  158A  	fcall	stringtab
  4936  0E54  3A00               	xorlw	0
  4937  0E55  1D03               	skipz
  4938  0E56  2E58               	goto	u2891
  4939  0E57  2E59               	goto	u2890
  4940  0E58                     u2891:
  4941  0E58  2E1B               	goto	l2019
  4942  0E59                     u2890:
  4943  0E59                     l163:
  4944  0E59  0008               	return
  4945  0E5A                     __end_of_LcdWriteString:
  4946                           
  4947                           	psect	text22
  4948  0D0C                     __ptext22:	
  4949 ;; *************** function _LcdWriteChar *****************
  4950 ;; Defined at:
  4951 ;;		line 56 in file "LCD8btis.c"
  4952 ;; Parameters:    Size  Location     Type
  4953 ;;  value           1    wreg     unsigned char 
  4954 ;; Auto vars:     Size  Location     Type
  4955 ;;  value           1    3[COMMON] unsigned char 
  4956 ;; Return value:  Size  Location     Type
  4957 ;;                  1    wreg      void 
  4958 ;; Registers used:
  4959 ;;		wreg, status,2, status,0, pclath, cstack
  4960 ;; Tracked objects:
  4961 ;;		On entry : 0/0
  4962 ;;		On exit  : 0/0
  4963 ;;		Unchanged: 0/0
  4964 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4965 ;;      Params:         0       0       0       0       0
  4966 ;;      Locals:         1       0       0       0       0
  4967 ;;      Temps:          1       0       0       0       0
  4968 ;;      Totals:         2       0       0       0       0
  4969 ;;Total ram usage:        2 bytes
  4970 ;; Hardware stack levels used:    1
  4971 ;; Hardware stack levels required when called:    1
  4972 ;; This function calls:
  4973 ;;		_LcdPort
  4974 ;; This function is called by:
  4975 ;;		_main
  4976 ;;		_LcdWriteString
  4977 ;; This function uses a non-reentrant model
  4978 ;;
  4979                           
  4980                           
  4981                           ;psect for function _LcdWriteChar
  4982  0D0C                     _LcdWriteChar:
  4983                           
  4984                           ;incstack = 0
  4985                           ; Regs used in _LcdWriteChar: [wreg+status,2+status,0+pclath+cstack]
  4986                           ;LcdWriteChar@value stored from wreg
  4987  0D0C  00F3               	movwf	LcdWriteChar@value
  4988  0D0D                     l1529:
  4989                           
  4990                           ;LCD8btis.c: 57:     RE1 = 1;
  4991  0D0D  1283               	bcf	3,5	;RP0=0, select bank0
  4992  0D0E  1303               	bcf	3,6	;RP1=0, select bank0
  4993  0D0F  1489               	bsf	9,1	;volatile
  4994  0D10                     l1531:
  4995                           
  4996                           ;LCD8btis.c: 58:     LcdPort(value);
  4997  0D10  0873               	movf	LcdWriteChar@value,w
  4998  0D11  120A  118A  217E  120A  158A  	fcall	_LcdPort
  4999  0D16                     l1533:
  5000                           
  5001                           ;LCD8btis.c: 59:     RE0 = 1;
  5002  0D16  1283               	bcf	3,5	;RP0=0, select bank0
  5003  0D17  1303               	bcf	3,6	;RP1=0, select bank0
  5004  0D18  1409               	bsf	9,0	;volatile
  5005  0D19                     l1535:
  5006                           
  5007                           ;LCD8btis.c: 60:     _delay((unsigned long)((40)*(4000000/4000000.0)));
  5008  0D19  300D               	movlw	13
  5009  0D1A  00F2               	movwf	??_LcdWriteChar
  5010  0D1B                     u2927:
  5011  0D1B  0BF2               	decfsz	??_LcdWriteChar,f
  5012  0D1C  2D1B               	goto	u2927
  5013  0D1D                     l1537:
  5014                           
  5015                           ;LCD8btis.c: 61:     RE0 = 0;
  5016  0D1D  1283               	bcf	3,5	;RP0=0, select bank0
  5017  0D1E  1303               	bcf	3,6	;RP1=0, select bank0
  5018  0D1F  1009               	bcf	9,0	;volatile
  5019  0D20                     l157:
  5020  0D20  0008               	return
  5021  0D21                     __end_of_LcdWriteChar:
  5022                           
  5023                           	psect	text23
  5024  0D66                     __ptext23:	
  5025 ;; *************** function _LcdSetCursor *****************
  5026 ;; Defined at:
  5027 ;;		line 29 in file "LCD8btis.c"
  5028 ;; Parameters:    Size  Location     Type
  5029 ;;  row             1    wreg     unsigned char 
  5030 ;;  column          1    5[COMMON] unsigned char 
  5031 ;; Auto vars:     Size  Location     Type
  5032 ;;  row             1    8[COMMON] unsigned char 
  5033 ;; Return value:  Size  Location     Type
  5034 ;;                  1    wreg      void 
  5035 ;; Registers used:
  5036 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5037 ;; Tracked objects:
  5038 ;;		On entry : 0/0
  5039 ;;		On exit  : 0/0
  5040 ;;		Unchanged: 0/0
  5041 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5042 ;;      Params:         1       0       0       0       0
  5043 ;;      Locals:         1       0       0       0       0
  5044 ;;      Temps:          2       0       0       0       0
  5045 ;;      Totals:         4       0       0       0       0
  5046 ;;Total ram usage:        4 bytes
  5047 ;; Hardware stack levels used:    1
  5048 ;; Hardware stack levels required when called:    2
  5049 ;; This function calls:
  5050 ;;		_LcdCmd
  5051 ;; This function is called by:
  5052 ;;		_main
  5053 ;; This function uses a non-reentrant model
  5054 ;;
  5055                           
  5056                           
  5057                           ;psect for function _LcdSetCursor
  5058  0D66                     _LcdSetCursor:
  5059                           
  5060                           ;incstack = 0
  5061                           ; Regs used in _LcdSetCursor: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5062                           ;LcdSetCursor@row stored from wreg
  5063  0D66  00F8               	movwf	LcdSetCursor@row
  5064  0D67                     l2003:
  5065                           
  5066                           ;LCD8btis.c: 30:     switch(row){
  5067  0D67  2D78               	goto	l2011
  5068  0D68                     l2005:
  5069                           
  5070                           ;LCD8btis.c: 32:             LcdCmd(0x80 + column - 1);
  5071  0D68  0875               	movf	LcdSetCursor@column,w
  5072  0D69  3E7F               	addlw	127
  5073  0D6A  120A  158A  254C  120A  158A  	fcall	_LcdCmd
  5074                           
  5075                           ;LCD8btis.c: 33:             break;
  5076  0D6F  2D88               	goto	l151
  5077  0D70                     l2007:
  5078                           
  5079                           ;LCD8btis.c: 35:             LcdCmd(0xC0 + column - 1);
  5080  0D70  0875               	movf	LcdSetCursor@column,w
  5081  0D71  3EBF               	addlw	191
  5082  0D72  120A  158A  254C  120A  158A  	fcall	_LcdCmd
  5083                           
  5084                           ;LCD8btis.c: 36:             break;
  5085  0D77  2D88               	goto	l151
  5086  0D78                     l2011:
  5087  0D78  0878               	movf	LcdSetCursor@row,w
  5088  0D79  00F6               	movwf	??_LcdSetCursor
  5089  0D7A  01F7               	clrf	??_LcdSetCursor+1
  5090                           
  5091                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5092                           ; Switch size 1, requested type "simple"
  5093                           ; Number of cases is 1, Range of values is 0 to 0
  5094                           ; switch strategies available:
  5095                           ; Name         Instructions Cycles
  5096                           ; simple_byte            4     3 (average)
  5097                           ; direct_byte           11     8 (fixed)
  5098                           ; jumptable            260     6 (fixed)
  5099                           ;	Chosen strategy is simple_byte
  5100  0D7B  0877               	movf	??_LcdSetCursor+1,w
  5101  0D7C  3A00               	xorlw	0	; case 0
  5102  0D7D  1903               	skipnz
  5103  0D7E  2D80               	goto	l2185
  5104  0D7F  2D88               	goto	l151
  5105  0D80                     l2185:
  5106                           
  5107                           ; Switch size 1, requested type "simple"
  5108                           ; Number of cases is 2, Range of values is 1 to 2
  5109                           ; switch strategies available:
  5110                           ; Name         Instructions Cycles
  5111                           ; simple_byte            7     4 (average)
  5112                           ; direct_byte           17    11 (fixed)
  5113                           ; jumptable            263     9 (fixed)
  5114                           ;	Chosen strategy is simple_byte
  5115  0D80  0876               	movf	??_LcdSetCursor,w
  5116  0D81  3A01               	xorlw	1	; case 1
  5117  0D82  1903               	skipnz
  5118  0D83  2D68               	goto	l2005
  5119  0D84  3A03               	xorlw	3	; case 2
  5120  0D85  1903               	skipnz
  5121  0D86  2D70               	goto	l2007
  5122  0D87  2D88               	goto	l151
  5123  0D88                     l151:
  5124  0D88  0008               	return
  5125  0D89                     __end_of_LcdSetCursor:
  5126                           
  5127                           	psect	text24
  5128  0E9E                     __ptext24:	
  5129 ;; *************** function _LcdInit *****************
  5130 ;; Defined at:
  5131 ;;		line 41 in file "LCD8btis.c"
  5132 ;; Parameters:    Size  Location     Type
  5133 ;;		None
  5134 ;; Auto vars:     Size  Location     Type
  5135 ;;		None
  5136 ;; Return value:  Size  Location     Type
  5137 ;;                  1    wreg      void 
  5138 ;; Registers used:
  5139 ;;		wreg, status,2, status,0, pclath, cstack
  5140 ;; Tracked objects:
  5141 ;;		On entry : 0/0
  5142 ;;		On exit  : 0/0
  5143 ;;		Unchanged: 0/0
  5144 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5145 ;;      Params:         0       0       0       0       0
  5146 ;;      Locals:         0       0       0       0       0
  5147 ;;      Temps:          2       0       0       0       0
  5148 ;;      Totals:         2       0       0       0       0
  5149 ;;Total ram usage:        2 bytes
  5150 ;; Hardware stack levels used:    1
  5151 ;; Hardware stack levels required when called:    2
  5152 ;; This function calls:
  5153 ;;		_LcdCmd
  5154 ;;		_LcdPort
  5155 ;; This function is called by:
  5156 ;;		_main
  5157 ;; This function uses a non-reentrant model
  5158 ;;
  5159                           
  5160                           
  5161                           ;psect for function _LcdInit
  5162  0E9E                     _LcdInit:
  5163  0E9E                     l1963:	
  5164                           ;incstack = 0
  5165                           ; Regs used in _LcdInit: [wreg+status,2+status,0+pclath+cstack]
  5166                           
  5167                           
  5168                           ;LCD8btis.c: 42:     LcdPort(0x00);
  5169  0E9E  3000               	movlw	0
  5170  0E9F  120A  118A  217E  120A  158A  	fcall	_LcdPort
  5171  0EA4                     l1965:
  5172                           
  5173                           ;LCD8btis.c: 43:     _delay((unsigned long)((20)*(4000000/4000.0)));
  5174  0EA4  301A               	movlw	26
  5175  0EA5  00F6               	movwf	??_LcdInit+1
  5176  0EA6  30F8               	movlw	248
  5177  0EA7  00F5               	movwf	??_LcdInit
  5178  0EA8                     u2937:
  5179  0EA8  0BF5               	decfsz	??_LcdInit,f
  5180  0EA9  2EA8               	goto	u2937
  5181  0EAA  0BF6               	decfsz	??_LcdInit+1,f
  5182  0EAB  2EA8               	goto	u2937
  5183  0EAC  0000               	nop
  5184  0EAD                     l1967:
  5185                           
  5186                           ;LCD8btis.c: 44:     LcdCmd(0x30);
  5187  0EAD  3030               	movlw	48
  5188  0EAE  120A  158A  254C  120A  158A  	fcall	_LcdCmd
  5189                           
  5190                           ;LCD8btis.c: 45:     _delay((unsigned long)((5)*(4000000/4000.0)));
  5191  0EB3  3007               	movlw	7
  5192  0EB4  00F6               	movwf	??_LcdInit+1
  5193  0EB5  307D               	movlw	125
  5194  0EB6  00F5               	movwf	??_LcdInit
  5195  0EB7                     u2947:
  5196  0EB7  0BF5               	decfsz	??_LcdInit,f
  5197  0EB8  2EB7               	goto	u2947
  5198  0EB9  0BF6               	decfsz	??_LcdInit+1,f
  5199  0EBA  2EB7               	goto	u2947
  5200  0EBB                     l1969:
  5201                           
  5202                           ;LCD8btis.c: 46:     LcdCmd(0x30);
  5203  0EBB  3030               	movlw	48
  5204  0EBC  120A  158A  254C  120A  158A  	fcall	_LcdCmd
  5205  0EC1                     l1971:
  5206                           
  5207                           ;LCD8btis.c: 47:     _delay((unsigned long)((11)*(4000000/4000.0)));
  5208  0EC1  300F               	movlw	15
  5209  0EC2  00F6               	movwf	??_LcdInit+1
  5210  0EC3  3047               	movlw	71
  5211  0EC4  00F5               	movwf	??_LcdInit
  5212  0EC5                     u2957:
  5213  0EC5  0BF5               	decfsz	??_LcdInit,f
  5214  0EC6  2EC5               	goto	u2957
  5215  0EC7  0BF6               	decfsz	??_LcdInit+1,f
  5216  0EC8  2EC5               	goto	u2957
  5217  0EC9  2ECA               	nop2
  5218                           
  5219                           ;LCD8btis.c: 48:     LcdCmd(0x30);
  5220  0ECA  3030               	movlw	48
  5221  0ECB  120A  158A  254C  120A  158A  	fcall	_LcdCmd
  5222                           
  5223                           ;LCD8btis.c: 50:     LcdCmd(0x38);
  5224  0ED0  3038               	movlw	56
  5225  0ED1  120A  158A  254C  120A  158A  	fcall	_LcdCmd
  5226                           
  5227                           ;LCD8btis.c: 51:     LcdCmd(0x0C);
  5228  0ED6  300C               	movlw	12
  5229  0ED7  120A  158A  254C  120A  158A  	fcall	_LcdCmd
  5230                           
  5231                           ;LCD8btis.c: 52:     LcdCmd(0x6);
  5232  0EDC  3006               	movlw	6
  5233  0EDD  120A  158A  254C  120A  158A  	fcall	_LcdCmd
  5234  0EE2                     l154:
  5235  0EE2  0008               	return
  5236  0EE3                     __end_of_LcdInit:
  5237                           
  5238                           	psect	text25
  5239  0D4C                     __ptext25:	
  5240 ;; *************** function _LcdCmd *****************
  5241 ;; Defined at:
  5242 ;;		line 16 in file "LCD8btis.c"
  5243 ;; Parameters:    Size  Location     Type
  5244 ;;  value           1    wreg     unsigned char 
  5245 ;; Auto vars:     Size  Location     Type
  5246 ;;  value           1    4[COMMON] unsigned char 
  5247 ;; Return value:  Size  Location     Type
  5248 ;;                  1    wreg      void 
  5249 ;; Registers used:
  5250 ;;		wreg, status,2, status,0, pclath, cstack
  5251 ;; Tracked objects:
  5252 ;;		On entry : 0/0
  5253 ;;		On exit  : 0/0
  5254 ;;		Unchanged: 0/0
  5255 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5256 ;;      Params:         0       0       0       0       0
  5257 ;;      Locals:         1       0       0       0       0
  5258 ;;      Temps:          2       0       0       0       0
  5259 ;;      Totals:         3       0       0       0       0
  5260 ;;Total ram usage:        3 bytes
  5261 ;; Hardware stack levels used:    1
  5262 ;; Hardware stack levels required when called:    1
  5263 ;; This function calls:
  5264 ;;		_LcdPort
  5265 ;; This function is called by:
  5266 ;;		_LcdSetCursor
  5267 ;;		_LcdInit
  5268 ;;		_LcdClear
  5269 ;;		_LcdShiftRight
  5270 ;;		_LcdShiftLeft
  5271 ;; This function uses a non-reentrant model
  5272 ;;
  5273                           
  5274                           
  5275                           ;psect for function _LcdCmd
  5276  0D4C                     _LcdCmd:
  5277                           
  5278                           ;incstack = 0
  5279                           ; Regs used in _LcdCmd: [wreg+status,2+status,0+pclath+cstack]
  5280                           ;LcdCmd@value stored from wreg
  5281  0D4C  00F4               	movwf	LcdCmd@value
  5282  0D4D                     l1539:
  5283                           
  5284                           ;LCD8btis.c: 17:     RE1 = 0;
  5285  0D4D  1283               	bcf	3,5	;RP0=0, select bank0
  5286  0D4E  1303               	bcf	3,6	;RP1=0, select bank0
  5287  0D4F  1089               	bcf	9,1	;volatile
  5288  0D50                     l1541:
  5289                           
  5290                           ;LCD8btis.c: 18:     LcdPort(value);
  5291  0D50  0874               	movf	LcdCmd@value,w
  5292  0D51  120A  118A  217E  120A  158A  	fcall	_LcdPort
  5293  0D56                     l1543:
  5294                           
  5295                           ;LCD8btis.c: 19:     RE0 = 1;
  5296  0D56  1283               	bcf	3,5	;RP0=0, select bank0
  5297  0D57  1303               	bcf	3,6	;RP1=0, select bank0
  5298  0D58  1409               	bsf	9,0	;volatile
  5299  0D59                     l1545:
  5300                           
  5301                           ;LCD8btis.c: 20:     _delay((unsigned long)((4)*(4000000/4000.0)));
  5302  0D59  3006               	movlw	6
  5303  0D5A  00F3               	movwf	??_LcdCmd+1
  5304  0D5B  3030               	movlw	48
  5305  0D5C  00F2               	movwf	??_LcdCmd
  5306  0D5D                     u2967:
  5307  0D5D  0BF2               	decfsz	??_LcdCmd,f
  5308  0D5E  2D5D               	goto	u2967
  5309  0D5F  0BF3               	decfsz	??_LcdCmd+1,f
  5310  0D60  2D5D               	goto	u2967
  5311  0D61  0000               	nop
  5312  0D62                     l1547:
  5313                           
  5314                           ;LCD8btis.c: 21:     RE0 = 0;
  5315  0D62  1283               	bcf	3,5	;RP0=0, select bank0
  5316  0D63  1303               	bcf	3,6	;RP1=0, select bank0
  5317  0D64  1009               	bcf	9,0	;volatile
  5318  0D65                     l141:
  5319  0D65  0008               	return
  5320  0D66                     __end_of_LcdCmd:
  5321                           
  5322                           	psect	text26
  5323  017E                     __ptext26:	
  5324 ;; *************** function _LcdPort *****************
  5325 ;; Defined at:
  5326 ;;		line 3 in file "LCD8btis.c"
  5327 ;; Parameters:    Size  Location     Type
  5328 ;;  value           1    wreg     unsigned char 
  5329 ;; Auto vars:     Size  Location     Type
  5330 ;;  value           1    1[COMMON] unsigned char 
  5331 ;; Return value:  Size  Location     Type
  5332 ;;                  1    wreg      void 
  5333 ;; Registers used:
  5334 ;;		wreg, status,2, status,0
  5335 ;; Tracked objects:
  5336 ;;		On entry : 0/0
  5337 ;;		On exit  : 0/0
  5338 ;;		Unchanged: 0/0
  5339 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5340 ;;      Params:         0       0       0       0       0
  5341 ;;      Locals:         1       0       0       0       0
  5342 ;;      Temps:          1       0       0       0       0
  5343 ;;      Totals:         2       0       0       0       0
  5344 ;;Total ram usage:        2 bytes
  5345 ;; Hardware stack levels used:    1
  5346 ;; This function calls:
  5347 ;;		Nothing
  5348 ;; This function is called by:
  5349 ;;		_LcdCmd
  5350 ;;		_LcdInit
  5351 ;;		_LcdWriteChar
  5352 ;; This function uses a non-reentrant model
  5353 ;;
  5354                           
  5355                           
  5356                           ;psect for function _LcdPort
  5357  017E                     _LcdPort:
  5358                           
  5359                           ;incstack = 0
  5360                           ; Regs used in _LcdPort: [wreg+status,2+status,0]
  5361                           ;LcdPort@value stored from wreg
  5362  017E  00F1               	movwf	LcdPort@value
  5363  017F                     l1507:
  5364                           
  5365                           ;LCD8btis.c: 6:     RD0 = value &1;
  5366  017F  1871               	btfsc	LcdPort@value,0
  5367  0180  2982               	goto	u1491
  5368  0181  2986               	goto	u1490
  5369  0182                     u1491:
  5370  0182  1283               	bcf	3,5	;RP0=0, select bank0
  5371  0183  1303               	bcf	3,6	;RP1=0, select bank0
  5372  0184  1408               	bsf	8,0	;volatile
  5373  0185  2989               	goto	u1504
  5374  0186                     u1490:
  5375  0186  1283               	bcf	3,5	;RP0=0, select bank0
  5376  0187  1303               	bcf	3,6	;RP1=0, select bank0
  5377  0188  1008               	bcf	8,0	;volatile
  5378  0189                     u1504:
  5379  0189                     l1509:
  5380                           
  5381                           ;LCD8btis.c: 7:     RD1 = (value & 2) >> 1;
  5382  0189  0871               	movf	LcdPort@value,w
  5383  018A  00F0               	movwf	??_LcdPort
  5384  018B  3001               	movlw	1
  5385  018C                     u1515:
  5386  018C  1003               	clrc
  5387  018D  0CF0               	rrf	??_LcdPort,f
  5388  018E  3EFF               	addlw	-1
  5389  018F  1D03               	skipz
  5390  0190  298C               	goto	u1515
  5391  0191  1870               	btfsc	??_LcdPort,0
  5392  0192  2994               	goto	u1521
  5393  0193  2998               	goto	u1520
  5394  0194                     u1521:
  5395  0194  1283               	bcf	3,5	;RP0=0, select bank0
  5396  0195  1303               	bcf	3,6	;RP1=0, select bank0
  5397  0196  1488               	bsf	8,1	;volatile
  5398  0197  299B               	goto	u1534
  5399  0198                     u1520:
  5400  0198  1283               	bcf	3,5	;RP0=0, select bank0
  5401  0199  1303               	bcf	3,6	;RP1=0, select bank0
  5402  019A  1088               	bcf	8,1	;volatile
  5403  019B                     u1534:
  5404                           
  5405                           ;LCD8btis.c: 8:     RD2 = (value & 4) >> 2;
  5406  019B  0871               	movf	LcdPort@value,w
  5407  019C  00F0               	movwf	??_LcdPort
  5408  019D  3002               	movlw	2
  5409  019E                     u1545:
  5410  019E  1003               	clrc
  5411  019F  0CF0               	rrf	??_LcdPort,f
  5412  01A0  3EFF               	addlw	-1
  5413  01A1  1D03               	skipz
  5414  01A2  299E               	goto	u1545
  5415  01A3  1870               	btfsc	??_LcdPort,0
  5416  01A4  29A6               	goto	u1551
  5417  01A5  29AA               	goto	u1550
  5418  01A6                     u1551:
  5419  01A6  1283               	bcf	3,5	;RP0=0, select bank0
  5420  01A7  1303               	bcf	3,6	;RP1=0, select bank0
  5421  01A8  1508               	bsf	8,2	;volatile
  5422  01A9  29AD               	goto	u1564
  5423  01AA                     u1550:
  5424  01AA  1283               	bcf	3,5	;RP0=0, select bank0
  5425  01AB  1303               	bcf	3,6	;RP1=0, select bank0
  5426  01AC  1108               	bcf	8,2	;volatile
  5427  01AD                     u1564:
  5428                           
  5429                           ;LCD8btis.c: 9:     RD3 = (value &8) >> 3;
  5430  01AD  0871               	movf	LcdPort@value,w
  5431  01AE  00F0               	movwf	??_LcdPort
  5432  01AF  3003               	movlw	3
  5433  01B0                     u1575:
  5434  01B0  1003               	clrc
  5435  01B1  0CF0               	rrf	??_LcdPort,f
  5436  01B2  3EFF               	addlw	-1
  5437  01B3  1D03               	skipz
  5438  01B4  29B0               	goto	u1575
  5439  01B5  1870               	btfsc	??_LcdPort,0
  5440  01B6  29B8               	goto	u1581
  5441  01B7  29BC               	goto	u1580
  5442  01B8                     u1581:
  5443  01B8  1283               	bcf	3,5	;RP0=0, select bank0
  5444  01B9  1303               	bcf	3,6	;RP1=0, select bank0
  5445  01BA  1588               	bsf	8,3	;volatile
  5446  01BB  29BF               	goto	u1594
  5447  01BC                     u1580:
  5448  01BC  1283               	bcf	3,5	;RP0=0, select bank0
  5449  01BD  1303               	bcf	3,6	;RP1=0, select bank0
  5450  01BE  1188               	bcf	8,3	;volatile
  5451  01BF                     u1594:
  5452                           
  5453                           ;LCD8btis.c: 10:     RD4 = (value & 16)>>4;
  5454  01BF  0871               	movf	LcdPort@value,w
  5455  01C0  00F0               	movwf	??_LcdPort
  5456  01C1  3004               	movlw	4
  5457  01C2                     u1605:
  5458  01C2  1003               	clrc
  5459  01C3  0CF0               	rrf	??_LcdPort,f
  5460  01C4  3EFF               	addlw	-1
  5461  01C5  1D03               	skipz
  5462  01C6  29C2               	goto	u1605
  5463  01C7  1870               	btfsc	??_LcdPort,0
  5464  01C8  29CA               	goto	u1611
  5465  01C9  29CE               	goto	u1610
  5466  01CA                     u1611:
  5467  01CA  1283               	bcf	3,5	;RP0=0, select bank0
  5468  01CB  1303               	bcf	3,6	;RP1=0, select bank0
  5469  01CC  1608               	bsf	8,4	;volatile
  5470  01CD  29D1               	goto	u1624
  5471  01CE                     u1610:
  5472  01CE  1283               	bcf	3,5	;RP0=0, select bank0
  5473  01CF  1303               	bcf	3,6	;RP1=0, select bank0
  5474  01D0  1208               	bcf	8,4	;volatile
  5475  01D1                     u1624:
  5476                           
  5477                           ;LCD8btis.c: 11:     RD5 = (value & 32) >> 5 ;
  5478  01D1  0871               	movf	LcdPort@value,w
  5479  01D2  00F0               	movwf	??_LcdPort
  5480  01D3  3005               	movlw	5
  5481  01D4                     u1635:
  5482  01D4  1003               	clrc
  5483  01D5  0CF0               	rrf	??_LcdPort,f
  5484  01D6  3EFF               	addlw	-1
  5485  01D7  1D03               	skipz
  5486  01D8  29D4               	goto	u1635
  5487  01D9  1870               	btfsc	??_LcdPort,0
  5488  01DA  29DC               	goto	u1641
  5489  01DB  29E0               	goto	u1640
  5490  01DC                     u1641:
  5491  01DC  1283               	bcf	3,5	;RP0=0, select bank0
  5492  01DD  1303               	bcf	3,6	;RP1=0, select bank0
  5493  01DE  1688               	bsf	8,5	;volatile
  5494  01DF  29E3               	goto	u1654
  5495  01E0                     u1640:
  5496  01E0  1283               	bcf	3,5	;RP0=0, select bank0
  5497  01E1  1303               	bcf	3,6	;RP1=0, select bank0
  5498  01E2  1288               	bcf	8,5	;volatile
  5499  01E3                     u1654:
  5500                           
  5501                           ;LCD8btis.c: 12:     RD6 = (value & 64) >> 6;
  5502  01E3  0871               	movf	LcdPort@value,w
  5503  01E4  00F0               	movwf	??_LcdPort
  5504  01E5  3006               	movlw	6
  5505  01E6                     u1665:
  5506  01E6  1003               	clrc
  5507  01E7  0CF0               	rrf	??_LcdPort,f
  5508  01E8  3EFF               	addlw	-1
  5509  01E9  1D03               	skipz
  5510  01EA  29E6               	goto	u1665
  5511  01EB  1870               	btfsc	??_LcdPort,0
  5512  01EC  29EE               	goto	u1671
  5513  01ED  29F2               	goto	u1670
  5514  01EE                     u1671:
  5515  01EE  1283               	bcf	3,5	;RP0=0, select bank0
  5516  01EF  1303               	bcf	3,6	;RP1=0, select bank0
  5517  01F0  1708               	bsf	8,6	;volatile
  5518  01F1  29F5               	goto	u1684
  5519  01F2                     u1670:
  5520  01F2  1283               	bcf	3,5	;RP0=0, select bank0
  5521  01F3  1303               	bcf	3,6	;RP1=0, select bank0
  5522  01F4  1308               	bcf	8,6	;volatile
  5523  01F5                     u1684:
  5524                           
  5525                           ;LCD8btis.c: 13:     RD7 = (value & 128) >> 7;
  5526  01F5  0871               	movf	LcdPort@value,w
  5527  01F6  00F0               	movwf	??_LcdPort
  5528  01F7  3007               	movlw	7
  5529  01F8                     u1695:
  5530  01F8  1003               	clrc
  5531  01F9  0CF0               	rrf	??_LcdPort,f
  5532  01FA  3EFF               	addlw	-1
  5533  01FB  1D03               	skipz
  5534  01FC  29F8               	goto	u1695
  5535  01FD  1870               	btfsc	??_LcdPort,0
  5536  01FE  2A00               	goto	u1701
  5537  01FF  2A04               	goto	u1700
  5538  0200                     u1701:
  5539  0200  1283               	bcf	3,5	;RP0=0, select bank0
  5540  0201  1303               	bcf	3,6	;RP1=0, select bank0
  5541  0202  1788               	bsf	8,7	;volatile
  5542  0203  2A07               	goto	u1714
  5543  0204                     u1700:
  5544  0204  1283               	bcf	3,5	;RP0=0, select bank0
  5545  0205  1303               	bcf	3,6	;RP1=0, select bank0
  5546  0206  1388               	bcf	8,7	;volatile
  5547  0207                     u1714:
  5548  0207                     l138:
  5549  0207  0008               	return
  5550  0208                     __end_of_LcdPort:
  5551  007E                     btemp	set	126	;btemp
  5552  007E                     wtemp0	set	126
  5553                           
  5554                           	psect	config
  5555                           
  5556                           ;Config register CONFIG1 @ 0x2007
  5557                           ;	Oscillator Selection bits
  5558                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  5559                           ;	Watchdog Timer Enable bit
  5560                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  5561                           ;	Power-up Timer Enable bit
  5562                           ;	PWRTE = OFF, PWRT disabled
  5563                           ;	RE3/MCLR pin function select bit
  5564                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  5565                           ;	Code Protection bit
  5566                           ;	CP = OFF, Program memory code protection is disabled
  5567                           ;	Data Code Protection bit
  5568                           ;	CPD = OFF, Data memory code protection is disabled
  5569                           ;	Brown Out Reset Selection bits
  5570                           ;	BOREN = OFF, BOR disabled
  5571                           ;	Internal External Switchover bit
  5572                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  5573                           ;	Fail-Safe Clock Monitor Enabled bit
  5574                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  5575                           ;	Low Voltage Programming Enable bit
  5576                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  5577                           ;	In-Circuit Debugger Mode bit
  5578                           ;	DEBUG = 0x1, unprogrammed default
  5579  2007                     	org	8199
  5580  2007  20D4               	dw	8404
  5581                           
  5582                           ;Config register CONFIG2 @ 0x2008
  5583                           ;	Brown-out Reset Selection bit
  5584                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  5585                           ;	Flash Program Memory Self Write Enable bits
  5586                           ;	WRT = OFF, Write protection off
  5587  2008                     	org	8200
  5588  2008  3FFF               	dw	16383

Data Sizes:
    Strings     20
    Constant    0
    Data        0
    BSS         6
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     50      56
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    LcdWriteString@value	PTR const unsigned char  size(2) Largest target is 17
		 -> NULL(NULL[0]), int2String@cadena(BANK0[4]), adcToString@salida(BANK0[5]), STR_2(CODE[3]), 
		 -> STR_1(CODE[17]), 

    UARTSendString@str	PTR const unsigned char  size(1) Largest target is 5
		 -> NULL(NULL[0]), int2String@cadena(BANK0[4]), adcToString@salida(BANK0[5]), 

    cadenaTemp	PTR unsigned char  size(1) Largest target is 4
		 -> NULL(NULL[0]), int2String@cadena(BANK0[4]), 

    sp__int2String	PTR unsigned char  size(1) Largest target is 4
		 -> int2String@cadena(BANK0[4]), 

    cadenaCounter	PTR unsigned char  size(1) Largest target is 4
		 -> NULL(NULL[0]), int2String@cadena(BANK0[4]), 

    sp__adcToString	PTR unsigned char  size(1) Largest target is 5
		 -> adcToString@salida(BANK0[5]), 

    cadenaADC	PTR unsigned char  size(1) Largest target is 5
		 -> NULL(NULL[0]), adcToString@salida(BANK0[5]), 


Critical Paths under _main in COMMON

    _int2String->___awdiv
    _adcToString->___xxtofl
    ___fltol->___xxtofl
    ___flmul->___xxtofl
    _UARTSendString->_UARTSendChar
    _UARTInit->___lldiv
    _LcdWriteString->_LcdWriteChar
    _LcdWriteChar->_LcdPort
    _LcdSetCursor->_LcdCmd
    _LcdInit->_LcdCmd
    _LcdCmd->_LcdPort

Critical Paths under _main in BANK0

    _main->_adcToString
    _adcToString->___fltol
    ___fltol->___flmul

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    9180
                                             47 BANK0      3     3      0
                            _LcdInit
                       _LcdSetCursor
                       _LcdWriteChar
                     _LcdWriteString
                           _UARTInit
                       _UARTSendChar
                     _UARTSendString
                        _adcToString
                         _int2String
                            _spiInit
                            _spiRead
                           _spiWrite
 ---------------------------------------------------------------------------------
 (1) _spiWrite                                             1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _spiRead                                              0     0      0       0
                     _spiReceiveWait
 ---------------------------------------------------------------------------------
 (2) _spiReceiveWait                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _spiInit                                              4     1      3     360
                                              0 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 (1) _int2String                                           9     9      0    1431
                                              9 COMMON     3     3      0
                                              0 BANK0      6     6      0
                            ___awdiv
                            ___awmod
                             ___bmul
 ---------------------------------------------------------------------------------
 (2) ___bmul                                               4     3      1     168
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4     448
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     604
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (1) _adcToString                                         10     8      2    4521
                                             37 BANK0     10     8      2
                            ___flmul
                            ___fltol
                            ___lwdiv
                            ___lwmod
                             ___wmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     398
                                              0 COMMON    14    10      4
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     244
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     311
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     466
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             11     7      4     305
                                             26 BANK0     11     7      4
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flmul                                             26    18      8    2417
                                              0 BANK0     26    18      8
                          __Umul8_16
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) __Umul8_16                                            9     7      2     799
                                              0 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 (1) _UARTSendString                                       5     4      1     484
                                              1 COMMON     5     4      1
                       _UARTSendChar
 ---------------------------------------------------------------------------------
 (2) _UARTSendChar                                         1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _UARTInit                                             9     4      5     684
                                              0 BANK0      9     4      5
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     466
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 (1) _LcdWriteString                                       7     5      2     668
                                              4 COMMON     7     5      2
                       _LcdWriteChar
 ---------------------------------------------------------------------------------
 (2) _LcdWriteChar                                         2     2      0     198
                                              2 COMMON     2     2      0
                            _LcdPort
 ---------------------------------------------------------------------------------
 (1) _LcdSetCursor                                         4     3      1     416
                                              5 COMMON     4     3      1
                             _LcdCmd
 ---------------------------------------------------------------------------------
 (1) _LcdInit                                              2     2      0     374
                                              5 COMMON     2     2      0
                             _LcdCmd
                            _LcdPort
 ---------------------------------------------------------------------------------
 (2) _LcdCmd                                               3     3      0     198
                                              2 COMMON     3     3      0
                            _LcdPort
 ---------------------------------------------------------------------------------
 (3) _LcdPort                                              2     2      0     176
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LcdInit
     _LcdCmd
       _LcdPort
     _LcdPort
   _LcdSetCursor
     _LcdCmd
       _LcdPort
   _LcdWriteChar
     _LcdPort
   _LcdWriteString
     _LcdWriteChar
       _LcdPort
   _UARTInit
     ___lldiv
   _UARTSendChar
   _UARTSendString
     _UARTSendChar
   _adcToString
     ___flmul
       __Umul8_16
       ___xxtofl (ARG)
     ___fltol
       ___flmul (ARG)
         __Umul8_16
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___lwdiv
     ___lwmod
     ___wmul
     ___xxtofl
   _int2String
     ___awdiv
     ___awmod
     ___bmul
   _spiInit
   _spiRead
     _spiReceiveWait
   _spiWrite

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      46       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     32      38       5       70.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      46      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Mon Feb 15 18:35:14 2021

       UARTInit@baud_rate 0020                         pc 0002            ___bmul@product 0072  
             _SSPSTATbits 0094                        l62 0F99                        l81 0101  
                      l59 02A5                        l84 0D01                        l87 0D0B  
                      l95 0DDD              ___awdiv@sign 0076                        fsr 0004  
     ___wmul@multiplicand 0072       __Umul8_16@word_mpld 0076                       l203 0CFF  
                     l141 0D65                       l151 0D88                       l138 0207  
                     l154 0EE2                       l163 0E59                       l315 0D35  
                     l157 0D20                       l325 0FFF                       l192 0CF6  
                     l185 0D46                       l442 0092                       l186 0D4B  
                     l291 0DAD                       l195 0CEF                       l189 0CF0  
                     l455 0F3B                       l561 0E9D                       l289 0D95  
                     l482 0168                       l722 02C8                       l475 017D  
                     l571 0E17                       l724 035F                       l485 017D  
                     l735 0329                       l736 0335                       l728 030D  
                     l690 07E7                       l684 075F                       l678 07F3  
                     l697 0019                       l699 002B                       _RD0 0040  
                     _RD1 0041                       _RD2 0042                       _RE0 0048  
                     _RD3 0043                       _RE1 0049                       _RD4 0044  
                     _RD5 0045                       _RD6 0046                       _RD7 0047  
                     fsr0 0004                       indf 0000              ___awmod@sign 0076  
            ___flmul@aexp 0032              ___flmul@bexp 0033              ___flmul@sign 002D  
            ___flmul@temp 0038              ___flmul@prod 0034              ___fltol@exp1 0044  
                    l2001 0100                      l2011 0D78                      l2003 0D67  
                    l2005 0D68                      l2021 0E37                      l2101 03A6  
                    l2007 0D70                      l2023 0E3D                      l2111 03D9  
                    l2103 03AC                      l2017 0E18                      l2041 025E  
                    l2033 0208                      l2025 0CEB                      l2121 03FB  
                    l2113 03E5                      l2105 03B6                      l2019 0E1B  
                    l2051 02A3                      l2043 0273                      l2035 0242  
                    l2027 0CF7                      l2131 0425                      l2123 0401  
                    l2115 03EB                      l2107 03C7                      l2061 0DBF  
                    l2053 02A4                      l2045 0286                      l2037 0255  
                    l2029 0CFC                      l2141 0447                      l2133 0431  
                    l2125 040B                      l2117 03F1                      l2109 03D0  
                    l2063 0DC5                      l1511 0006                      l2047 028B  
                    l2039 025A                      l2071 0F5A                      l2151 0471  
                    l2143 0451                      l2135 0437                      l2127 0416  
                    l2119 03F7                      l2065 0DD2                      l2057 0DAF  
                    l1521 0027                      l1513 0008                      l2049 029E  
                    l2073 0F69                      l2153 047D                      l2145 045C  
                    l2137 043D                      l2129 041F                      l1507 017F  
                    l1531 0D10                      l2059 0DB4                      l1515 000F  
                    l1611 0038                      l1603 002C                      l2075 0F80  
                    l2067 0F3F                      l2155 0483                      l2147 0465  
                    l2139 0441                      l2091 0378                      l2083 0360  
                    l1509 0189                      l1541 0D50                      l1533 0D16  
                    l1525 0D01                      l1517 0013                      l1701 013C  
                    l1621 004D                      l1613 003C                      l1605 002D  
                    l2077 0F97                      l2069 0F55                      l2157 0489  
                    l2149 046B                      l2093 0389                      l2085 0368  
                    l1543 0D56                      l1535 0D19                      l1527 0D07  
                    l1519 0022                      l1551 0D89                      l1631 0070  
                    l1623 0050                      l1615 0041                      l1607 0031  
                    l2079 0F98                      l2095 0391                      l2087 036A  
                    l1545 0D59                      l2185 0D80                      l1537 0D1D  
                    l1529 0D0D                      l1801 04E3                      l1721 0E5A  
                    l1561 0DA9                      l1553 0D8B                      l1641 0089  
                    l1633 0076                      l1625 0057                      l1617 0045  
                    l1609 0036                      l2097 039A                      l2089 0373  
                    l1547 0D62                      l1539 0D4D                      l1803 04E5  
                    l1715 015D                      l1707 0144                      l1731 0E70  
                    l1723 0E5C                      l1555 0D8F                      l1643 008E  
                    l1635 0077                      l1627 005B                      l1619 0047  
                    l1651 0EE8                      l1571 0D2B                      l2099 03A2  
                    l1581 0FAA                      l1901 07DF                      l1821 0556  
                    l1813 0500                      l1805 04ED                      l1717 016D  
                    l1709 0156                      l1741 0E93                      l1733 0E74  
                    l1725 0E62                      l1557 0D9C                      l1637 007E  
                    l1629 005F                      l1661 0EFE                      l1653 0EED  
                    l1573 0D2D                      l1565 0D22                      l1549 0CF0  
                    l1591 0FD9                      l1583 0FAD                      l1903 07E0  
                    l1831 05D3                      l1823 0582                      l1815 0510  
                    l1807 04F2                      l1719 0172                      l1735 0E85  
                    l1727 0E65                      l1743 0E99                      l1751 0DE7  
                    l1559 0DA3                      l1911 02AC                      l1639 0084  
                    l1671 0F1A                      l1663 0F01                      l1655 0EEF  
                    l1647 0EE3                      l1575 0D34                      l1567 0D23  
                    l1593 0FE7                      l1585 0FBA                      l1905 07EB  
                    l1841 0653                      l1833 05F0                      l1825 059E  
                    l1817 051D                      l1809 04F7                      l1737 0E8B  
                    l1729 0E6C                      l1761 0E06                      l1753 0DEE  
                    l1921 02D9                      l1913 02B0                      l1681 0F37  
                    l1673 0F20                      l1665 0F08                      l1657 0EF3  
                    l1649 0EE4                      l1569 0D27                      l1595 0FE8  
                    l1587 0FBE                      l1579 0F9A                      l1851 070B  
                    l1843 0680                      l1835 0600                      l1827 05BA  
                    l1819 053A                      l1771 049A                      l1691 0118  
                    l1739 0E8C                      l1763 0E0D                      l1755 0DF2  
                    l1747 0DDE                      l1931 0304                      l1923 02DE  
                    l1915 02C0                      l1675 0F27                      l1667 0F0C  
                    l1659 0EF8                      l1597 0FF1                      l1589 0FC7  
                    l1861 0730                      l1853 0714                      l1845 0690  
                    l1837 061D                      l1829 05C3                      l1781 04AF  
                    l1773 04A0                      l1693 012D                      l1685 0102  
                    l1757 0DF6                      l1749 0DE4                      l1765 0E13  
                    l1941 0337                      l1933 0314                      l1925 02EB  
                    l1917 02D0                      l1909 02A7                      l1669 0F10  
                    l1677 0F2D                      l1599 0FF7                      l1871 0748  
                    l1863 0739                      l1855 0722                      l1847 06BD  
                    l1839 0636                      l1791 04CC                      l1783 04B7  
                    l1775 04A4                      l1695 012E                      l1687 010F  
                    l1759 0E00                      l1943 034D                      l1935 031F  
                    l1927 02F2                      l1679 0F32                      l1881 0777  
                    l1873 075C                      l1857 072B                      l1865 073F  
                    l1849 06E3                      l1793 04D0                      l1785 04B9  
                    l1777 04A5                      l1769 0493                      l1697 0136  
                    l1945 0352                      l1937 0323                      l1929 02F6  
                    l1961 0D45                      l1953 0D37                      l1971 0EC1  
                    l1963 0E9E                      l1891 07B2                      l1883 077B  
                    l1867 0743                      l1859 072F                      l1795 04D1  
                    l1787 04C1                      l1779 04AA                      l1699 0138  
                    l1947 0356                      l1939 032D                      l1955 0D3E  
                    l1965 0EA4                      l1981 00F2                      l1973 0093  
                    l1893 07C1                      l1885 0794                      l1877 0764  
                    l1869 0744                      l1797 04D6                      l1789 04C6  
                    l1949 0357                      l1957 0D40                      l1967 0EAD  
                    l1991 00F9                      l1983 00F3                      l1975 009A  
                    l1895 07CB                      l1879 0769                      l1887 079A  
                    l1799 04DB                      l1959 0D42                      l1969 0EBB  
                    l1993 00FA                      l1985 00F4                      l1977 00C5  
                    l1897 07CD                      l1889 07A7                      l1995 00FB  
                    l1987 00F5                      l1979 00C7                      l1899 07DB  
                    l1997 00FC                      l1989 00F6                      l1999 00FD  
                    STR_1 0810                      STR_2 0821                      u2000 0EE8  
                    u2001 0EE7                      u2010 0EF3                      u2011 0EF2  
                    u2100 0126                      u2020 0EFE                      u2021 0EFD  
                    u2110 013C                      u2111 013B                      u2120 0143  
                    u2040 0F10                      u2121 0142                      u2105 0121  
                    u2041 0F0F                      u2210 0E74                      u2050 0F1A  
                    u2211 0E73                      u2051 0F19                      u2035 0F02  
                    u2140 0155                      u2141 0154                      u2205 0E66  
                    u2150 015C                      u2230 0E85                      u2310 0E13  
                    u2070 0F2D                      u2151 015B                      u2135 0145  
                    u2231 0E84                      u2311 0E12                      u2071 0F2C  
                    u2055 0F16                      u1520 0198                      u1504 0189  
                    u2320 04A4                      u2080 0F32                      u1521 0194  
                    u2401 0548                      u2321 04A3                      u2225 0E75  
                    u2305 0E07                      u2081 0F31                      u2065 0F21  
                    u1610 01CE                      u2402 054F                      u2330 04AA  
                    u2170 016D                      u2090 010F                      u2250 0E99  
                    u1611 01CA                      u1515 018C                      u2411 0564  
                    u2403 0556                      u2331 04A9                      u2171 016C  
                    u2091 010E                      u2251 0E98                      u2235 0E81  
                    u1700 0204                      u2412 056B                      u2340 04AF  
                    u2180 0172                      u2260 0DE4                      u1701 0200  
                    u1605 01C2                      u2501 069F                      u2421 0590  
                    u2413 0572                      u2341 04AE                      u2181 0171  
                    u2165 015F                      u2245 0E8D                      u2261 0DE3  
                    u1550 01AA                      u1534 019B                      u2510 06C9  
                    u2502 06A6                      u2422 0597                      u2350 04D0  
                    u2190 0E62                      u1551 01A6                      u2503 06AD  
                    u2431 05AC                      u2423 059E                      u2351 04CF  
                    u2191 0E61                      u1640 01E0                      u1624 01D1  
                    u1720 0013                      u2600 0748                      u2432 05B3  
                    u2360 04D6                      u2280 0DF6                      u1800 0DA9  
                    u1641 01DC                      u1545 019E                      u1721 0012  
                    u2601 0747                      u2521 06D5                      u2433 05BA  
                    u2361 04D5                      u2281 0DF5                      u1801 0DA8  
                    u1714 0207                      u1490 0186                      u2610 075C  
                    u2530 06F1                      u2522 06DC                      u2370 04DB  
                    u2290 0E00                      u1810 0D27                      u1635 01D4  
                    u1491 0182                      u2611 075B                      u2523 06E3  
                    u2515 06C4                      u2451 05E2                      u2371 04DA  
                    u2291 0DFF                      u2275 0DE8                      u1811 0D26  
                    u1580 01BC                      u1564 01AD                      u1740 0027  
                    u2620 0763                      u2452 05E9                      u2380 04F2  
                    u2700 02B0                      u1900 0031                      u1820 0D34  
                    u1581 01B8                      u1741 0026                      u2621 0762  
                    u2541 06FD                      u2461 060F                      u2453 05F0  
                    u2445 05BC                      u2381 04F1                      u2701 02AF  
                    u1901 0030                      u1821 0D33                      u1670 01F2  
                    u1654 01E3                      u1830 0FAA                      u1750 0D07  
                    u2630 0769                      u2542 0704                      u2462 0616  
                    u2390 04F7                      u2710 02D0                      u1910 003C  
                    u1671 01EE                      u1575 01B0                      u1831 0FA9  
                    u1751 0D06                      u1735 001A                      u2631 0768  
                    u2543 070B                      u2535 06EC                      u2463 061D  
                    u2391 04F6                      u2295 0DFC                      u2711 02CF  
                    u1911 003B                      u2640 077B                      u2800 0342  
                    u1920 004D                      u1760 0CF6                      u1665 01E6  
                    u2641 077A                      u2481 0645                      u1921 004C  
                    u1761 0CF5                      u1594 01BF                      u1850 0FBE  
                    u2650 078A                      u2570 072F                      u2482 064C  
                    u1770 0D8F                      u2810 0352                      u2730 02F1  
                    u1851 0FBD                      u2571 072E                      u2555 070D  
                    u2491 0672                      u2483 0653                      u2475 061F  
                    u1771 0D8E                      u2811 0351                      u2731 02F0  
                    u1684 01F5                      u2900 0DD2                      u2660 07A7  
                    u2492 0679                      u2820 0356                      u1940 005F  
                    u1845 0FAF                      u2901 0DD1                      u2661 07A6  
                    u2565 0724                      u2493 0680                      u2821 0355  
                    u2805 033D                      u2725 02E3                      u1941 005E  
                    u1870 0FD9                      u2910 0DDD                      u2670 07C1  
                    u2590 0743                      u2750 0313                      u2830 0D3E  
                    u1695 01F8                      u1871 0FD8                      u2911 0DDC  
                    u2671 07C0                      u2655 0785                      u2591 0742  
                    u2751 0312                      u1935 0051                      u2831 0D3D  
                    u2840 009A                      u2680 07DF                      u1960 0070  
                    u1865 0FC0                      u2841 0099                      u2905 0DCE  
                    u2681 07DE                      u2665 07A3                      u2585 0732  
                    u1785 0D96                      u2745 0305                      u1961 006F  
                    u1890 0FF7                      u2850 00A8                      u2770 0323  
                    u2690 02AC                      u1891 0FF6                      u1875 0FD5  
                    u2675 07BD                      u1795 0D9D                      u2771 0322  
                    u2691 02AB                      u1955 0060                      u2860 00D5  
                    u2780 0329                      u1980 0084                      u1885 0FE9  
                    u2781 0328                      u2765 0318                      u1981 0083  
                    u1965 006C                      u2870 0E25                      u2790 032D  
                    u1990 0089                      u2927 0D1B                      u2855 00A3  
                    u2791 032C                      u1991 0088                      u1975 0078  
                    u2880 0E47                      u2937 0EA8                      u2865 00D0  
                    u2890 0E59                      u2947 0EB7                      u2891 0E58  
                    u2957 0EC5                      u2967 0D5D                      _main 0360  
                    btemp 007E                      start 0000           LcdSetCursor@row 0078  
         __end_of_LcdInit 0EE3           __end_of_LcdPort 0208         ___bmul@multiplier 0073  
    __end_of_LcdSetCursor 0D89             ___fltol@sign1 0043                     ?_main 0070  
         __end_of___awdiv 0093           __end_of___awmod 0F3C           __end_of___flmul 07F4  
         __end_of___fltol 017E                     _ANSEL 0188           __end_of___lldiv 1000  
         ___awdiv@divisor 0070           __end_of___lwdiv 0E9E           __end_of___lwmod 0E18  
         ___awdiv@counter 0075                     _RCREG 001A                     _SPBRG 0099  
                   _PORTA 0005                     _TRISA 0085                     _TRISD 0088  
                   _TRISE 0089                     _TXREG 0019          __end_of_UARTInit 0102  
                   pclath 000A           __end_of_spiInit 0D4C           __end_of_spiRead 0D00  
                   status 0003                     wtemp0 007E      __end_of_LcdWriteChar 0D21  
         __initialization 07F4              __end_of_main 0493         adcToString@digito 004D  
       adcToString@salida 0048                    ??_main 004F          ___awdiv@dividend 0072  
                  _ANSELH 0189                 ??_LcdInit 0075                 ??_LcdPort 0070  
                  _TRISC3 043B                    _TRISC5 043D                    _SSPCON 0014  
                  _SSPBUF 0013          __end_of___xxtofl 0360                    _LcdCmd 0D4C  
                  ___bmul 0D21                    ___wmul 0D89                 ??___awdiv 0074  
               ??___awmod 0074                 ??___flmul 0028                 ??___fltol 003E  
               ??___lldiv 0078                 ??___lwdiv 0074                 ??___lwmod 0074  
 __size_of_UARTSendString 0030          ___awdiv@quotient 0077           ___awmod@divisor 0070  
         ___awmod@counter 0075        __size_of__Umul8_16 0027          __end_of_spiWrite 0CF0  
               ??_spiInit 0073                 ??_spiRead 0070              ___xxtofl@arg 007A  
            ___xxtofl@exp 0079              ___xxtofl@val 0070   __end_of__initialization 07FC  
 __size_of_LcdWriteString 0042                ___fltol@f1 003A             _cadenaCounter 0054  
   __size_of_LcdSetCursor 0023       ___bmul@multiplicand 0070         LcdWriteChar@value 0073  
          __pcstackCOMMON 0070                 ?_UARTInit 0020                _cadenaTemp 0053  
UARTSendString@max_length 0071     __size_of_LcdWriteChar 0015              _LcdSetCursor 0D66  
              __pbssBANK0 0052             ??_adcToString 0047                   ?_LcdCmd 0070  
       __end_of__Umul8_16 002C                __pmaintext 0360                   ?___bmul 0070  
                 ?___wmul 0070                ??_UARTInit 0025   __size_of_spiReceiveWait 0007  
            _LcdWriteChar 0D0C                 ?___xxtofl 0070                _int2String 0F3C  
                 _SSPSTAT 0094                __stringtab 0800           int2String@value 0025  
           ?_UARTSendChar 0070                   _LcdInit 0E9E                   _LcdPort 017E  
         __size_of_LcdCmd 001A       __end_of_adcToString 02A6                 ?_spiWrite 0070  
         __size_of___bmul 0015                   ___awdiv 002C                   ___awmod 0EE3  
                 ___flmul 0493                   ___fltol 0102                   ___lldiv 0F9A  
         __size_of___wmul 0025                   ___lwdiv 0E5A                   ___lwmod 0DDE  
          _UARTSendString 0DAE                   __ptext1 0CEA                   __ptext2 0CF7  
                 __ptext3 0CF0                   __ptext4 0D36                   __ptext5 0F3C  
                 __ptext6 0D21                   __ptext7 0EE3                   __ptext8 002C  
                 __ptext9 0208                ??___xxtofl 0074          ___awmod@dividend 0072  
                 _spiInit 0D36                   _spiRead 0CF7      end_of_initialization 07FC  
          ??_UARTSendChar 0070            _LcdWriteString 0E18           ___lldiv@divisor 0070  
         ___lldiv@counter 007D                 _RCSTAbits 0018    __end_of_UARTSendString 0DDE  
              ??_spiWrite 0070               ?_int2String 0070             ___xxtofl@sign 0078  
               _TRISCbits 0087        LcdSetCursor@column 0075    __end_of_LcdWriteString 0E5A  
             spiWrite@dat 0070               ___flmul@grs 002E               _adcToString 0208  
               _TXSTAbits 0098            __end_of_LcdCmd 0D66           ?_UARTSendString 0071  
          _spiReceiveWait 0CF0            __end_of___bmul 0D36            __end_of___wmul 0DAE  
       __size_of_UARTInit 006F       start_initialization 07F4           ?_LcdWriteString 0074  
        adcToString@value 0045                  ??_LcdCmd 0072    __end_of_spiReceiveWait 0CF7  
     __size_of_int2String 005E                  ??___bmul 0071                  ??___wmul 0074  
               __Umul8_16 0005      __end_of_UARTSendChar 0D0C                 ___flmul@a 0024  
               ___flmul@b 0020                 ___latbits 0002             __pcstackBANK0 0020  
       __size_of___xxtofl 00BA                 _cadenaADC 0056                  ?_LcdInit 0070  
                ?_LcdPort 0070          ___lwdiv@dividend 0072             UARTSendChar@c 0070  
         ?_spiReceiveWait 0070                  ?___awdiv 0070                  ?___awmod 0070  
                ?___flmul 0020                  ?___fltol 003A                  ?___lldiv 0070  
              ?__Umul8_16 0070                  ?___lwdiv 0070                  ?___lwmod 0070  
       __size_of_spiWrite 0006                 __pstrings 0800                  ?_spiInit 0070  
                ?_spiRead 0070          ___lwdiv@quotient 0075      spiInit@sTransmitEdge 0072  
          ___wmul@product 0074           UARTSendString@i 0074        spiInit@sDataSample 0070  
                _PIR1bits 000C                 _valorTemp 0052                  _UARTInit 0093  
        int2String@cadena 0020          int2String@digito 0024               __stringbase 080F  
       ___wmul@multiplier 0070              ??_int2String 0079              ?_adcToString 0045  
        __size_of_LcdInit 0045          ??_UARTSendString 0072          __size_of_LcdPort 008A  
            LcdPort@value 0071     __size_of_UARTSendChar 000C              UARTInit@BRGH 0024  
      __end_of_int2String 0F9A               LcdCmd@value 0074               ??__Umul8_16 0072  
        __size_of___awdiv 0067          __size_of___awmod 0059          __size_of___flmul 0361  
        __size_of___fltol 007C          __size_of___lldiv 0066          __size_of___lwdiv 0044  
        __size_of___lwmod 003A        __end_of__stringtab 0810          ??_LcdWriteString 0076  
                ___xxtofl 02A6           ___lwdiv@divisor 0070           ___lwdiv@counter 0077  
                __ptext10 02A6                  __ptext11 0D89                  __ptext20 0F9A  
                __ptext12 0DDE                  __ptext21 0E18                  __ptext13 0E5A  
                __ptext22 0D0C                  __ptext14 0102                  __ptext23 0D66  
                __ptext15 0493                  __ptext24 0E9E                  __ptext16 0005  
                __ptext25 0D4C                  __ptext17 0DAE                  __ptext26 017E  
                __ptext18 0D00                  __ptext19 0093          __size_of_spiInit 0016  
        __size_of_spiRead 0009             ?_LcdSetCursor 0075              _UARTSendChar 0D00  
           __size_of_main 0133                  _valueADC 0057                  _spiWrite 0CEA  
         LcdWriteString@i 0079              spiInit@sType 0073              _valueCounter 0055  
       spiInit@sClockIdle 0071             ?_LcdWriteChar 0070            ??_LcdSetCursor 0076  
       UARTSendString@str 0073          ___lwmod@dividend 0072          ___lldiv@dividend 0074  
        ??_spiReceiveWait 0070                 stringcode 080A            ??_LcdWriteChar 0072  
  __Umul8_16@multiplicand 0070          ___lldiv@quotient 0079           ___lwmod@divisor 0070  
         ___lwmod@counter 0075                  stringdir 080A                  stringtab 0800  
     LcdWriteString@value 0074      __Umul8_16@multiplier 0078      __size_of_adcToString 009E  
       __Umul8_16@product 0074  
