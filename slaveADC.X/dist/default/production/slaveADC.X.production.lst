

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Mon Feb 15 15:39:33 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2
    13                           	psect	intentry,global,class=CODE,delta=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2
    15                           	psect	text6,local,class=CODE,merge=1,delta=2
    16                           	psect	text7,local,class=CODE,merge=1,delta=2
    17                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    18                           	dabs	1,0x7E,2
    19  0000                     
    20                           ; Version 2.20
    21                           ; Generated 12/02/2020 GMT
    22                           ; 
    23                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    24                           ; All rights reserved.
    25                           ; 
    26                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    27                           ; 
    28                           ; Redistribution and use in source and binary forms, with or without modification, are
    29                           ; permitted provided that the following conditions are met:
    30                           ; 
    31                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    32                           ;        conditions and the following disclaimer.
    33                           ; 
    34                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    35                           ;        of conditions and the following disclaimer in the documentation and/or other
    36                           ;        materials provided with the distribution.
    37                           ; 
    38                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    39                           ;        software without specific prior written permission.
    40                           ; 
    41                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    42                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    43                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    44                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    45                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    46                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    47                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    48                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    49                           ; 
    50                           ; 
    51                           ; Code-generator required, PIC16F887 Definitions
    52                           ; 
    53                           ; SFR Addresses
    54  0000                     	;# 
    55  0001                     	;# 
    56  0002                     	;# 
    57  0003                     	;# 
    58  0004                     	;# 
    59  0005                     	;# 
    60  0006                     	;# 
    61  0007                     	;# 
    62  0008                     	;# 
    63  0009                     	;# 
    64  000A                     	;# 
    65  000B                     	;# 
    66  000C                     	;# 
    67  000D                     	;# 
    68  000E                     	;# 
    69  000E                     	;# 
    70  000F                     	;# 
    71  0010                     	;# 
    72  0011                     	;# 
    73  0012                     	;# 
    74  0013                     	;# 
    75  0014                     	;# 
    76  0015                     	;# 
    77  0015                     	;# 
    78  0016                     	;# 
    79  0017                     	;# 
    80  0018                     	;# 
    81  0019                     	;# 
    82  001A                     	;# 
    83  001B                     	;# 
    84  001B                     	;# 
    85  001C                     	;# 
    86  001D                     	;# 
    87  001E                     	;# 
    88  001F                     	;# 
    89  0081                     	;# 
    90  0085                     	;# 
    91  0086                     	;# 
    92  0087                     	;# 
    93  0088                     	;# 
    94  0089                     	;# 
    95  008C                     	;# 
    96  008D                     	;# 
    97  008E                     	;# 
    98  008F                     	;# 
    99  0090                     	;# 
   100  0091                     	;# 
   101  0092                     	;# 
   102  0093                     	;# 
   103  0093                     	;# 
   104  0093                     	;# 
   105  0094                     	;# 
   106  0095                     	;# 
   107  0096                     	;# 
   108  0097                     	;# 
   109  0098                     	;# 
   110  0099                     	;# 
   111  009A                     	;# 
   112  009B                     	;# 
   113  009C                     	;# 
   114  009D                     	;# 
   115  009E                     	;# 
   116  009F                     	;# 
   117  0105                     	;# 
   118  0107                     	;# 
   119  0108                     	;# 
   120  0109                     	;# 
   121  010C                     	;# 
   122  010C                     	;# 
   123  010D                     	;# 
   124  010E                     	;# 
   125  010F                     	;# 
   126  0185                     	;# 
   127  0187                     	;# 
   128  0188                     	;# 
   129  0189                     	;# 
   130  018C                     	;# 
   131  018D                     	;# 
   132  0000                     	;# 
   133  0001                     	;# 
   134  0002                     	;# 
   135  0003                     	;# 
   136  0004                     	;# 
   137  0005                     	;# 
   138  0006                     	;# 
   139  0007                     	;# 
   140  0008                     	;# 
   141  0009                     	;# 
   142  000A                     	;# 
   143  000B                     	;# 
   144  000C                     	;# 
   145  000D                     	;# 
   146  000E                     	;# 
   147  000E                     	;# 
   148  000F                     	;# 
   149  0010                     	;# 
   150  0011                     	;# 
   151  0012                     	;# 
   152  0013                     	;# 
   153  0014                     	;# 
   154  0015                     	;# 
   155  0015                     	;# 
   156  0016                     	;# 
   157  0017                     	;# 
   158  0018                     	;# 
   159  0019                     	;# 
   160  001A                     	;# 
   161  001B                     	;# 
   162  001B                     	;# 
   163  001C                     	;# 
   164  001D                     	;# 
   165  001E                     	;# 
   166  001F                     	;# 
   167  0081                     	;# 
   168  0085                     	;# 
   169  0086                     	;# 
   170  0087                     	;# 
   171  0088                     	;# 
   172  0089                     	;# 
   173  008C                     	;# 
   174  008D                     	;# 
   175  008E                     	;# 
   176  008F                     	;# 
   177  0090                     	;# 
   178  0091                     	;# 
   179  0092                     	;# 
   180  0093                     	;# 
   181  0093                     	;# 
   182  0093                     	;# 
   183  0094                     	;# 
   184  0095                     	;# 
   185  0096                     	;# 
   186  0097                     	;# 
   187  0098                     	;# 
   188  0099                     	;# 
   189  009A                     	;# 
   190  009B                     	;# 
   191  009C                     	;# 
   192  009D                     	;# 
   193  009E                     	;# 
   194  009F                     	;# 
   195  0105                     	;# 
   196  0107                     	;# 
   197  0108                     	;# 
   198  0109                     	;# 
   199  010C                     	;# 
   200  010C                     	;# 
   201  010D                     	;# 
   202  010E                     	;# 
   203  010F                     	;# 
   204  0185                     	;# 
   205  0187                     	;# 
   206  0188                     	;# 
   207  0189                     	;# 
   208  018C                     	;# 
   209  018D                     	;# 
   210  0000                     	;# 
   211  0001                     	;# 
   212  0002                     	;# 
   213  0003                     	;# 
   214  0004                     	;# 
   215  0005                     	;# 
   216  0006                     	;# 
   217  0007                     	;# 
   218  0008                     	;# 
   219  0009                     	;# 
   220  000A                     	;# 
   221  000B                     	;# 
   222  000C                     	;# 
   223  000D                     	;# 
   224  000E                     	;# 
   225  000E                     	;# 
   226  000F                     	;# 
   227  0010                     	;# 
   228  0011                     	;# 
   229  0012                     	;# 
   230  0013                     	;# 
   231  0014                     	;# 
   232  0015                     	;# 
   233  0015                     	;# 
   234  0016                     	;# 
   235  0017                     	;# 
   236  0018                     	;# 
   237  0019                     	;# 
   238  001A                     	;# 
   239  001B                     	;# 
   240  001B                     	;# 
   241  001C                     	;# 
   242  001D                     	;# 
   243  001E                     	;# 
   244  001F                     	;# 
   245  0081                     	;# 
   246  0085                     	;# 
   247  0086                     	;# 
   248  0087                     	;# 
   249  0088                     	;# 
   250  0089                     	;# 
   251  008C                     	;# 
   252  008D                     	;# 
   253  008E                     	;# 
   254  008F                     	;# 
   255  0090                     	;# 
   256  0091                     	;# 
   257  0092                     	;# 
   258  0093                     	;# 
   259  0093                     	;# 
   260  0093                     	;# 
   261  0094                     	;# 
   262  0095                     	;# 
   263  0096                     	;# 
   264  0097                     	;# 
   265  0098                     	;# 
   266  0099                     	;# 
   267  009A                     	;# 
   268  009B                     	;# 
   269  009C                     	;# 
   270  009D                     	;# 
   271  009E                     	;# 
   272  009F                     	;# 
   273  0105                     	;# 
   274  0107                     	;# 
   275  0108                     	;# 
   276  0109                     	;# 
   277  010C                     	;# 
   278  010C                     	;# 
   279  010D                     	;# 
   280  010E                     	;# 
   281  010F                     	;# 
   282  0185                     	;# 
   283  0187                     	;# 
   284  0188                     	;# 
   285  0189                     	;# 
   286  018C                     	;# 
   287  018D                     	;# 
   288  0000                     	;# 
   289  0001                     	;# 
   290  0002                     	;# 
   291  0003                     	;# 
   292  0004                     	;# 
   293  0005                     	;# 
   294  0006                     	;# 
   295  0007                     	;# 
   296  0008                     	;# 
   297  0009                     	;# 
   298  000A                     	;# 
   299  000B                     	;# 
   300  000C                     	;# 
   301  000D                     	;# 
   302  000E                     	;# 
   303  000E                     	;# 
   304  000F                     	;# 
   305  0010                     	;# 
   306  0011                     	;# 
   307  0012                     	;# 
   308  0013                     	;# 
   309  0014                     	;# 
   310  0015                     	;# 
   311  0015                     	;# 
   312  0016                     	;# 
   313  0017                     	;# 
   314  0018                     	;# 
   315  0019                     	;# 
   316  001A                     	;# 
   317  001B                     	;# 
   318  001B                     	;# 
   319  001C                     	;# 
   320  001D                     	;# 
   321  001E                     	;# 
   322  001F                     	;# 
   323  0081                     	;# 
   324  0085                     	;# 
   325  0086                     	;# 
   326  0087                     	;# 
   327  0088                     	;# 
   328  0089                     	;# 
   329  008C                     	;# 
   330  008D                     	;# 
   331  008E                     	;# 
   332  008F                     	;# 
   333  0090                     	;# 
   334  0091                     	;# 
   335  0092                     	;# 
   336  0093                     	;# 
   337  0093                     	;# 
   338  0093                     	;# 
   339  0094                     	;# 
   340  0095                     	;# 
   341  0096                     	;# 
   342  0097                     	;# 
   343  0098                     	;# 
   344  0099                     	;# 
   345  009A                     	;# 
   346  009B                     	;# 
   347  009C                     	;# 
   348  009D                     	;# 
   349  009E                     	;# 
   350  009F                     	;# 
   351  0105                     	;# 
   352  0107                     	;# 
   353  0108                     	;# 
   354  0109                     	;# 
   355  010C                     	;# 
   356  010C                     	;# 
   357  010D                     	;# 
   358  010E                     	;# 
   359  010F                     	;# 
   360  0185                     	;# 
   361  0187                     	;# 
   362  0188                     	;# 
   363  0189                     	;# 
   364  018C                     	;# 
   365  018D                     	;# 
   366  001E                     _ADRESH	set	30
   367  001F                     _ADCON0bits	set	31
   368  0013                     _SSPBUF	set	19
   369  0014                     _SSPCON	set	20
   370  000C                     _PIR1bits	set	12
   371  0006                     _PORTB	set	6
   372  000B                     _INTCONbits	set	11
   373  009F                     _ADCON1bits	set	159
   374  0094                     _SSPSTATbits	set	148
   375  0094                     _SSPSTAT	set	148
   376  0086                     _TRISB	set	134
   377  008C                     _PIE1bits	set	140
   378  043B                     _TRISC3	set	1083
   379  043D                     _TRISC5	set	1085
   380  0189                     _ANSELH	set	393
   381  0188                     _ANSEL	set	392
   382                           
   383                           	psect	cinit
   384  000F                     start_initialization:	
   385                           ; #config settings
   386                           
   387  000F                     __initialization:
   388                           
   389                           ; Clear objects allocated to COMMON
   390  000F  01F7               	clrf	__pbssCOMMON& (0+127)
   391  0010  01F8               	clrf	(__pbssCOMMON+1)& (0+127)
   392  0011  01F9               	clrf	(__pbssCOMMON+2)& (0+127)
   393  0012                     end_of_initialization:	
   394                           ;End of C runtime variable initialization code
   395                           
   396  0012                     __end_of__initialization:
   397  0012  0183               	clrf	3
   398  0013  120A  118A  2816   	ljmp	_main	;jump to C main() function
   399                           
   400                           	psect	bssCOMMON
   401  0077                     __pbssCOMMON:
   402  0077                     _cadena:
   403  0077                     	ds	1
   404  0078                     _valor:
   405  0078                     	ds	1
   406  0079                     _adcValue:
   407  0079                     	ds	1
   408                           
   409                           	psect	cstackCOMMON
   410  0070                     __pcstackCOMMON:
   411  0070                     ?_initADC:
   412  0070                     ?_readADC:	
   413                           ; 1 bytes @ 0x0
   414                           
   415  0070                     ?_spiRead:	
   416                           ; 1 bytes @ 0x0
   417                           
   418  0070                     ??_spiRead:	
   419                           ; 1 bytes @ 0x0
   420                           
   421  0070                     ?_spiWrite:	
   422                           ; 1 bytes @ 0x0
   423                           
   424  0070                     ??_spiWrite:	
   425                           ; 1 bytes @ 0x0
   426                           
   427  0070                     ?_main:	
   428                           ; 1 bytes @ 0x0
   429                           
   430  0070                     ?_isr:	
   431                           ; 1 bytes @ 0x0
   432                           
   433  0070                     ?_spiReceiveWait:	
   434                           ; 1 bytes @ 0x0
   435                           
   436  0070                     ??_spiReceiveWait:	
   437                           ; 1 bytes @ 0x0
   438                           
   439  0070                     spiWrite@dat:	
   440                           ; 1 bytes @ 0x0
   441                           
   442                           
   443                           ; 1 bytes @ 0x0
   444  0070                     	ds	1
   445  0071                     ??_isr:
   446                           
   447                           ; 1 bytes @ 0x1
   448  0071                     	ds	3
   449  0074                     ?_spiInit:
   450  0074                     ??_initADC:	
   451                           ; 1 bytes @ 0x4
   452                           
   453  0074                     ??_readADC:	
   454                           ; 1 bytes @ 0x4
   455                           
   456  0074                     spiInit@sDataSample:	
   457                           ; 1 bytes @ 0x4
   458                           
   459                           
   460                           ; 1 bytes @ 0x4
   461  0074                     	ds	1
   462  0075                     spiInit@sClockIdle:
   463  0075                     readADC@pin:	
   464                           ; 1 bytes @ 0x5
   465                           
   466                           
   467                           ; 1 bytes @ 0x5
   468  0075                     	ds	1
   469  0076                     spiInit@sTransmitEdge:
   470                           
   471                           ; 1 bytes @ 0x6
   472  0076                     	ds	1
   473  0077                     ??_spiInit:
   474                           
   475                           	psect	cstackBANK0
   476  0020                     __pcstackBANK0:	
   477                           ; 1 bytes @ 0x7
   478                           
   479  0020                     spiInit@sType:
   480                           
   481                           ; 1 bytes @ 0x0
   482  0020                     	ds	1
   483  0021                     ??_main:
   484                           
   485                           ; 1 bytes @ 0x1
   486  0021                     	ds	1
   487                           
   488                           	psect	maintext
   489  0016                     __pmaintext:	
   490 ;;
   491 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   492 ;;
   493 ;; *************** function _main *****************
   494 ;; Defined at:
   495 ;;		line 40 in file "main.c"
   496 ;; Parameters:    Size  Location     Type
   497 ;;		None
   498 ;; Auto vars:     Size  Location     Type
   499 ;;		None
   500 ;; Return value:  Size  Location     Type
   501 ;;                  1    wreg      void 
   502 ;; Registers used:
   503 ;;		wreg, status,2, status,0, pclath, cstack
   504 ;; Tracked objects:
   505 ;;		On entry : B00/0
   506 ;;		On exit  : 0/0
   507 ;;		Unchanged: 0/0
   508 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   509 ;;      Params:         0       0       0       0       0
   510 ;;      Locals:         0       0       0       0       0
   511 ;;      Temps:          0       1       0       0       0
   512 ;;      Totals:         0       1       0       0       0
   513 ;;Total ram usage:        1 bytes
   514 ;; Hardware stack levels required when called:    4
   515 ;; This function calls:
   516 ;;		_initADC
   517 ;;		_readADC
   518 ;;		_spiInit
   519 ;; This function is called by:
   520 ;;		Startup code after reset
   521 ;; This function uses a non-reentrant model
   522 ;;
   523                           
   524                           
   525                           ;psect for function _main
   526  0016                     _main:
   527  0016                     l800:	
   528                           ;incstack = 0
   529                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   530                           
   531                           
   532                           ;main.c: 41:     ANSEL = 1;
   533  0016  3001               	movlw	1
   534  0017  1683               	bsf	3,5	;RP0=1, select bank3
   535  0018  1703               	bsf	3,6	;RP1=1, select bank3
   536  0019  0088               	movwf	8	;volatile
   537  001A                     l802:
   538                           
   539                           ;main.c: 42:     ANSELH= 0;
   540  001A  0189               	clrf	9	;volatile
   541  001B                     l804:
   542                           
   543                           ;main.c: 43:     INTCONbits.GIE =1;
   544  001B  178B               	bsf	11,7	;volatile
   545  001C                     l806:
   546                           
   547                           ;main.c: 44:     INTCONbits.PEIE =1;
   548  001C  170B               	bsf	11,6	;volatile
   549  001D                     l808:
   550                           
   551                           ;main.c: 45:     PIE1bits.SSPIE = 1;
   552  001D  1683               	bsf	3,5	;RP0=1, select bank1
   553  001E  1303               	bcf	3,6	;RP1=0, select bank1
   554  001F  158C               	bsf	12,3	;volatile
   555  0020                     l810:
   556                           
   557                           ;main.c: 46:     TRISB = 0;
   558  0020  0186               	clrf	6	;volatile
   559  0021                     l812:
   560                           
   561                           ;main.c: 48:     spiInit(SPI_SLAVE_SS_EN,SPI_DATA_SAMPLE_MIDDLE,
   562  0021  01F4               	clrf	spiInit@sDataSample
   563  0022  01F5               	clrf	spiInit@sClockIdle
   564  0023  01F6               	clrf	spiInit@sTransmitEdge
   565  0024  3024               	movlw	36
   566  0025  120A  118A  2062  120A  118A  	fcall	_spiInit
   567  002A                     l814:
   568                           
   569                           ;main.c: 50:     initADC();
   570  002A  120A  118A  2093  120A  118A  	fcall	_initADC
   571  002F                     l816:
   572                           
   573                           ;main.c: 53:         adcValue = readADC(0);
   574  002F  3000               	movlw	0
   575  0030  120A  118A  2080  120A  118A  	fcall	_readADC
   576  0035  1283               	bcf	3,5	;RP0=0, select bank0
   577  0036  1303               	bcf	3,6	;RP1=0, select bank0
   578  0037  00A1               	movwf	??_main
   579  0038  0821               	movf	??_main,w
   580  0039  00F9               	movwf	_adcValue
   581  003A                     l818:
   582                           
   583                           ;main.c: 54:         PORTB = adcValue;
   584  003A  0879               	movf	_adcValue,w
   585  003B  0086               	movwf	6	;volatile
   586  003C  282F               	goto	l816
   587  003D  120A  118A  280C   	ljmp	start
   588  0040                     __end_of_main:
   589                           
   590                           	psect	text1
   591  0062                     __ptext1:	
   592 ;; *************** function _spiInit *****************
   593 ;; Defined at:
   594 ;;		line 12 in file "spi.c"
   595 ;; Parameters:    Size  Location     Type
   596 ;;  sType           1    wreg     enum E1264
   597 ;;  sDataSample     1    4[COMMON] enum E1272
   598 ;;  sClockIdle      1    5[COMMON] enum E1276
   599 ;;  sTransmitEdg    1    6[COMMON] enum E1280
   600 ;; Auto vars:     Size  Location     Type
   601 ;;  sType           1    0[BANK0 ] enum E1264
   602 ;; Return value:  Size  Location     Type
   603 ;;                  1    wreg      void 
   604 ;; Registers used:
   605 ;;		wreg, status,2, status,0
   606 ;; Tracked objects:
   607 ;;		On entry : 0/0
   608 ;;		On exit  : 0/0
   609 ;;		Unchanged: 0/0
   610 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   611 ;;      Params:         3       0       0       0       0
   612 ;;      Locals:         0       1       0       0       0
   613 ;;      Temps:          0       0       0       0       0
   614 ;;      Totals:         3       1       0       0       0
   615 ;;Total ram usage:        4 bytes
   616 ;; Hardware stack levels used:    1
   617 ;; Hardware stack levels required when called:    3
   618 ;; This function calls:
   619 ;;		Nothing
   620 ;; This function is called by:
   621 ;;		_main
   622 ;; This function uses a non-reentrant model
   623 ;;
   624                           
   625                           
   626                           ;psect for function _spiInit
   627  0062                     _spiInit:
   628                           
   629                           ;incstack = 0
   630                           ; Regs used in _spiInit: [wreg+status,2+status,0]
   631                           ;spiInit@sType stored from wreg
   632  0062  1283               	bcf	3,5	;RP0=0, select bank0
   633  0063  1303               	bcf	3,6	;RP1=0, select bank0
   634  0064  00A0               	movwf	spiInit@sType
   635  0065                     l790:
   636                           
   637                           ;spi.c: 12: void spiInit(Spi_Type sType, Spi_Data_Sample sDataSample, Spi_Clock_Idle sCl
      +                          ockIdle, Spi_Transmit_Edge sTransmitEdge);spi.c: 13: {;spi.c: 14:     TRISC5 = 0;
   638  0065  1683               	bsf	3,5	;RP0=1, select bank1
   639  0066  1303               	bcf	3,6	;RP1=0, select bank1
   640  0067  1287               	bcf	7,5	;volatile
   641                           
   642                           ;spi.c: 15:     if(sType & 0b00000100)
   643  0068  1283               	bcf	3,5	;RP0=0, select bank0
   644  0069  1303               	bcf	3,6	;RP1=0, select bank0
   645  006A  1D20               	btfss	spiInit@sType,2
   646  006B  286D               	goto	u71
   647  006C  286E               	goto	u70
   648  006D                     u71:
   649  006D  2874               	goto	l796
   650  006E                     u70:
   651  006E                     l792:
   652                           
   653                           ;spi.c: 16:     {;spi.c: 17:         SSPSTAT = sTransmitEdge;
   654  006E  0876               	movf	spiInit@sTransmitEdge,w
   655  006F  1683               	bsf	3,5	;RP0=1, select bank1
   656  0070  1303               	bcf	3,6	;RP1=0, select bank1
   657  0071  0094               	movwf	20	;volatile
   658  0072                     l794:
   659                           
   660                           ;spi.c: 18:         TRISC3 = 1;
   661  0072  1587               	bsf	7,3	;volatile
   662                           
   663                           ;spi.c: 19:     }
   664  0073  287A               	goto	l61
   665  0074                     l796:
   666                           
   667                           ;spi.c: 21:     {;spi.c: 22:         SSPSTAT = sDataSample | sTransmitEdge;
   668  0074  0874               	movf	spiInit@sDataSample,w
   669  0075  0476               	iorwf	spiInit@sTransmitEdge,w
   670  0076  1683               	bsf	3,5	;RP0=1, select bank1
   671  0077  1303               	bcf	3,6	;RP1=0, select bank1
   672  0078  0094               	movwf	20	;volatile
   673  0079                     l798:
   674                           
   675                           ;spi.c: 23:         TRISC3 = 0;
   676  0079  1187               	bcf	7,3	;volatile
   677  007A                     l61:	
   678                           ;spi.c: 24:     }
   679                           
   680                           
   681                           ;spi.c: 26:     SSPCON = sType | sClockIdle;
   682  007A  1283               	bcf	3,5	;RP0=0, select bank0
   683  007B  1303               	bcf	3,6	;RP1=0, select bank0
   684  007C  0820               	movf	spiInit@sType,w
   685  007D  0475               	iorwf	spiInit@sClockIdle,w
   686  007E  0094               	movwf	20	;volatile
   687  007F                     l62:
   688  007F  0008               	return
   689  0080                     __end_of_spiInit:
   690                           
   691                           	psect	text2
   692  0080                     __ptext2:	
   693 ;; *************** function _readADC *****************
   694 ;; Defined at:
   695 ;;		line 33 in file "ADC.c"
   696 ;; Parameters:    Size  Location     Type
   697 ;;  pin             1    wreg     unsigned char 
   698 ;; Auto vars:     Size  Location     Type
   699 ;;  pin             1    5[COMMON] unsigned char 
   700 ;; Return value:  Size  Location     Type
   701 ;;                  1    wreg      unsigned char 
   702 ;; Registers used:
   703 ;;		wreg, status,2, status,0
   704 ;; Tracked objects:
   705 ;;		On entry : 0/0
   706 ;;		On exit  : 0/0
   707 ;;		Unchanged: 0/0
   708 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   709 ;;      Params:         0       0       0       0       0
   710 ;;      Locals:         1       0       0       0       0
   711 ;;      Temps:          1       0       0       0       0
   712 ;;      Totals:         2       0       0       0       0
   713 ;;Total ram usage:        2 bytes
   714 ;; Hardware stack levels used:    1
   715 ;; Hardware stack levels required when called:    3
   716 ;; This function calls:
   717 ;;		Nothing
   718 ;; This function is called by:
   719 ;;		_main
   720 ;; This function uses a non-reentrant model
   721 ;;
   722                           
   723                           
   724                           ;psect for function _readADC
   725  0080                     _readADC:
   726                           
   727                           ;incstack = 0
   728                           ; Regs used in _readADC: [wreg+status,2+status,0]
   729                           ;readADC@pin stored from wreg
   730  0080  00F5               	movwf	readADC@pin
   731  0081                     l708:
   732                           
   733                           ;ADC.c: 34:     ADCON0bits.CHS = pin;
   734  0081  0875               	movf	readADC@pin,w
   735  0082  00F4               	movwf	??_readADC
   736  0083  0DF4               	rlf	??_readADC,f
   737  0084  0DF4               	rlf	??_readADC,f
   738  0085  1283               	bcf	3,5	;RP0=0, select bank0
   739  0086  1303               	bcf	3,6	;RP1=0, select bank0
   740  0087  081F               	movf	31,w	;volatile
   741  0088  0674               	xorwf	??_readADC,w
   742  0089  39C3               	andlw	-61
   743  008A  0674               	xorwf	??_readADC,w
   744  008B  009F               	movwf	31	;volatile
   745  008C                     l710:
   746                           
   747                           ;ADC.c: 35:     ADCON0bits.GO = 1;
   748  008C  149F               	bsf	31,1	;volatile
   749  008D                     l91:	
   750                           ;ADC.c: 36:     while(ADCON0bits.GO);
   751                           
   752  008D  189F               	btfsc	31,1	;volatile
   753  008E  2890               	goto	u31
   754  008F  2891               	goto	u30
   755  0090                     u31:
   756  0090  288D               	goto	l91
   757  0091                     u30:
   758  0091                     l712:
   759                           
   760                           ;ADC.c: 37:     return ADRESH;
   761  0091  081E               	movf	30,w	;volatile
   762  0092                     l94:
   763  0092  0008               	return
   764  0093                     __end_of_readADC:
   765                           
   766                           	psect	text3
   767  0093                     __ptext3:	
   768 ;; *************** function _initADC *****************
   769 ;; Defined at:
   770 ;;		line 11 in file "ADC.c"
   771 ;; Parameters:    Size  Location     Type
   772 ;;		None
   773 ;; Auto vars:     Size  Location     Type
   774 ;;		None
   775 ;; Return value:  Size  Location     Type
   776 ;;                  1    wreg      void 
   777 ;; Registers used:
   778 ;;		wreg, status,2, status,0
   779 ;; Tracked objects:
   780 ;;		On entry : 0/0
   781 ;;		On exit  : 0/0
   782 ;;		Unchanged: 0/0
   783 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   784 ;;      Params:         0       0       0       0       0
   785 ;;      Locals:         0       0       0       0       0
   786 ;;      Temps:          0       0       0       0       0
   787 ;;      Totals:         0       0       0       0       0
   788 ;;Total ram usage:        0 bytes
   789 ;; Hardware stack levels used:    1
   790 ;; Hardware stack levels required when called:    3
   791 ;; This function calls:
   792 ;;		Nothing
   793 ;; This function is called by:
   794 ;;		_main
   795 ;; This function uses a non-reentrant model
   796 ;;
   797                           
   798                           
   799                           ;psect for function _initADC
   800  0093                     _initADC:
   801  0093                     l698:	
   802                           ;incstack = 0
   803                           ; Regs used in _initADC: [wreg+status,2+status,0]
   804                           
   805                           
   806                           ;ADC.c: 18:     ADCON0bits.ADCS = 1;
   807  0093  1283               	bcf	3,5	;RP0=0, select bank0
   808  0094  1303               	bcf	3,6	;RP1=0, select bank0
   809  0095  081F               	movf	31,w	;volatile
   810  0096  393F               	andlw	-193
   811  0097  3840               	iorlw	64
   812  0098  009F               	movwf	31	;volatile
   813  0099                     l700:
   814                           
   815                           ;ADC.c: 26:     ADCON1bits.VCFG1 = 0;
   816  0099  1683               	bsf	3,5	;RP0=1, select bank1
   817  009A  1303               	bcf	3,6	;RP1=0, select bank1
   818  009B  129F               	bcf	31,5	;volatile
   819  009C                     l702:
   820                           
   821                           ;ADC.c: 27:     ADCON1bits.VCFG0 = 0;
   822  009C  121F               	bcf	31,4	;volatile
   823  009D                     l704:
   824                           
   825                           ;ADC.c: 28:     ADCON0bits.ADON = 1;
   826  009D  1283               	bcf	3,5	;RP0=0, select bank0
   827  009E  1303               	bcf	3,6	;RP1=0, select bank0
   828  009F  141F               	bsf	31,0	;volatile
   829  00A0                     l88:
   830  00A0  0008               	return
   831  00A1                     __end_of_initADC:
   832                           
   833                           	psect	text4
   834  0040                     __ptext4:	
   835 ;; *************** function _isr *****************
   836 ;; Defined at:
   837 ;;		line 60 in file "main.c"
   838 ;; Parameters:    Size  Location     Type
   839 ;;		None
   840 ;; Auto vars:     Size  Location     Type
   841 ;;		None
   842 ;; Return value:  Size  Location     Type
   843 ;;                  1    wreg      void 
   844 ;; Registers used:
   845 ;;		wreg, status,2, status,0, pclath, cstack
   846 ;; Tracked objects:
   847 ;;		On entry : 0/0
   848 ;;		On exit  : 0/0
   849 ;;		Unchanged: 0/0
   850 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   851 ;;      Params:         0       0       0       0       0
   852 ;;      Locals:         0       0       0       0       0
   853 ;;      Temps:          3       0       0       0       0
   854 ;;      Totals:         3       0       0       0       0
   855 ;;Total ram usage:        3 bytes
   856 ;; Hardware stack levels used:    1
   857 ;; Hardware stack levels required when called:    2
   858 ;; This function calls:
   859 ;;		_spiRead
   860 ;;		_spiWrite
   861 ;; This function is called by:
   862 ;;		Interrupt level 1
   863 ;; This function uses a non-reentrant model
   864 ;;
   865                           
   866                           
   867                           ;psect for function _isr
   868  0040                     _isr:
   869  0040                     i1l744:
   870                           
   871                           ;main.c: 61:     if(PIR1bits.SSPIF ==1){
   872  0040  1283               	bcf	3,5	;RP0=0, select bank0
   873  0041  1303               	bcf	3,6	;RP1=0, select bank0
   874  0042  1D8C               	btfss	12,3	;volatile
   875  0043  2845               	goto	u4_21
   876  0044  2846               	goto	u4_20
   877  0045                     u4_21:
   878  0045  285B               	goto	i1l45
   879  0046                     u4_20:
   880  0046                     i1l746:
   881                           
   882                           ;main.c: 62:         PIR1bits.SSPIF = 0;
   883  0046  118C               	bcf	12,3	;volatile
   884  0047                     i1l748:
   885                           
   886                           ;main.c: 63:         valor = spiRead();
   887  0047  120A  118A  20A1  120A  118A  	fcall	_spiRead
   888  004C  00F1               	movwf	??_isr
   889  004D  0871               	movf	??_isr,w
   890  004E  00F8               	movwf	_valor
   891  004F                     i1l750:
   892                           
   893                           ;main.c: 64:         if(valor == 'A') spiWrite(adcValue);
   894  004F  3041               	movlw	65
   895  0050  0678               	xorwf	_valor,w
   896  0051  1D03               	btfss	3,2
   897  0052  2854               	goto	u5_21
   898  0053  2855               	goto	u5_20
   899  0054                     u5_21:
   900  0054  285B               	goto	i1l45
   901  0055                     u5_20:
   902  0055                     i1l752:
   903  0055  0879               	movf	_adcValue,w
   904  0056  120A  118A  20B1  120A  118A  	fcall	_spiWrite
   905  005B                     i1l45:
   906  005B  0873               	movf	??_isr+2,w
   907  005C  008A               	movwf	10
   908  005D  0E72               	swapf	??_isr+1,w
   909  005E  0083               	movwf	3
   910  005F  0EFE               	swapf	btemp,f
   911  0060  0E7E               	swapf	btemp,w
   912  0061  0009               	retfie
   913  0062                     __end_of_isr:
   914                           
   915                           	psect	intentry
   916  0004                     __pintentry:	
   917                           ;incstack = 0
   918                           ; Regs used in _isr: [wreg+status,2+status,0+pclath+cstack]
   919                           
   920  0004                     interrupt_function:
   921  007E                     saved_w	set	btemp
   922  0004  00FE               	movwf	btemp
   923  0005  0E03               	swapf	3,w
   924  0006  00F2               	movwf	??_isr+1
   925  0007  080A               	movf	10,w
   926  0008  00F3               	movwf	??_isr+2
   927  0009  120A  118A  2840   	ljmp	_isr
   928                           
   929                           	psect	text5
   930  00B1                     __ptext5:	
   931 ;; *************** function _spiWrite *****************
   932 ;; Defined at:
   933 ;;		line 34 in file "spi.c"
   934 ;; Parameters:    Size  Location     Type
   935 ;;  dat             1    wreg     unsigned char 
   936 ;; Auto vars:     Size  Location     Type
   937 ;;  dat             1    0[COMMON] unsigned char 
   938 ;; Return value:  Size  Location     Type
   939 ;;                  1    wreg      void 
   940 ;; Registers used:
   941 ;;		wreg
   942 ;; Tracked objects:
   943 ;;		On entry : 0/0
   944 ;;		On exit  : 0/0
   945 ;;		Unchanged: 0/0
   946 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   947 ;;      Params:         0       0       0       0       0
   948 ;;      Locals:         1       0       0       0       0
   949 ;;      Temps:          0       0       0       0       0
   950 ;;      Totals:         1       0       0       0       0
   951 ;;Total ram usage:        1 bytes
   952 ;; Hardware stack levels used:    1
   953 ;; This function calls:
   954 ;;		Nothing
   955 ;; This function is called by:
   956 ;;		_isr
   957 ;; This function uses a non-reentrant model
   958 ;;
   959                           
   960                           
   961                           ;psect for function _spiWrite
   962  00B1                     _spiWrite:
   963                           
   964                           ;incstack = 0
   965                           ; Regs used in _spiWrite: [wreg]
   966                           ;spiWrite@dat stored from wreg
   967  00B1  00F0               	movwf	spiWrite@dat
   968  00B2                     i1l722:
   969                           
   970                           ;spi.c: 34: void spiWrite(char dat);spi.c: 35: {;spi.c: 36:     SSPBUF = dat;
   971  00B2  0870               	movf	spiWrite@dat,w
   972  00B3  1283               	bcf	3,5	;RP0=0, select bank0
   973  00B4  1303               	bcf	3,6	;RP1=0, select bank0
   974  00B5  0093               	movwf	19	;volatile
   975  00B6                     i1l71:
   976  00B6  0008               	return
   977  00B7                     __end_of_spiWrite:
   978                           
   979                           	psect	text6
   980  00A1                     __ptext6:	
   981 ;; *************** function _spiRead *****************
   982 ;; Defined at:
   983 ;;		line 47 in file "spi.c"
   984 ;; Parameters:    Size  Location     Type
   985 ;;		None
   986 ;; Auto vars:     Size  Location     Type
   987 ;;		None
   988 ;; Return value:  Size  Location     Type
   989 ;;                  1    wreg      unsigned char 
   990 ;; Registers used:
   991 ;;		wreg, status,2, status,0, pclath, cstack
   992 ;; Tracked objects:
   993 ;;		On entry : 0/0
   994 ;;		On exit  : 0/0
   995 ;;		Unchanged: 0/0
   996 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   997 ;;      Params:         0       0       0       0       0
   998 ;;      Locals:         0       0       0       0       0
   999 ;;      Temps:          0       0       0       0       0
  1000 ;;      Totals:         0       0       0       0       0
  1001 ;;Total ram usage:        0 bytes
  1002 ;; Hardware stack levels used:    1
  1003 ;; Hardware stack levels required when called:    1
  1004 ;; This function calls:
  1005 ;;		_spiReceiveWait
  1006 ;; This function is called by:
  1007 ;;		_isr
  1008 ;; This function uses a non-reentrant model
  1009 ;;
  1010                           
  1011                           
  1012                           ;psect for function _spiRead
  1013  00A1                     _spiRead:
  1014  00A1                     i1l716:	
  1015                           ;incstack = 0
  1016                           ; Regs used in _spiRead: [wreg+status,2+status,0+pclath+cstack]
  1017                           
  1018                           
  1019                           ;spi.c: 49:     spiReceiveWait();
  1020  00A1  120A  118A  20AA  120A  118A  	fcall	_spiReceiveWait
  1021  00A6                     i1l718:
  1022                           
  1023                           ;spi.c: 50:     return(SSPBUF);
  1024  00A6  1283               	bcf	3,5	;RP0=0, select bank0
  1025  00A7  1303               	bcf	3,6	;RP1=0, select bank0
  1026  00A8  0813               	movf	19,w	;volatile
  1027  00A9                     i1l79:
  1028  00A9  0008               	return
  1029  00AA                     __end_of_spiRead:
  1030                           
  1031                           	psect	text7
  1032  00AA                     __ptext7:	
  1033 ;; *************** function _spiReceiveWait *****************
  1034 ;; Defined at:
  1035 ;;		line 29 in file "spi.c"
  1036 ;; Parameters:    Size  Location     Type
  1037 ;;		None
  1038 ;; Auto vars:     Size  Location     Type
  1039 ;;		None
  1040 ;; Return value:  Size  Location     Type
  1041 ;;                  1    wreg      void 
  1042 ;; Registers used:
  1043 ;;		None
  1044 ;; Tracked objects:
  1045 ;;		On entry : 0/0
  1046 ;;		On exit  : 0/0
  1047 ;;		Unchanged: 0/0
  1048 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1049 ;;      Params:         0       0       0       0       0
  1050 ;;      Locals:         0       0       0       0       0
  1051 ;;      Temps:          0       0       0       0       0
  1052 ;;      Totals:         0       0       0       0       0
  1053 ;;Total ram usage:        0 bytes
  1054 ;; Hardware stack levels used:    1
  1055 ;; This function calls:
  1056 ;;		Nothing
  1057 ;; This function is called by:
  1058 ;;		_spiRead
  1059 ;; This function uses a non-reentrant model
  1060 ;;
  1061                           
  1062                           
  1063                           ;psect for function _spiReceiveWait
  1064  00AA                     _spiReceiveWait:
  1065  00AA                     i1l686:	
  1066                           ;incstack = 0
  1067                           ; Regs used in _spiReceiveWait: []
  1068                           
  1069  00AA                     i1l65:	
  1070                           ;spi.c: 31:     while ( !SSPSTATbits.BF );
  1071                           
  1072  00AA  1683               	bsf	3,5	;RP0=1, select bank1
  1073  00AB  1303               	bcf	3,6	;RP1=0, select bank1
  1074  00AC  1C14               	btfss	20,0	;volatile
  1075  00AD  28AF               	goto	u1_21
  1076  00AE  28B0               	goto	u1_20
  1077  00AF                     u1_21:
  1078  00AF  28AA               	goto	i1l65
  1079  00B0                     u1_20:
  1080  00B0                     i1l68:
  1081  00B0  0008               	return
  1082  00B1                     __end_of_spiReceiveWait:
  1083  007E                     btemp	set	126	;btemp
  1084  007E                     wtemp0	set	126
  1085                           
  1086                           	psect	config
  1087                           
  1088                           ;Config register CONFIG1 @ 0x2007
  1089                           ;	Oscillator Selection bits
  1090                           ;	FOSC = EXTRC_CLKOUT, RC oscillator: CLKOUT function on RA6/OSC2/CLKOUT pin, RC on RA7/
      +                          OSC1/CLKIN
  1091                           ;	Watchdog Timer Enable bit
  1092                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1093                           ;	Power-up Timer Enable bit
  1094                           ;	PWRTE = OFF, PWRT disabled
  1095                           ;	RE3/MCLR pin function select bit
  1096                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1097                           ;	Code Protection bit
  1098                           ;	CP = OFF, Program memory code protection is disabled
  1099                           ;	Data Code Protection bit
  1100                           ;	CPD = OFF, Data memory code protection is disabled
  1101                           ;	Brown Out Reset Selection bits
  1102                           ;	BOREN = OFF, BOR disabled
  1103                           ;	Internal External Switchover bit
  1104                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1105                           ;	Fail-Safe Clock Monitor Enabled bit
  1106                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1107                           ;	Low Voltage Programming Enable bit
  1108                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1109                           ;	In-Circuit Debugger Mode bit
  1110                           ;	DEBUG = 0x1, unprogrammed default
  1111  2007                     	org	8199
  1112  2007  20D7               	dw	8407
  1113                           
  1114                           ;Config register CONFIG2 @ 0x2008
  1115                           ;	Brown-out Reset Selection bit
  1116                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1117                           ;	Flash Program Memory Self Write Enable bits
  1118                           ;	WRT = OFF, Write protection off
  1119  2008                     	org	8200
  1120  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         3
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7      10
    BANK0            80      2       2
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    cadena	PTR unsigned char  size(1) Largest target is 0
		 -> NULL(NULL[0]), 


Critical Paths under _main in COMMON

    _main->_spiInit

Critical Paths under _isr in COMMON

    _isr->_spiWrite

Critical Paths under _main in BANK0

    _main->_spiInit

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0     471
                                              1 BANK0      1     1      0
                            _initADC
                            _readADC
                            _spiInit
 ---------------------------------------------------------------------------------
 (1) _spiInit                                              4     1      3     456
                                              4 COMMON     3     0      3
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _readADC                                              2     2      0      15
                                              4 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _initADC                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _isr                                                  3     3      0      15
                                              1 COMMON     3     3      0
                            _spiRead
                           _spiWrite
 ---------------------------------------------------------------------------------
 (3) _spiWrite                                             1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (3) _spiRead                                              0     0      0       0
                     _spiReceiveWait
 ---------------------------------------------------------------------------------
 (4) _spiReceiveWait                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _initADC
   _readADC
   _spiInit

 _isr (ROOT)
   _spiRead
     _spiReceiveWait
   _spiWrite

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      7       A       1       71.4%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       C       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      2       2       5        2.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       C      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Mon Feb 15 15:39:33 2021

            _SSPSTATbits 0094                       l61 007A                       l62 007F  
                     l91 008D                       l94 0092                       l88 00A0  
                     u30 0091                       u31 0090                       u70 006E  
                     u71 006D                      l700 0099                      l702 009C  
                    l710 008C                      l704 009D                      l712 0091  
                    l800 0016                      l810 0020                      l802 001A  
                    l708 0081                      l812 0021                      l804 001B  
                    l814 002A                      l806 001C                      l816 002F  
                    l808 001D                      l818 003A                      l790 0065  
                    l792 006E                      l698 0093                      l794 0072  
                    l796 0074                      l798 0079                      _isr 0040  
                   ?_isr 0070                     i1l45 005B                     i1l71 00B6  
                   i1l65 00AA                     i1l68 00B0                     i1l79 00A9  
                   u1_20 00B0                     u1_21 00AF                     u4_20 0046  
                   u4_21 0045                     u5_20 0055                     u5_21 0054  
                   _main 0016                     btemp 007E                     start 000C  
                  ??_isr 0071                    ?_main 0070                    _ANSEL 0188  
                  i1l722 00B2                    i1l716 00A1                    i1l718 00A6  
                  i1l750 004F                    i1l752 0055                    i1l744 0040  
                  i1l746 0046                    i1l748 0047                    i1l686 00AA  
                  _PORTB 0006                    _TRISB 0086          __end_of_initADC 00A1  
        __end_of_readADC 0093                    _valor 0078                    pclath 000A  
        __end_of_spiInit 0080          __end_of_spiRead 00AA                    status 0003  
                  wtemp0 007E          __initialization 000F             __end_of_main 0040  
                 ??_main 0021                   _ADRESH 001E                   _ANSELH 0189  
                 _TRISC3 043B                   _TRISC5 043D                   _SSPCON 0014  
                 _SSPBUF 0013                   _cadena 0077                ??_initADC 0074  
              ??_readADC 0074                   saved_w 007E         __end_of_spiWrite 00B7  
              ??_spiInit 0077                ??_spiRead 0070  __end_of__initialization 0012  
         __pcstackCOMMON 0070               __pmaintext 0016               __pintentry 0004  
__size_of_spiReceiveWait 0007                  _SSPSTAT 0094                ?_spiWrite 0070  
                __ptext1 0062                  __ptext2 0080                  __ptext3 0093  
                __ptext4 0040                  __ptext5 00B1                  __ptext6 00A1  
                __ptext7 00AA                  _initADC 0093                  _readADC 0080  
           __size_of_isr 0022                  _spiInit 0062                  _spiRead 00A1  
   end_of_initialization 0012               ??_spiWrite 0070              spiWrite@dat 0070  
         _spiReceiveWait 00AA               readADC@pin 0075      start_initialization 000F  
            __end_of_isr 0062   __end_of_spiReceiveWait 00B1              __pbssCOMMON 0077  
              ___latbits 0002            __pcstackBANK0 0020          ?_spiReceiveWait 0070  
      __size_of_spiWrite 0006                 ?_initADC 0070                 ?_readADC 0070  
               ?_spiInit 0074                 ?_spiRead 0070     spiInit@sTransmitEdge 0076  
      interrupt_function 0004                 _PIE1bits 008C       spiInit@sDataSample 0074  
               _PIR1bits 000C               _ADCON0bits 001F               _ADCON1bits 009F  
               _adcValue 0079         __size_of_initADC 000E         __size_of_readADC 0013  
       __size_of_spiInit 001E         __size_of_spiRead 0009            __size_of_main 002A  
               _spiWrite 00B1             spiInit@sType 0020        spiInit@sClockIdle 0075  
             _INTCONbits 000B                 intlevel1 0000         ??_spiReceiveWait 0070  
