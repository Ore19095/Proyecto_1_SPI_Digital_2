

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Sun Feb 14 19:53:55 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2
    13                           	psect	intentry,global,class=CODE,delta=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2
    15                           	psect	text6,local,class=CODE,merge=1,delta=2
    16                           	psect	text7,local,class=CODE,merge=1,delta=2
    17                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    18                           	dabs	1,0x7E,2
    19  0000                     
    20                           ; Version 2.20
    21                           ; Generated 12/02/2020 GMT
    22                           ; 
    23                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    24                           ; All rights reserved.
    25                           ; 
    26                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    27                           ; 
    28                           ; Redistribution and use in source and binary forms, with or without modification, are
    29                           ; permitted provided that the following conditions are met:
    30                           ; 
    31                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    32                           ;        conditions and the following disclaimer.
    33                           ; 
    34                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    35                           ;        of conditions and the following disclaimer in the documentation and/or other
    36                           ;        materials provided with the distribution.
    37                           ; 
    38                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    39                           ;        software without specific prior written permission.
    40                           ; 
    41                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    42                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    43                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    44                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    45                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    46                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    47                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    48                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    49                           ; 
    50                           ; 
    51                           ; Code-generator required, PIC16F887 Definitions
    52                           ; 
    53                           ; SFR Addresses
    54  0000                     	;# 
    55  0001                     	;# 
    56  0002                     	;# 
    57  0003                     	;# 
    58  0004                     	;# 
    59  0005                     	;# 
    60  0006                     	;# 
    61  0007                     	;# 
    62  0008                     	;# 
    63  0009                     	;# 
    64  000A                     	;# 
    65  000B                     	;# 
    66  000C                     	;# 
    67  000D                     	;# 
    68  000E                     	;# 
    69  000E                     	;# 
    70  000F                     	;# 
    71  0010                     	;# 
    72  0011                     	;# 
    73  0012                     	;# 
    74  0013                     	;# 
    75  0014                     	;# 
    76  0015                     	;# 
    77  0015                     	;# 
    78  0016                     	;# 
    79  0017                     	;# 
    80  0018                     	;# 
    81  0019                     	;# 
    82  001A                     	;# 
    83  001B                     	;# 
    84  001B                     	;# 
    85  001C                     	;# 
    86  001D                     	;# 
    87  001E                     	;# 
    88  001F                     	;# 
    89  0081                     	;# 
    90  0085                     	;# 
    91  0086                     	;# 
    92  0087                     	;# 
    93  0088                     	;# 
    94  0089                     	;# 
    95  008C                     	;# 
    96  008D                     	;# 
    97  008E                     	;# 
    98  008F                     	;# 
    99  0090                     	;# 
   100  0091                     	;# 
   101  0092                     	;# 
   102  0093                     	;# 
   103  0093                     	;# 
   104  0093                     	;# 
   105  0094                     	;# 
   106  0095                     	;# 
   107  0096                     	;# 
   108  0097                     	;# 
   109  0098                     	;# 
   110  0099                     	;# 
   111  009A                     	;# 
   112  009B                     	;# 
   113  009C                     	;# 
   114  009D                     	;# 
   115  009E                     	;# 
   116  009F                     	;# 
   117  0105                     	;# 
   118  0107                     	;# 
   119  0108                     	;# 
   120  0109                     	;# 
   121  010C                     	;# 
   122  010C                     	;# 
   123  010D                     	;# 
   124  010E                     	;# 
   125  010F                     	;# 
   126  0185                     	;# 
   127  0187                     	;# 
   128  0188                     	;# 
   129  0189                     	;# 
   130  018C                     	;# 
   131  018D                     	;# 
   132  0000                     	;# 
   133  0001                     	;# 
   134  0002                     	;# 
   135  0003                     	;# 
   136  0004                     	;# 
   137  0005                     	;# 
   138  0006                     	;# 
   139  0007                     	;# 
   140  0008                     	;# 
   141  0009                     	;# 
   142  000A                     	;# 
   143  000B                     	;# 
   144  000C                     	;# 
   145  000D                     	;# 
   146  000E                     	;# 
   147  000E                     	;# 
   148  000F                     	;# 
   149  0010                     	;# 
   150  0011                     	;# 
   151  0012                     	;# 
   152  0013                     	;# 
   153  0014                     	;# 
   154  0015                     	;# 
   155  0015                     	;# 
   156  0016                     	;# 
   157  0017                     	;# 
   158  0018                     	;# 
   159  0019                     	;# 
   160  001A                     	;# 
   161  001B                     	;# 
   162  001B                     	;# 
   163  001C                     	;# 
   164  001D                     	;# 
   165  001E                     	;# 
   166  001F                     	;# 
   167  0081                     	;# 
   168  0085                     	;# 
   169  0086                     	;# 
   170  0087                     	;# 
   171  0088                     	;# 
   172  0089                     	;# 
   173  008C                     	;# 
   174  008D                     	;# 
   175  008E                     	;# 
   176  008F                     	;# 
   177  0090                     	;# 
   178  0091                     	;# 
   179  0092                     	;# 
   180  0093                     	;# 
   181  0093                     	;# 
   182  0093                     	;# 
   183  0094                     	;# 
   184  0095                     	;# 
   185  0096                     	;# 
   186  0097                     	;# 
   187  0098                     	;# 
   188  0099                     	;# 
   189  009A                     	;# 
   190  009B                     	;# 
   191  009C                     	;# 
   192  009D                     	;# 
   193  009E                     	;# 
   194  009F                     	;# 
   195  0105                     	;# 
   196  0107                     	;# 
   197  0108                     	;# 
   198  0109                     	;# 
   199  010C                     	;# 
   200  010C                     	;# 
   201  010D                     	;# 
   202  010E                     	;# 
   203  010F                     	;# 
   204  0185                     	;# 
   205  0187                     	;# 
   206  0188                     	;# 
   207  0189                     	;# 
   208  018C                     	;# 
   209  018D                     	;# 
   210  0000                     	;# 
   211  0001                     	;# 
   212  0002                     	;# 
   213  0003                     	;# 
   214  0004                     	;# 
   215  0005                     	;# 
   216  0006                     	;# 
   217  0007                     	;# 
   218  0008                     	;# 
   219  0009                     	;# 
   220  000A                     	;# 
   221  000B                     	;# 
   222  000C                     	;# 
   223  000D                     	;# 
   224  000E                     	;# 
   225  000E                     	;# 
   226  000F                     	;# 
   227  0010                     	;# 
   228  0011                     	;# 
   229  0012                     	;# 
   230  0013                     	;# 
   231  0014                     	;# 
   232  0015                     	;# 
   233  0015                     	;# 
   234  0016                     	;# 
   235  0017                     	;# 
   236  0018                     	;# 
   237  0019                     	;# 
   238  001A                     	;# 
   239  001B                     	;# 
   240  001B                     	;# 
   241  001C                     	;# 
   242  001D                     	;# 
   243  001E                     	;# 
   244  001F                     	;# 
   245  0081                     	;# 
   246  0085                     	;# 
   247  0086                     	;# 
   248  0087                     	;# 
   249  0088                     	;# 
   250  0089                     	;# 
   251  008C                     	;# 
   252  008D                     	;# 
   253  008E                     	;# 
   254  008F                     	;# 
   255  0090                     	;# 
   256  0091                     	;# 
   257  0092                     	;# 
   258  0093                     	;# 
   259  0093                     	;# 
   260  0093                     	;# 
   261  0094                     	;# 
   262  0095                     	;# 
   263  0096                     	;# 
   264  0097                     	;# 
   265  0098                     	;# 
   266  0099                     	;# 
   267  009A                     	;# 
   268  009B                     	;# 
   269  009C                     	;# 
   270  009D                     	;# 
   271  009E                     	;# 
   272  009F                     	;# 
   273  0105                     	;# 
   274  0107                     	;# 
   275  0108                     	;# 
   276  0109                     	;# 
   277  010C                     	;# 
   278  010C                     	;# 
   279  010D                     	;# 
   280  010E                     	;# 
   281  010F                     	;# 
   282  0185                     	;# 
   283  0187                     	;# 
   284  0188                     	;# 
   285  0189                     	;# 
   286  018C                     	;# 
   287  018D                     	;# 
   288  0000                     	;# 
   289  0001                     	;# 
   290  0002                     	;# 
   291  0003                     	;# 
   292  0004                     	;# 
   293  0005                     	;# 
   294  0006                     	;# 
   295  0007                     	;# 
   296  0008                     	;# 
   297  0009                     	;# 
   298  000A                     	;# 
   299  000B                     	;# 
   300  000C                     	;# 
   301  000D                     	;# 
   302  000E                     	;# 
   303  000E                     	;# 
   304  000F                     	;# 
   305  0010                     	;# 
   306  0011                     	;# 
   307  0012                     	;# 
   308  0013                     	;# 
   309  0014                     	;# 
   310  0015                     	;# 
   311  0015                     	;# 
   312  0016                     	;# 
   313  0017                     	;# 
   314  0018                     	;# 
   315  0019                     	;# 
   316  001A                     	;# 
   317  001B                     	;# 
   318  001B                     	;# 
   319  001C                     	;# 
   320  001D                     	;# 
   321  001E                     	;# 
   322  001F                     	;# 
   323  0081                     	;# 
   324  0085                     	;# 
   325  0086                     	;# 
   326  0087                     	;# 
   327  0088                     	;# 
   328  0089                     	;# 
   329  008C                     	;# 
   330  008D                     	;# 
   331  008E                     	;# 
   332  008F                     	;# 
   333  0090                     	;# 
   334  0091                     	;# 
   335  0092                     	;# 
   336  0093                     	;# 
   337  0093                     	;# 
   338  0093                     	;# 
   339  0094                     	;# 
   340  0095                     	;# 
   341  0096                     	;# 
   342  0097                     	;# 
   343  0098                     	;# 
   344  0099                     	;# 
   345  009A                     	;# 
   346  009B                     	;# 
   347  009C                     	;# 
   348  009D                     	;# 
   349  009E                     	;# 
   350  009F                     	;# 
   351  0105                     	;# 
   352  0107                     	;# 
   353  0108                     	;# 
   354  0109                     	;# 
   355  010C                     	;# 
   356  010C                     	;# 
   357  010D                     	;# 
   358  010E                     	;# 
   359  010F                     	;# 
   360  0185                     	;# 
   361  0187                     	;# 
   362  0188                     	;# 
   363  0189                     	;# 
   364  018C                     	;# 
   365  018D                     	;# 
   366  001E                     _ADRESH	set	30
   367  001F                     _ADCON0bits	set	31
   368  0013                     _SSPBUF	set	19
   369  0014                     _SSPCON	set	20
   370  000C                     _PIR1bits	set	12
   371  0006                     _PORTB	set	6
   372  000B                     _INTCONbits	set	11
   373  009F                     _ADCON1bits	set	159
   374  0094                     _SSPSTATbits	set	148
   375  0094                     _SSPSTAT	set	148
   376  0086                     _TRISB	set	134
   377  008C                     _PIE1bits	set	140
   378  043B                     _TRISC3	set	1083
   379  043D                     _TRISC5	set	1085
   380  0189                     _ANSELH	set	393
   381  0188                     _ANSEL	set	392
   382                           
   383                           	psect	cinit
   384  000F                     start_initialization:	
   385                           ; #config settings
   386                           
   387  000F                     __initialization:
   388                           
   389                           ; Clear objects allocated to BANK0
   390  000F  1283               	bcf	3,5	;RP0=0, select bank0
   391  0010  1303               	bcf	3,6	;RP1=0, select bank0
   392  0011  01A5               	clrf	__pbssBANK0& (0+127)
   393  0012                     end_of_initialization:	
   394                           ;End of C runtime variable initialization code
   395                           
   396  0012                     __end_of__initialization:
   397  0012  0183               	clrf	3
   398  0013  120A  118A  2816   	ljmp	_main	;jump to C main() function
   399                           
   400                           	psect	bssBANK0
   401  0025                     __pbssBANK0:
   402  0025                     _adcValue:
   403  0025                     	ds	1
   404                           
   405                           	psect	cstackCOMMON
   406  0070                     __pcstackCOMMON:
   407  0070                     ?_initADC:
   408  0070                     ?_readADC:	
   409                           ; 1 bytes @ 0x0
   410                           
   411  0070                     ?_spiRead:	
   412                           ; 1 bytes @ 0x0
   413                           
   414  0070                     ??_spiRead:	
   415                           ; 1 bytes @ 0x0
   416                           
   417  0070                     ?_spiWrite:	
   418                           ; 1 bytes @ 0x0
   419                           
   420  0070                     ??_spiWrite:	
   421                           ; 1 bytes @ 0x0
   422                           
   423  0070                     ?_main:	
   424                           ; 1 bytes @ 0x0
   425                           
   426  0070                     ?_isr:	
   427                           ; 1 bytes @ 0x0
   428                           
   429  0070                     ?_spiReceiveWait:	
   430                           ; 1 bytes @ 0x0
   431                           
   432  0070                     ??_spiReceiveWait:	
   433                           ; 1 bytes @ 0x0
   434                           
   435  0070                     spiWrite@dat:	
   436                           ; 1 bytes @ 0x0
   437                           
   438                           
   439                           ; 1 bytes @ 0x0
   440  0070                     	ds	1
   441  0071                     ??_isr:
   442                           
   443                           ; 1 bytes @ 0x1
   444  0071                     	ds	4
   445  0075                     isr@valor:
   446                           
   447                           ; 2 bytes @ 0x5
   448  0075                     	ds	2
   449  0077                     ??_spiInit:
   450  0077                     ??_initADC:	
   451                           ; 1 bytes @ 0x7
   452                           
   453                           
   454                           	psect	cstackBANK0
   455  0020                     __pcstackBANK0:	
   456                           ; 1 bytes @ 0x7
   457                           
   458  0020                     ?_spiInit:
   459  0020                     ??_readADC:	
   460                           ; 1 bytes @ 0x0
   461                           
   462  0020                     spiInit@sDataSample:	
   463                           ; 1 bytes @ 0x0
   464                           
   465                           
   466                           ; 1 bytes @ 0x0
   467  0020                     	ds	1
   468  0021                     spiInit@sClockIdle:
   469  0021                     readADC@pin:	
   470                           ; 1 bytes @ 0x1
   471                           
   472                           
   473                           ; 1 bytes @ 0x1
   474  0021                     	ds	1
   475  0022                     spiInit@sTransmitEdge:
   476                           
   477                           ; 1 bytes @ 0x2
   478  0022                     	ds	1
   479  0023                     spiInit@sType:
   480                           
   481                           ; 1 bytes @ 0x3
   482  0023                     	ds	1
   483  0024                     ??_main:
   484                           
   485                           ; 1 bytes @ 0x4
   486  0024                     	ds	1
   487                           
   488                           	psect	maintext
   489  0016                     __pmaintext:	
   490 ;;
   491 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   492 ;;
   493 ;; *************** function _main *****************
   494 ;; Defined at:
   495 ;;		line 35 in file "main.c"
   496 ;; Parameters:    Size  Location     Type
   497 ;;		None
   498 ;; Auto vars:     Size  Location     Type
   499 ;;		None
   500 ;; Return value:  Size  Location     Type
   501 ;;                  1    wreg      void 
   502 ;; Registers used:
   503 ;;		wreg, status,2, status,0, pclath, cstack
   504 ;; Tracked objects:
   505 ;;		On entry : B00/0
   506 ;;		On exit  : 0/0
   507 ;;		Unchanged: 0/0
   508 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   509 ;;      Params:         0       0       0       0       0
   510 ;;      Locals:         0       0       0       0       0
   511 ;;      Temps:          0       1       0       0       0
   512 ;;      Totals:         0       1       0       0       0
   513 ;;Total ram usage:        1 bytes
   514 ;; Hardware stack levels required when called:    4
   515 ;; This function calls:
   516 ;;		_initADC
   517 ;;		_readADC
   518 ;;		_spiInit
   519 ;; This function is called by:
   520 ;;		Startup code after reset
   521 ;; This function uses a non-reentrant model
   522 ;;
   523                           
   524                           
   525                           ;psect for function _main
   526  0016                     _main:
   527  0016                     l794:	
   528                           ;incstack = 0
   529                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   530                           
   531                           
   532                           ;main.c: 36:     ANSEL = 1;
   533  0016  3001               	movlw	1
   534  0017  1683               	bsf	3,5	;RP0=1, select bank3
   535  0018  1703               	bsf	3,6	;RP1=1, select bank3
   536  0019  0088               	movwf	8	;volatile
   537  001A                     l796:
   538                           
   539                           ;main.c: 37:     ANSELH= 0;
   540  001A  0189               	clrf	9	;volatile
   541  001B                     l798:
   542                           
   543                           ;main.c: 38:     INTCONbits.GIE =1;
   544  001B  178B               	bsf	11,7	;volatile
   545  001C                     l800:
   546                           
   547                           ;main.c: 39:     INTCONbits.PEIE =1;
   548  001C  170B               	bsf	11,6	;volatile
   549  001D                     l802:
   550                           
   551                           ;main.c: 40:     PIE1bits.SSPIE = 1;
   552  001D  1683               	bsf	3,5	;RP0=1, select bank1
   553  001E  1303               	bcf	3,6	;RP1=0, select bank1
   554  001F  158C               	bsf	12,3	;volatile
   555  0020                     l804:
   556                           
   557                           ;main.c: 41:     TRISB = 0;
   558  0020  0186               	clrf	6	;volatile
   559  0021                     l806:
   560                           
   561                           ;main.c: 43:     spiInit(SPI_SLAVE_SS_EN,SPI_DATA_SAMPLE_MIDDLE,
   562  0021  1283               	bcf	3,5	;RP0=0, select bank0
   563  0022  1303               	bcf	3,6	;RP1=0, select bank0
   564  0023  01A0               	clrf	spiInit@sDataSample
   565  0024  01A1               	clrf	spiInit@sClockIdle
   566  0025  01A2               	clrf	spiInit@sTransmitEdge
   567  0026  3024               	movlw	36
   568  0027  120A  118A  206B  120A  118A  	fcall	_spiInit
   569  002C                     l808:
   570                           
   571                           ;main.c: 45:     initADC();
   572  002C  120A  118A  209C  120A  118A  	fcall	_initADC
   573  0031                     l810:
   574                           
   575                           ;main.c: 48:         adcValue = readADC(0);
   576  0031  3000               	movlw	0
   577  0032  120A  118A  2089  120A  118A  	fcall	_readADC
   578  0037  1283               	bcf	3,5	;RP0=0, select bank0
   579  0038  1303               	bcf	3,6	;RP1=0, select bank0
   580  0039  00A4               	movwf	??_main
   581  003A  0824               	movf	??_main,w
   582  003B  00A5               	movwf	_adcValue
   583  003C                     l812:
   584                           
   585                           ;main.c: 49:         PORTB = adcValue;
   586  003C  0825               	movf	_adcValue,w
   587  003D  0086               	movwf	6	;volatile
   588  003E  2831               	goto	l810
   589  003F  120A  118A  280C   	ljmp	start
   590  0042                     __end_of_main:
   591                           
   592                           	psect	text1
   593  006B                     __ptext1:	
   594 ;; *************** function _spiInit *****************
   595 ;; Defined at:
   596 ;;		line 12 in file "spi.c"
   597 ;; Parameters:    Size  Location     Type
   598 ;;  sType           1    wreg     enum E1264
   599 ;;  sDataSample     1    0[BANK0 ] enum E1272
   600 ;;  sClockIdle      1    1[BANK0 ] enum E1276
   601 ;;  sTransmitEdg    1    2[BANK0 ] enum E1280
   602 ;; Auto vars:     Size  Location     Type
   603 ;;  sType           1    3[BANK0 ] enum E1264
   604 ;; Return value:  Size  Location     Type
   605 ;;                  1    wreg      void 
   606 ;; Registers used:
   607 ;;		wreg, status,2, status,0
   608 ;; Tracked objects:
   609 ;;		On entry : 0/0
   610 ;;		On exit  : 0/0
   611 ;;		Unchanged: 0/0
   612 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   613 ;;      Params:         0       3       0       0       0
   614 ;;      Locals:         0       1       0       0       0
   615 ;;      Temps:          0       0       0       0       0
   616 ;;      Totals:         0       4       0       0       0
   617 ;;Total ram usage:        4 bytes
   618 ;; Hardware stack levels used:    1
   619 ;; Hardware stack levels required when called:    3
   620 ;; This function calls:
   621 ;;		Nothing
   622 ;; This function is called by:
   623 ;;		_main
   624 ;; This function uses a non-reentrant model
   625 ;;
   626                           
   627                           
   628                           ;psect for function _spiInit
   629  006B                     _spiInit:
   630                           
   631                           ;incstack = 0
   632                           ; Regs used in _spiInit: [wreg+status,2+status,0]
   633                           ;spiInit@sType stored from wreg
   634  006B  1283               	bcf	3,5	;RP0=0, select bank0
   635  006C  1303               	bcf	3,6	;RP1=0, select bank0
   636  006D  00A3               	movwf	spiInit@sType
   637  006E                     l758:
   638                           
   639                           ;spi.c: 12: void spiInit(Spi_Type sType, Spi_Data_Sample sDataSample, Spi_Clock_Idle sCl
      +                          ockIdle, Spi_Transmit_Edge sTransmitEdge);spi.c: 13: {;spi.c: 14:     TRISC5 = 0;
   640  006E  1683               	bsf	3,5	;RP0=1, select bank1
   641  006F  1303               	bcf	3,6	;RP1=0, select bank1
   642  0070  1287               	bcf	7,5	;volatile
   643                           
   644                           ;spi.c: 15:     if(sType & 0b00000100)
   645  0071  1283               	bcf	3,5	;RP0=0, select bank0
   646  0072  1303               	bcf	3,6	;RP1=0, select bank0
   647  0073  1D23               	btfss	spiInit@sType,2
   648  0074  2876               	goto	u71
   649  0075  2877               	goto	u70
   650  0076                     u71:
   651  0076  287D               	goto	l764
   652  0077                     u70:
   653  0077                     l760:
   654                           
   655                           ;spi.c: 16:     {;spi.c: 17:         SSPSTAT = sTransmitEdge;
   656  0077  0822               	movf	spiInit@sTransmitEdge,w
   657  0078  1683               	bsf	3,5	;RP0=1, select bank1
   658  0079  1303               	bcf	3,6	;RP1=0, select bank1
   659  007A  0094               	movwf	20	;volatile
   660  007B                     l762:
   661                           
   662                           ;spi.c: 18:         TRISC3 = 1;
   663  007B  1587               	bsf	7,3	;volatile
   664                           
   665                           ;spi.c: 19:     }
   666  007C  2883               	goto	l57
   667  007D                     l764:
   668                           
   669                           ;spi.c: 21:     {;spi.c: 22:         SSPSTAT = sDataSample | sTransmitEdge;
   670  007D  0820               	movf	spiInit@sDataSample,w
   671  007E  0422               	iorwf	spiInit@sTransmitEdge,w
   672  007F  1683               	bsf	3,5	;RP0=1, select bank1
   673  0080  1303               	bcf	3,6	;RP1=0, select bank1
   674  0081  0094               	movwf	20	;volatile
   675  0082                     l766:
   676                           
   677                           ;spi.c: 23:         TRISC3 = 0;
   678  0082  1187               	bcf	7,3	;volatile
   679  0083                     l57:	
   680                           ;spi.c: 24:     }
   681                           
   682                           
   683                           ;spi.c: 26:     SSPCON = sType | sClockIdle;
   684  0083  1283               	bcf	3,5	;RP0=0, select bank0
   685  0084  1303               	bcf	3,6	;RP1=0, select bank0
   686  0085  0823               	movf	spiInit@sType,w
   687  0086  0421               	iorwf	spiInit@sClockIdle,w
   688  0087  0094               	movwf	20	;volatile
   689  0088                     l58:
   690  0088  0008               	return
   691  0089                     __end_of_spiInit:
   692                           
   693                           	psect	text2
   694  0089                     __ptext2:	
   695 ;; *************** function _readADC *****************
   696 ;; Defined at:
   697 ;;		line 33 in file "ADC.c"
   698 ;; Parameters:    Size  Location     Type
   699 ;;  pin             1    wreg     unsigned char 
   700 ;; Auto vars:     Size  Location     Type
   701 ;;  pin             1    1[BANK0 ] unsigned char 
   702 ;; Return value:  Size  Location     Type
   703 ;;                  1    wreg      unsigned char 
   704 ;; Registers used:
   705 ;;		wreg, status,2, status,0
   706 ;; Tracked objects:
   707 ;;		On entry : 0/0
   708 ;;		On exit  : 0/0
   709 ;;		Unchanged: 0/0
   710 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   711 ;;      Params:         0       0       0       0       0
   712 ;;      Locals:         0       1       0       0       0
   713 ;;      Temps:          0       1       0       0       0
   714 ;;      Totals:         0       2       0       0       0
   715 ;;Total ram usage:        2 bytes
   716 ;; Hardware stack levels used:    1
   717 ;; Hardware stack levels required when called:    3
   718 ;; This function calls:
   719 ;;		Nothing
   720 ;; This function is called by:
   721 ;;		_main
   722 ;; This function uses a non-reentrant model
   723 ;;
   724                           
   725                           
   726                           ;psect for function _readADC
   727  0089                     _readADC:
   728                           
   729                           ;incstack = 0
   730                           ; Regs used in _readADC: [wreg+status,2+status,0]
   731                           ;readADC@pin stored from wreg
   732  0089  1283               	bcf	3,5	;RP0=0, select bank0
   733  008A  1303               	bcf	3,6	;RP1=0, select bank0
   734  008B  00A1               	movwf	readADC@pin
   735  008C                     l778:
   736                           
   737                           ;ADC.c: 34:     ADCON0bits.CHS = pin;
   738  008C  0821               	movf	readADC@pin,w
   739  008D  00A0               	movwf	??_readADC
   740  008E  0DA0               	rlf	??_readADC,f
   741  008F  0DA0               	rlf	??_readADC,f
   742  0090  081F               	movf	31,w	;volatile
   743  0091  0620               	xorwf	??_readADC,w
   744  0092  39C3               	andlw	-61
   745  0093  0620               	xorwf	??_readADC,w
   746  0094  009F               	movwf	31	;volatile
   747  0095                     l780:
   748                           
   749                           ;ADC.c: 35:     ADCON0bits.GO = 1;
   750  0095  149F               	bsf	31,1	;volatile
   751  0096                     l87:	
   752                           ;ADC.c: 36:     while(ADCON0bits.GO);
   753                           
   754  0096  189F               	btfsc	31,1	;volatile
   755  0097  2899               	goto	u81
   756  0098  289A               	goto	u80
   757  0099                     u81:
   758  0099  2896               	goto	l87
   759  009A                     u80:
   760  009A                     l782:
   761                           
   762                           ;ADC.c: 37:     return ADRESH;
   763  009A  081E               	movf	30,w	;volatile
   764  009B                     l90:
   765  009B  0008               	return
   766  009C                     __end_of_readADC:
   767                           
   768                           	psect	text3
   769  009C                     __ptext3:	
   770 ;; *************** function _initADC *****************
   771 ;; Defined at:
   772 ;;		line 11 in file "ADC.c"
   773 ;; Parameters:    Size  Location     Type
   774 ;;		None
   775 ;; Auto vars:     Size  Location     Type
   776 ;;		None
   777 ;; Return value:  Size  Location     Type
   778 ;;                  1    wreg      void 
   779 ;; Registers used:
   780 ;;		wreg, status,2, status,0
   781 ;; Tracked objects:
   782 ;;		On entry : 0/0
   783 ;;		On exit  : 0/0
   784 ;;		Unchanged: 0/0
   785 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   786 ;;      Params:         0       0       0       0       0
   787 ;;      Locals:         0       0       0       0       0
   788 ;;      Temps:          0       0       0       0       0
   789 ;;      Totals:         0       0       0       0       0
   790 ;;Total ram usage:        0 bytes
   791 ;; Hardware stack levels used:    1
   792 ;; Hardware stack levels required when called:    3
   793 ;; This function calls:
   794 ;;		Nothing
   795 ;; This function is called by:
   796 ;;		_main
   797 ;; This function uses a non-reentrant model
   798 ;;
   799                           
   800                           
   801                           ;psect for function _initADC
   802  009C                     _initADC:
   803  009C                     l768:	
   804                           ;incstack = 0
   805                           ; Regs used in _initADC: [wreg+status,2+status,0]
   806                           
   807                           
   808                           ;ADC.c: 18:     ADCON0bits.ADCS = 1;
   809  009C  1283               	bcf	3,5	;RP0=0, select bank0
   810  009D  1303               	bcf	3,6	;RP1=0, select bank0
   811  009E  081F               	movf	31,w	;volatile
   812  009F  393F               	andlw	-193
   813  00A0  3840               	iorlw	64
   814  00A1  009F               	movwf	31	;volatile
   815  00A2                     l770:
   816                           
   817                           ;ADC.c: 26:     ADCON1bits.VCFG1 = 0;
   818  00A2  1683               	bsf	3,5	;RP0=1, select bank1
   819  00A3  1303               	bcf	3,6	;RP1=0, select bank1
   820  00A4  129F               	bcf	31,5	;volatile
   821  00A5                     l772:
   822                           
   823                           ;ADC.c: 27:     ADCON1bits.VCFG0 = 0;
   824  00A5  121F               	bcf	31,4	;volatile
   825  00A6                     l774:
   826                           
   827                           ;ADC.c: 28:     ADCON0bits.ADON = 1;
   828  00A6  1283               	bcf	3,5	;RP0=0, select bank0
   829  00A7  1303               	bcf	3,6	;RP1=0, select bank0
   830  00A8  141F               	bsf	31,0	;volatile
   831  00A9                     l84:
   832  00A9  0008               	return
   833  00AA                     __end_of_initADC:
   834                           
   835                           	psect	text4
   836  0042                     __ptext4:	
   837 ;; *************** function _isr *****************
   838 ;; Defined at:
   839 ;;		line 55 in file "main.c"
   840 ;; Parameters:    Size  Location     Type
   841 ;;		None
   842 ;; Auto vars:     Size  Location     Type
   843 ;;  valor           2    5[COMMON] int 
   844 ;; Return value:  Size  Location     Type
   845 ;;                  1    wreg      void 
   846 ;; Registers used:
   847 ;;		wreg, status,2, status,0, pclath, cstack
   848 ;; Tracked objects:
   849 ;;		On entry : 0/0
   850 ;;		On exit  : 0/0
   851 ;;		Unchanged: 0/0
   852 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   853 ;;      Params:         0       0       0       0       0
   854 ;;      Locals:         2       0       0       0       0
   855 ;;      Temps:          4       0       0       0       0
   856 ;;      Totals:         6       0       0       0       0
   857 ;;Total ram usage:        6 bytes
   858 ;; Hardware stack levels used:    1
   859 ;; Hardware stack levels required when called:    2
   860 ;; This function calls:
   861 ;;		_spiRead
   862 ;;		_spiWrite
   863 ;; This function is called by:
   864 ;;		Interrupt level 1
   865 ;; This function uses a non-reentrant model
   866 ;;
   867                           
   868                           
   869                           ;psect for function _isr
   870  0042                     _isr:
   871  0042                     i1l814:
   872                           
   873                           ;main.c: 56:     if(PIR1bits.SSPIF ==1){
   874  0042  1283               	bcf	3,5	;RP0=0, select bank0
   875  0043  1303               	bcf	3,6	;RP1=0, select bank0
   876  0044  1D8C               	btfss	12,3	;volatile
   877  0045  2847               	goto	u9_21
   878  0046  2848               	goto	u9_20
   879  0047                     u9_21:
   880  0047  2864               	goto	i1l41
   881  0048                     u9_20:
   882  0048                     i1l816:
   883                           
   884                           ;main.c: 57:         int valor = spiRead();
   885  0048  120A  118A  20AA  120A  118A  	fcall	_spiRead
   886  004D  00F1               	movwf	??_isr
   887  004E  01F2               	clrf	??_isr+1
   888  004F  0871               	movf	??_isr,w
   889  0050  00F5               	movwf	isr@valor
   890  0051  0872               	movf	??_isr+1,w
   891  0052  00F6               	movwf	isr@valor+1
   892  0053                     i1l818:
   893                           
   894                           ;main.c: 58:         if(valor == 1){
   895  0053  0375               	decf	isr@valor,w
   896  0054  0476               	iorwf	isr@valor+1,w
   897  0055  1D03               	btfss	3,2
   898  0056  2858               	goto	u10_21
   899  0057  2859               	goto	u10_20
   900  0058                     u10_21:
   901  0058  2861               	goto	i1l822
   902  0059                     u10_20:
   903  0059                     i1l820:
   904                           
   905                           ;main.c: 59:             spiWrite(adcValue);
   906  0059  1283               	bcf	3,5	;RP0=0, select bank0
   907  005A  1303               	bcf	3,6	;RP1=0, select bank0
   908  005B  0825               	movf	_adcValue,w
   909  005C  120A  118A  20BA  120A  118A  	fcall	_spiWrite
   910  0061                     i1l822:
   911                           
   912                           ;main.c: 61:         PIR1bits.SSPIF = 0;
   913  0061  1283               	bcf	3,5	;RP0=0, select bank0
   914  0062  1303               	bcf	3,6	;RP1=0, select bank0
   915  0063  118C               	bcf	12,3	;volatile
   916  0064                     i1l41:
   917  0064  0874               	movf	??_isr+3,w
   918  0065  008A               	movwf	10
   919  0066  0E73               	swapf	??_isr+2,w
   920  0067  0083               	movwf	3
   921  0068  0EFE               	swapf	btemp,f
   922  0069  0E7E               	swapf	btemp,w
   923  006A  0009               	retfie
   924  006B                     __end_of_isr:
   925                           
   926                           	psect	intentry
   927  0004                     __pintentry:	
   928                           ;incstack = 0
   929                           ; Regs used in _isr: [wreg+status,2+status,0+pclath+cstack]
   930                           
   931  0004                     interrupt_function:
   932  007E                     saved_w	set	btemp
   933  0004  00FE               	movwf	btemp
   934  0005  0E03               	swapf	3,w
   935  0006  00F3               	movwf	??_isr+2
   936  0007  080A               	movf	10,w
   937  0008  00F4               	movwf	??_isr+3
   938  0009  120A  118A  2842   	ljmp	_isr
   939                           
   940                           	psect	text5
   941  00BA                     __ptext5:	
   942 ;; *************** function _spiWrite *****************
   943 ;; Defined at:
   944 ;;		line 34 in file "spi.c"
   945 ;; Parameters:    Size  Location     Type
   946 ;;  dat             1    wreg     unsigned char 
   947 ;; Auto vars:     Size  Location     Type
   948 ;;  dat             1    0[COMMON] unsigned char 
   949 ;; Return value:  Size  Location     Type
   950 ;;                  1    wreg      void 
   951 ;; Registers used:
   952 ;;		wreg
   953 ;; Tracked objects:
   954 ;;		On entry : 0/0
   955 ;;		On exit  : 0/0
   956 ;;		Unchanged: 0/0
   957 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   958 ;;      Params:         0       0       0       0       0
   959 ;;      Locals:         1       0       0       0       0
   960 ;;      Temps:          0       0       0       0       0
   961 ;;      Totals:         1       0       0       0       0
   962 ;;Total ram usage:        1 bytes
   963 ;; Hardware stack levels used:    1
   964 ;; This function calls:
   965 ;;		Nothing
   966 ;; This function is called by:
   967 ;;		_isr
   968 ;; This function uses a non-reentrant model
   969 ;;
   970                           
   971                           
   972                           ;psect for function _spiWrite
   973  00BA                     _spiWrite:
   974                           
   975                           ;incstack = 0
   976                           ; Regs used in _spiWrite: [wreg]
   977                           ;spiWrite@dat stored from wreg
   978  00BA  00F0               	movwf	spiWrite@dat
   979  00BB                     i1l792:
   980                           
   981                           ;spi.c: 34: void spiWrite(char dat);spi.c: 35: {;spi.c: 36:     SSPBUF = dat;
   982  00BB  0870               	movf	spiWrite@dat,w
   983  00BC  1283               	bcf	3,5	;RP0=0, select bank0
   984  00BD  1303               	bcf	3,6	;RP1=0, select bank0
   985  00BE  0093               	movwf	19	;volatile
   986  00BF                     i1l67:
   987  00BF  0008               	return
   988  00C0                     __end_of_spiWrite:
   989                           
   990                           	psect	text6
   991  00AA                     __ptext6:	
   992 ;; *************** function _spiRead *****************
   993 ;; Defined at:
   994 ;;		line 47 in file "spi.c"
   995 ;; Parameters:    Size  Location     Type
   996 ;;		None
   997 ;; Auto vars:     Size  Location     Type
   998 ;;		None
   999 ;; Return value:  Size  Location     Type
  1000 ;;                  1    wreg      unsigned char 
  1001 ;; Registers used:
  1002 ;;		wreg, status,2, status,0, pclath, cstack
  1003 ;; Tracked objects:
  1004 ;;		On entry : 0/0
  1005 ;;		On exit  : 0/0
  1006 ;;		Unchanged: 0/0
  1007 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1008 ;;      Params:         0       0       0       0       0
  1009 ;;      Locals:         0       0       0       0       0
  1010 ;;      Temps:          0       0       0       0       0
  1011 ;;      Totals:         0       0       0       0       0
  1012 ;;Total ram usage:        0 bytes
  1013 ;; Hardware stack levels used:    1
  1014 ;; Hardware stack levels required when called:    1
  1015 ;; This function calls:
  1016 ;;		_spiReceiveWait
  1017 ;; This function is called by:
  1018 ;;		_isr
  1019 ;; This function uses a non-reentrant model
  1020 ;;
  1021                           
  1022                           
  1023                           ;psect for function _spiRead
  1024  00AA                     _spiRead:
  1025  00AA                     i1l786:	
  1026                           ;incstack = 0
  1027                           ; Regs used in _spiRead: [wreg+status,2+status,0+pclath+cstack]
  1028                           
  1029                           
  1030                           ;spi.c: 49:     spiReceiveWait();
  1031  00AA  120A  118A  20B3  120A  118A  	fcall	_spiReceiveWait
  1032  00AF                     i1l788:
  1033                           
  1034                           ;spi.c: 50:     return(SSPBUF);
  1035  00AF  1283               	bcf	3,5	;RP0=0, select bank0
  1036  00B0  1303               	bcf	3,6	;RP1=0, select bank0
  1037  00B1  0813               	movf	19,w	;volatile
  1038  00B2                     i1l75:
  1039  00B2  0008               	return
  1040  00B3                     __end_of_spiRead:
  1041                           
  1042                           	psect	text7
  1043  00B3                     __ptext7:	
  1044 ;; *************** function _spiReceiveWait *****************
  1045 ;; Defined at:
  1046 ;;		line 29 in file "spi.c"
  1047 ;; Parameters:    Size  Location     Type
  1048 ;;		None
  1049 ;; Auto vars:     Size  Location     Type
  1050 ;;		None
  1051 ;; Return value:  Size  Location     Type
  1052 ;;                  1    wreg      void 
  1053 ;; Registers used:
  1054 ;;		None
  1055 ;; Tracked objects:
  1056 ;;		On entry : 0/0
  1057 ;;		On exit  : 0/0
  1058 ;;		Unchanged: 0/0
  1059 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1060 ;;      Params:         0       0       0       0       0
  1061 ;;      Locals:         0       0       0       0       0
  1062 ;;      Temps:          0       0       0       0       0
  1063 ;;      Totals:         0       0       0       0       0
  1064 ;;Total ram usage:        0 bytes
  1065 ;; Hardware stack levels used:    1
  1066 ;; This function calls:
  1067 ;;		Nothing
  1068 ;; This function is called by:
  1069 ;;		_spiRead
  1070 ;; This function uses a non-reentrant model
  1071 ;;
  1072                           
  1073                           
  1074                           ;psect for function _spiReceiveWait
  1075  00B3                     _spiReceiveWait:
  1076  00B3                     i1l756:	
  1077                           ;incstack = 0
  1078                           ; Regs used in _spiReceiveWait: []
  1079                           
  1080  00B3                     i1l61:	
  1081                           ;spi.c: 31:     while ( !SSPSTATbits.BF );
  1082                           
  1083  00B3  1683               	bsf	3,5	;RP0=1, select bank1
  1084  00B4  1303               	bcf	3,6	;RP1=0, select bank1
  1085  00B5  1C14               	btfss	20,0	;volatile
  1086  00B6  28B8               	goto	u6_21
  1087  00B7  28B9               	goto	u6_20
  1088  00B8                     u6_21:
  1089  00B8  28B3               	goto	i1l61
  1090  00B9                     u6_20:
  1091  00B9                     i1l64:
  1092  00B9  0008               	return
  1093  00BA                     __end_of_spiReceiveWait:
  1094  007E                     btemp	set	126	;btemp
  1095  007E                     wtemp0	set	126
  1096                           
  1097                           	psect	config
  1098                           
  1099                           ;Config register CONFIG1 @ 0x2007
  1100                           ;	Oscillator Selection bits
  1101                           ;	FOSC = EXTRC_CLKOUT, RC oscillator: CLKOUT function on RA6/OSC2/CLKOUT pin, RC on RA7/
      +                          OSC1/CLKIN
  1102                           ;	Watchdog Timer Enable bit
  1103                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1104                           ;	Power-up Timer Enable bit
  1105                           ;	PWRTE = OFF, PWRT disabled
  1106                           ;	RE3/MCLR pin function select bit
  1107                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1108                           ;	Code Protection bit
  1109                           ;	CP = OFF, Program memory code protection is disabled
  1110                           ;	Data Code Protection bit
  1111                           ;	CPD = OFF, Data memory code protection is disabled
  1112                           ;	Brown Out Reset Selection bits
  1113                           ;	BOREN = OFF, BOR disabled
  1114                           ;	Internal External Switchover bit
  1115                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1116                           ;	Fail-Safe Clock Monitor Enabled bit
  1117                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1118                           ;	Low Voltage Programming Enable bit
  1119                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1120                           ;	In-Circuit Debugger Mode bit
  1121                           ;	DEBUG = 0x1, unprogrammed default
  1122  2007                     	org	8199
  1123  2007  20D7               	dw	8407
  1124                           
  1125                           ;Config register CONFIG2 @ 0x2008
  1126                           ;	Brown-out Reset Selection bit
  1127                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1128                           ;	Flash Program Memory Self Write Enable bits
  1129                           ;	WRT = OFF, Write protection off
  1130  2008                     	org	8200
  1131  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7       7
    BANK0            80      5       6
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    _isr->_spiWrite

Critical Paths under _main in BANK0

    _main->_spiInit

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0     382
                                              4 BANK0      1     1      0
                            _initADC
                            _readADC
                            _spiInit
 ---------------------------------------------------------------------------------
 (1) _spiInit                                              4     1      3     360
                                              0 BANK0      4     1      3
 ---------------------------------------------------------------------------------
 (1) _readADC                                              2     2      0      22
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _initADC                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _isr                                                  6     6      0      45
                                              1 COMMON     6     6      0
                            _spiRead
                           _spiWrite
 ---------------------------------------------------------------------------------
 (3) _spiWrite                                             1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (3) _spiRead                                              0     0      0       0
                     _spiReceiveWait
 ---------------------------------------------------------------------------------
 (4) _spiReceiveWait                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _initADC
   _readADC
   _spiInit

 _isr (ROOT)
   _spiRead
     _spiReceiveWait
   _spiWrite

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      7       7       1       50.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       D       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      5       6       5        7.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       D      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Sun Feb 14 19:53:55 2021

            _SSPSTATbits 0094                       l57 0083                       l90 009B  
                     l58 0088                       l84 00A9                       l87 0096  
                     u70 0077                       u71 0076                       u80 009A  
                     u81 0099                      l800 001C                      l810 0031  
                    l802 001D                      l812 003C                      l804 0020  
                    l806 0021                      l760 0077                      l808 002C  
                    l770 00A2                      l762 007B                      l772 00A5  
                    l780 0095                      l764 007D                      l774 00A6  
                    l782 009A                      l766 0082                      l758 006E  
                    l768 009C                      l778 008C                      l794 0016  
                    l796 001A                      l798 001B                      _isr 0042  
                   ?_isr 0070                     i1l41 0064                     i1l61 00B3  
                   i1l64 00B9                     i1l75 00B2                     i1l67 00BF  
                   u6_20 00B9                     u6_21 00B8                     u9_20 0048  
                   u9_21 0047                     _main 0016                     btemp 007E  
                   start 000C                    ??_isr 0071                    ?_main 0070  
                  _ANSEL 0188                    i1l820 0059                    i1l822 0061  
                  i1l814 0042                    i1l816 0048                    i1l818 0053  
                  i1l756 00B3                    i1l792 00BB                    i1l786 00AA  
                  i1l788 00AF                    u10_20 0059                    u10_21 0058  
                  _PORTB 0006                    _TRISB 0086          __end_of_initADC 00AA  
        __end_of_readADC 009C                    pclath 000A          __end_of_spiInit 0089  
        __end_of_spiRead 00B3                    status 0003                    wtemp0 007E  
        __initialization 000F             __end_of_main 0042                   ??_main 0024  
                 _ADRESH 001E                   _ANSELH 0189                   _TRISC3 043B  
                 _TRISC5 043D                   _SSPCON 0014                   _SSPBUF 0013  
              ??_initADC 0077                ??_readADC 0020                   saved_w 007E  
       __end_of_spiWrite 00C0                ??_spiInit 0077                ??_spiRead 0070  
__end_of__initialization 0012           __pcstackCOMMON 0070               __pbssBANK0 0025  
             __pmaintext 0016               __pintentry 0004  __size_of_spiReceiveWait 0007  
                _SSPSTAT 0094                ?_spiWrite 0070                  __ptext1 006B  
                __ptext2 0089                  __ptext3 009C                  __ptext4 0042  
                __ptext5 00BA                  __ptext6 00AA                  __ptext7 00B3  
                _initADC 009C                  _readADC 0089             __size_of_isr 0029  
                _spiInit 006B                  _spiRead 00AA     end_of_initialization 0012  
             ??_spiWrite 0070              spiWrite@dat 0070           _spiReceiveWait 00B3  
             readADC@pin 0021      start_initialization 000F              __end_of_isr 006B  
 __end_of_spiReceiveWait 00BA                ___latbits 0002            __pcstackBANK0 0020  
        ?_spiReceiveWait 0070        __size_of_spiWrite 0006                 ?_initADC 0070  
               ?_readADC 0070                 ?_spiInit 0020                 ?_spiRead 0070  
   spiInit@sTransmitEdge 0022        interrupt_function 0004                 _PIE1bits 008C  
     spiInit@sDataSample 0020                 _PIR1bits 000C               _ADCON0bits 001F  
             _ADCON1bits 009F                 _adcValue 0025         __size_of_initADC 000E  
       __size_of_readADC 0013         __size_of_spiInit 001E         __size_of_spiRead 0009  
          __size_of_main 002C                 _spiWrite 00BA             spiInit@sType 0023  
      spiInit@sClockIdle 0021               _INTCONbits 000B                 isr@valor 0075  
               intlevel1 0000         ??_spiReceiveWait 0070  
